id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/15044:182,availability,error,error,182,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:212,availability,error,error,212,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:784,availability,error,error,784,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1103,availability,error,error,1103,"ith afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1453,availability,error,error,1453,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1820,availability,error,errors,1820,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1876,availability,Error,Error,1876,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2255,availability,error,error,2255,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:87,deployability,build,building,87,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:122,deployability,build,building,122,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2299,deployability,build,build,2299,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2364,deployability,updat,updated,2364,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1654,integrability,buffer,buffer,1654,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1678,integrability,buffer,buffer,1678,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2261,integrability,messag,message,2261,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2261,interoperability,messag,message,2261,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2015,modifiability,variab,variable,2015,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:182,performance,error,error,182,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:212,performance,error,error,212,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:784,performance,error,error,784,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1103,performance,error,error,1103,"ith afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1453,performance,error,error,1453,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1820,performance,error,errors,1820,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1876,performance,Error,Error,1876,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2255,performance,error,error,2255,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:182,safety,error,error,182,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:212,safety,error,error,212,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:413,safety,safe,safemalloc,413,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:513,safety,safe,safemalloc,513,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:534,safety,safe,safemalloc,534,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:719,safety,safe,safemalloc,719,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:740,safety,safe,safemalloc,740,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:784,safety,error,error,784,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1103,safety,error,error,1103,"ith afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1453,safety,error,error,1453,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1820,safety,error,errors,1820,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1876,safety,Error,Error,1876,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2255,safety,error,error,2255,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2334,safety,test,tested,2334,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2364,safety,updat,updated,2364,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:299,security,ISO,ISO,299,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:861,security,ISO,ISO,861,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1205,security,ISO,ISO,1205,":18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1549,security,ISO,ISO,1549,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2364,security,updat,updated,2364,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2334,testability,test,tested,2334,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:151,usability,consist,consistently,151,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:182,usability,error,error,182,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:212,usability,error,error,212,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:324,usability,support,support,324,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:784,usability,error,error,784,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:886,usability,support,support,886,"Do not undef HAVE_STDLIB_H in export.c for libAfterImage; ## Changes or fixes:. - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1103,usability,error,error,1103,"ith afterimage (building ROOT from spack), I consistently get the following error:. ```. export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1230,usability,support,support,1230,"red library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1453,usability,error,error,1453,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1574,usability,support,support,1574,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1820,usability,error,errors,1820,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:1876,usability,Error,Error,1876,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15044:2255,usability,error,error,2255,"]. realfilename = safemalloc( dirname_len+filename_len+1 );. ^. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'. ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'. #define safemalloc(s) malloc(s). ^. export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. free( realfilename );. ^. export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'. export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. curr = calloc(*size, 1);. ^. export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'. export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]. buff->buffer = realloc( buff->buffer, buff->allocated_size );. ^. export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'. 4 errors generated. make[3]: *** [Makefile:346: export.o] Error 1. make[3]: *** Waiting for unfinished jobs.... ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15044
https://github.com/root-project/root/pull/15045:628,deployability,updat,update,628,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:635,deployability,releas,release,635,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:656,deployability,Updat,Update,656,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:5,modifiability,Exten,Extend,5,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:363,safety,avoid,avoid,363,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:467,safety,test,tested,467,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:628,safety,updat,update,628,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:656,safety,Updat,Update,656,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:628,security,updat,update,628,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:656,security,Updat,Update,656,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:467,testability,test,tested,467,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:306,usability,close,closer,306,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:396,usability,user,users,396,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:415,usability,custom,custom,415,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15045:676,usability,document,documentation,676,[DF] Extend parsing capabilities of CSV data source; # This Pull request:. Adds more advanced options to parse CSV files:. . - Left/right trimming. - Skipping of a given number of header/footer lines. - Comment character to skip lines / line remainders. - Impose column names. It brings the CSV datasource closer to the Pandas CSV parsing capabilities and should avoid in many cases the need for users to implement custom text file parsing code. ## Checklist:. - [X] tested changes locally. - [ ] add tutorial. - [x] add pythonization for `FromCSV` that uses named arguments for all the new options in `RCsvDS::ROptions`. - [ ] update release notes. - [ ] Update RCsvDS class documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15045
https://github.com/root-project/root/pull/15046:32,performance,memor,memory,32,[Backport v6-30][graphics] Save memory when obtaining TImageDump instance; https://github.com/root-project/root/pull/14960/.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15046
https://github.com/root-project/root/pull/15046:32,usability,memor,memory,32,[Backport v6-30][graphics] Save memory when obtaining TImageDump instance; https://github.com/root-project/root/pull/14960/.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15046
https://github.com/root-project/root/pull/15047:32,performance,memor,memory,32,[Backport v6-28][graphics] Save memory when obtaining TImageDump instance; https://github.com/root-project/root/pull/14960/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15047
https://github.com/root-project/root/pull/15047:32,usability,memor,memory,32,[Backport v6-28][graphics] Save memory when obtaining TImageDump instance; https://github.com/root-project/root/pull/14960/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15047
https://github.com/root-project/root/issues/15048:488,availability,Operat,Operating,488,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:428,deployability,version,version,428,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:449,deployability,Instal,Installation,449,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:428,integrability,version,version,428,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:29,modifiability,inherit,inheritance,29,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:166,modifiability,inherit,inheritance,166,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:233,modifiability,inherit,inheritance,233,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:254,modifiability,inherit,inheritance,254,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:282,modifiability,inherit,inheritance,282,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:428,modifiability,version,version,428,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:178,reliability,doe,does,178,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/issues/15048:528,testability,context,context,528,[ntuple] Handling of virtual inheritance broken; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15048
https://github.com/root-project/root/pull/15049:59,deployability,modul,modulemap,59,[Backport 6.28][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15049
https://github.com/root-project/root/pull/15049:59,modifiability,modul,modulemap,59,[Backport 6.28][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15049
https://github.com/root-project/root/pull/15049:59,safety,modul,modulemap,59,[Backport 6.28][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15049
https://github.com/root-project/root/pull/15050:59,deployability,modul,modulemap,59,[Backport 6.30][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15050
https://github.com/root-project/root/pull/15050:59,modifiability,modul,modulemap,59,[Backport 6.30][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15050
https://github.com/root-project/root/pull/15050:59,safety,modul,modulemap,59,[Backport 6.30][runtime_cxxmodules] Allow for changing the modulemap name to match the overlay; Backport of https://github.com/root-project/root/pull/15043 and https://github.com/root-project/root/pull/14974.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15050
https://github.com/root-project/root/pull/15051:251,deployability,updat,updated,251,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:25,modifiability,inherit,inheritance,25,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:103,modifiability,inherit,inheritance,103,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:132,modifiability,inherit,inheritance,132,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:72,safety,test,test,72,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:149,safety,test,tests,149,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:221,safety,test,tested,221,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:251,safety,updat,updated,251,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:251,security,updat,updated,251,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:67,testability,unit,unit,67,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:72,testability,test,test,72,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:149,testability,test,tests,149,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/pull/15051:221,testability,test,tested,221,[ntuple] clarify diamond inheritance; # This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15051
https://github.com/root-project/root/issues/15052:680,availability,error,error,680,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1265,availability,error,error,1265,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1930,availability,Operat,Operating,1930,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:422,deployability,observ,observed,422,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:512,deployability,instal,instalaltion,512,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:542,deployability,build,build,542,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1814,deployability,version,version,1814,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1841,deployability,Instal,Installation,1841,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1872,deployability,build,build,1872,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1047,energy efficiency,Draw,Draw,1047,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1063,energy efficiency,draw,draw,1063,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1081,energy efficiency,Draw,Draw,1081,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1098,energy efficiency,draw,draw,1098,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1128,energy efficiency,Draw,Draw,1128,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1145,energy efficiency,draw,draw,1145,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1632,energy efficiency,Draw,Draw,1632,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1648,energy efficiency,draw,draw,1648,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1666,energy efficiency,Draw,Draw,1666,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1683,energy efficiency,draw,draw,1683,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1713,energy efficiency,Draw,Draw,1713,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1730,energy efficiency,draw,draw,1730,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:282,integrability,compon,components,282,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:893,integrability,pub,public,893,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1113,integrability,compon,component,1113,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1161,integrability,compon,component,1161,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1478,integrability,pub,public,1478,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1698,integrability,compon,component,1698,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1746,integrability,compon,component,1746,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1814,integrability,version,version,1814,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:282,interoperability,compon,components,282,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1113,interoperability,compon,component,1113,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1161,interoperability,compon,component,1161,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1698,interoperability,compon,component,1698,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1746,interoperability,compon,component,1746,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:282,modifiability,compon,components,282,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1113,modifiability,compon,component,1113,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1161,modifiability,compon,component,1161,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1698,modifiability,compon,component,1698,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1746,modifiability,compon,component,1746,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1814,modifiability,version,version,1814,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:680,performance,error,error,680,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1265,performance,error,error,1265,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:680,safety,error,error,680,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:900,safety,test,test,900,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1265,safety,error,error,1265,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1485,safety,test,test,1485,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:422,testability,observ,observed,422,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:737,testability,simpl,simple,737,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:900,testability,test,test,900,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1322,testability,simpl,simple,1322,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1485,testability,test,test,1485,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1985,testability,context,context,1985,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:680,usability,error,error,680,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:737,usability,simpl,simple,737,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:877,usability,user,user,877,"[RF] Incorrect summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1265,usability,error,error,1265,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1322,usability,simpl,simple,1322,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/issues/15052:1462,usability,user,user,1462,"correct summation of two RooHist in RooHist constuctor ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples). Typically for this task I make a loop over RooPlot components and ""sum"" them manually. To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects. I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion . from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist. I've prepared a file with two `RooHist` objects in mu piblic AFS directory. ```. import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'). h1 = f.Get ( 'h1' ) ## RooHist . h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum . hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum . h1.Draw ('same') ## draw the first component . h2.Draw ('same') ## draw the second component . h1.SetLineColor(2). h2.SetLineColor(4). ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15052
https://github.com/root-project/root/pull/15053:50,deployability,Fail,Fails,50,"[core] Disable TClingLoadUnloadFileTests [v6.30]; Fails sporadically, https://github.com/root-project/root/issues/14121. (cherry picked from commit 5560b67e7f4e5ce1013a4f39bd61ae81470b5343; backport of https://github.com/root-project/root/pull/14281 as discussed during the team meeting)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15053
https://github.com/root-project/root/pull/15053:1,energy efficiency,core,core,1,"[core] Disable TClingLoadUnloadFileTests [v6.30]; Fails sporadically, https://github.com/root-project/root/issues/14121. (cherry picked from commit 5560b67e7f4e5ce1013a4f39bd61ae81470b5343; backport of https://github.com/root-project/root/pull/14281 as discussed during the team meeting)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15053
https://github.com/root-project/root/pull/15053:50,reliability,Fail,Fails,50,"[core] Disable TClingLoadUnloadFileTests [v6.30]; Fails sporadically, https://github.com/root-project/root/issues/14121. (cherry picked from commit 5560b67e7f4e5ce1013a4f39bd61ae81470b5343; backport of https://github.com/root-project/root/pull/14281 as discussed during the team meeting)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15053
https://github.com/root-project/root/pull/15053:274,security,team,team,274,"[core] Disable TClingLoadUnloadFileTests [v6.30]; Fails sporadically, https://github.com/root-project/root/issues/14121. (cherry picked from commit 5560b67e7f4e5ce1013a4f39bd61ae81470b5343; backport of https://github.com/root-project/root/pull/14281 as discussed during the team meeting)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15053
https://github.com/root-project/root/pull/15054:85,deployability,manag,management,85,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15054:85,energy efficiency,manag,management,85,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15054:78,performance,memor,memory,78,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15054:85,safety,manag,management,85,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15054:78,usability,memor,memory,78,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15054:200,usability,Close,Closes,200,"[RF] No manual `del` in RooFit/RooStats tutorials; The new cppyy has improved memory management with lifelines, so the manual calls to `del` to get the right deletion order are not necessary anymore. Closes #10891.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15054
https://github.com/root-project/root/pull/15055:285,availability,state,state,285,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:222,deployability,version,version,222,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:522,deployability,updat,updated,522,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:149,energy efficiency,current,current,149,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:222,integrability,version,version,222,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:285,integrability,state,state,285,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:24,interoperability,compatib,compatible,24,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:222,modifiability,version,version,222,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:492,safety,test,tested,492,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:522,safety,updat,updated,522,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:522,security,updat,updated,522,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15055:492,testability,test,tested,492,Allow producing forward compatible file for fBits value.; Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current. value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting. their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15055
https://github.com/root-project/root/pull/15056:41,deployability,depend,dependence,41,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:130,deployability,depend,dependency,130,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:240,deployability,version,version,240,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:289,energy efficiency,core,core,289,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:355,energy efficiency,core,core,355,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:593,energy efficiency,load,loading,593,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:648,energy efficiency,load,load,648,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:41,integrability,depend,dependence,41,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:130,integrability,depend,dependency,130,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:240,integrability,version,version,240,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1114,integrability,batch,batch,1114,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:41,modifiability,depend,dependence,41,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:130,modifiability,depend,dependency,130,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:240,modifiability,version,version,240,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:593,performance,load,loading,593,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:640,performance,time,time,640,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:648,performance,load,load,648,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1114,performance,batch,batch,1114,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:957,reliability,doe,doesn,957,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1131,reliability,doe,doesn,1131,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1181,reliability,doe,does,1181,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:24,safety,avoid,avoid,24,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:41,safety,depend,dependence,41,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:130,safety,depend,dependency,130,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1248,safety,avoid,avoiding,1248,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:41,testability,depend,dependence,41,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:130,testability,depend,dependency,130,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:550,usability,user,user,550,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:748,usability,User,Users,748,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1312,usability,Close,Closes,1312,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15056:1327,usability,Close,Closes,1327,"Remove splash screen to avoid `root.exe` dependence on x11 or cocoa; Arguments for removing the splash screen:. * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS. * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)). * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then. * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record). * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819). * `root -b -a` turns on display even if you think it should run in batch mode. * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine. * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819. Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15056
https://github.com/root-project/root/pull/15057:68,modifiability,paramet,parameter,68,"[tmva] RBatchGenerator: fix chunking, add tests, add drop_remainder parameter; Change TFDatasets to TFGenerators. Add iteration with next() option. Return target and weights data in columns. Minor fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15057
https://github.com/root-project/root/pull/15057:42,safety,test,tests,42,"[tmva] RBatchGenerator: fix chunking, add tests, add drop_remainder parameter; Change TFDatasets to TFGenerators. Add iteration with next() option. Return target and weights data in columns. Minor fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15057
https://github.com/root-project/root/pull/15057:42,testability,test,tests,42,"[tmva] RBatchGenerator: fix chunking, add tests, add drop_remainder parameter; Change TFDatasets to TFGenerators. Add iteration with next() option. Return target and weights data in columns. Minor fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15057
https://github.com/root-project/root/pull/15058:87,availability,failur,failure,87,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:22,deployability,version,version,22,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:87,deployability,fail,failure,87,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:281,deployability,build,build,281,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:287,deployability,configurat,configuration,287,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:318,deployability,build,builds,318,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:353,deployability,build,builds,353,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:308,energy efficiency,schedul,scheduled,308,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:22,integrability,version,version,22,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:287,integrability,configur,configuration,287,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:22,modifiability,version,version,22,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:287,modifiability,configur,configuration,287,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:87,performance,failur,failure,87,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:308,performance,schedul,scheduled,308,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:87,reliability,fail,failure,87,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:33,safety,Test,TestNonCentral,33,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:146,safety,test,tests,146,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:287,security,configur,configuration,287,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:33,testability,Test,TestNonCentral,33,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:146,testability,test,tests,146,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15058:178,testability,regress,regression,178,"[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`; Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:. https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15058
https://github.com/root-project/root/pull/15059:197,deployability,patch,patch,197,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:275,deployability,updat,updated,275,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:51,integrability,sub,subdirs,51,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:7,safety,avoid,avoid,7,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:197,safety,patch,patch,197,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:245,safety,test,tested,245,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:275,safety,updat,updated,275,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:197,security,patch,patch,197,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:275,security,updat,updated,275,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:182,testability,verif,verify,182,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15059:245,testability,test,tested,245,[hadd] avoid large RAM usage in hadd with multiple subdirs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13531. @romainbqt could you verify if this patch solves your problem? ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15059
https://github.com/root-project/root/pull/15061:23,deployability,manag,management,23,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:81,deployability,observ,observables,81,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:287,deployability,manag,management,287,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:23,energy efficiency,manag,management,23,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:251,energy efficiency,CPU,CPU,251,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:287,energy efficiency,manag,management,287,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:502,energy efficiency,model,model,502,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:13,modifiability,paramet,parameter,13,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:165,modifiability,variab,variables,165,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:305,modifiability,paramet,parameter,305,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:576,modifiability,variab,variables,576,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:251,performance,CPU,CPU,251,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:23,safety,manag,management,23,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:144,safety,avoid,avoids,144,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:287,safety,manag,management,287,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:594,safety,test,test,594,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:502,security,model,model,502,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:81,testability,observ,observables,81,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:589,testability,unit,unit,589,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:594,testability,test,test,594,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:185,usability,user,user,185,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/pull/15061:478,usability,confirm,confirmed,478,"[RF] Improve parameter management in `RooEvaluatorWrapper`; Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15061
https://github.com/root-project/root/issues/15062:4474,availability,Operat,Operating,4474,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1091,deployability,updat,updating,1091,"licates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:3947,deployability,version,version,3947,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4245,deployability,version,version,4245,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4430,deployability,Instal,Installation,4430,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4451,deployability,build,build,4451,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:3947,integrability,version,version,3947,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4245,integrability,version,version,4245,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:464,interoperability,bind,bindings,464,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:759,interoperability,bind,bindings-side,759,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:464,modifiability,bind,bindings,464,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:617,modifiability,paramet,parameter,617,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:759,modifiability,bind,bindings-side,759,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:3947,modifiability,version,version,3947,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4245,modifiability,version,version,4245,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1409,performance,time,time,1409,"at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = typename deduce_equation<. typename expression<Fn>::function_type>::type;. // testing... auto lmbd = [](int x){return x;};. using simple_equation_t = equation_t<decltype(lmbd)>;. auto simple_equation = simple_equatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:701,safety,valid,valid,701,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1091,safety,updat,updating,1091,"licates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:2273,safety,test,testing,2273,"ere be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = typename deduce_equation<. typename expression<Fn>::function_type>::type;. // testing... auto lmbd = [](int x){return x;};. using simple_equation_t = equation_t<decltype(lmbd)>;. auto simple_equation = simple_equation_t();. '''). # ...it worked. print(cppyy.gbl.simple_equation) # <cppyy.gbl.equation<int(int)> object at 0x108b4d000>. # things stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1091,security,updat,updating,1091,"licates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4102,security,Team,Team,4102,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:395,testability,simpl,simply,395,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1179,testability,plan,plans,1179,"OOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:2273,testability,test,testing,2273,"ere be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = typename deduce_equation<. typename expression<Fn>::function_type>::type;. // testing... auto lmbd = [](int x){return x;};. using simple_equation_t = equation_t<decltype(lmbd)>;. auto simple_equation = simple_equation_t();. '''). # ...it worked. print(cppyy.gbl.simple_equation) # <cppyy.gbl.equation<int(int)> object at 0x108b4d000>. # things stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4514,testability,context,context,4514,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:279,usability,minim,minimally,279,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:395,usability,simpl,simply,395,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:791,usability,behavi,behaviour,791,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:874,usability,minim,minimal,874,"Non-trivial type traits do not work on cppyy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts. I wanted to (1) point out two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1157,usability,help,help,1157,"t two related bugs in ROOT's cppyy, and (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. templat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:1193,usability,progress,progress,1193,"d (2) ask for advice on how such cases are handled by ROOT developers. First is a minimally reproducible bug involving pretty straightforward type trait gymnastics. The cppyy snippet below seems to simply gives up at the first non-trivial part, and no further Python bindings are possible. . The second, which I *suspect* is related/stems from the above, is cppyy sometimes ""strips"" the arguments of a function template parameter. As both pure-C++ and `cppyy.cppdef` do not make such mistakes (i.e. it's valid C++), I'm not sure what could be going wrong on the bindings-side to result in this behaviour. I have not been able to factorize this part out of my library to make a minimal example, but can be reproduced by with this [header](https://raw.githubusercontent.com/taehyounpark/queryosity/master/queryosity.h). Neither issue is present in the standalone, newer cppyy 3.0.0, so I suspect updating ROOT's cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:2103,usability,shortcut,shortcut,2103,"cppyy 1.6.2 would solve the issue. So my call for help is:. - Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon? - In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work? Thank you very much for your time! ### Reproducer. ```py. import cppyy. cppyy.cppdef('''. // some ""expression"" out of which a std::function can be constructed. template <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = typename deduce_equation<. typename expression<Fn>::function_type>::type;. // testing... auto lmbd = [](int x){return x;};. using simple_equation_t = equation_t<decltype(lmbd)>;. auto simple_equation = simple_equation_t();. '''). # ...it worked. print(cppyy.gbl.simple_equation) # <cppyy.gbl.equation<int(int)> object at 0x108b4d000>. # things stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:2539,usability,stop,stop,2539,"emplate <typename Fn> struct expression {. using function_type = decltype(std::function(std::declval<Fn>()));. };. // some ""equation"" specialized to handle such expressions. template <typename T> class equation;. template <typename Ret, typename... Args> class equation<Ret(Args...)> {};. // deduce what equation to make from std::function. template <typename Fn> struct deduce_equation;. template <typename Ret, typename... Args>. struct deduce_equation<std::function<Ret(Args...)>> {. using type = equation<std::decay_t<Ret>(. std::decay_t<Args>...)>;. };. // shortcut for expression -> function -> equation. template <typename Fn>. using equation_t = typename deduce_equation<. typename expression<Fn>::function_type>::type;. // testing... auto lmbd = [](int x){return x;};. using simple_equation_t = equation_t<decltype(lmbd)>;. auto simple_equation = simple_equation_t();. '''). # ...it worked. print(cppyy.gbl.simple_equation) # <cppyy.gbl.equation<int(int)> object at 0x108b4d000>. # things stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/issues/15062:4292,usability,help,help,4292,"gs stop mid-way in cppyy . expression_function_type = cppyy.gbl.expression['std::function<int(int)>'].function_type # <class cppyy.gbl.std.function<int(int)> at 0x7fc1ddfa8f30>. simple_deduction = cppyy.gbl.deduce_equation['std::function<int(int)>'].type # AttributeError. # simple_equation = cppyy.gbl.equation_t['std::function<int(int)>']() # works fine with cppyy 3.0.0 from here. # print(simple_equation). ```. ```py. # importing cppyy and my C++ library. import cppyy. cppyy.include('queryosity.h'). from cppyy.gbl import queryosity as q. # JIT and get some C++ function. cppyy.cppdef('''auto fn = std::function([](){return 1;});'''). fn = cppyy.gbl.fn. # use it in my templated library. df = q.dataflow(). expr = q.column.expression['std::function<int()>'](fn) # AttributeError. # one = df._equate(expr) # works fine with cppyy 3.0.0 from here. # print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int()>>> object at 0x7fc41743b690>. # okay, ""persuade"" cppyy from C++ side. cppyy.cppdef('''auto expr = queryosity::column::expression(fn);''');. one = df._equate(cppyy.gbl.expr) # worked! ... or did it? print(one) # <cppyy.gbl.queryosity.todo<queryosity::column::evaluator<queryosity::column::equation<int> > > object at 0x7ff5fefc27d0>. #################################. # how did int() become int? # more generaly, Ret(Args...) becomes Ret! ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Feb 04 2024, 02:42:45 |. | From heads/latest-stable@ |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15062
https://github.com/root-project/root/pull/15063:62,integrability,coupl,couple,62,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:62,modifiability,coupl,couple,62,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:8,safety,test,tests,8,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:33,safety,test,tests,33,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:115,safety,test,tests,115,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:8,testability,test,tests,8,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:33,testability,test,tests,33,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:62,testability,coupl,couple,62,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:115,testability,test,tests,115,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/pull/15063:221,usability,clarit,clarity,221,[cmake][tests] Fix and re-enable tests on Windows; - Export a couple of missing symbols (x86). - Re-enable several tests working now with LLVM 16 and VS 2022. - Reorganize `llvm13_broken_tests` and `win_broken_tests` for clarity.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15063
https://github.com/root-project/root/issues/15064:442,availability,error,error,442,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:773,availability,Operat,Operating,773,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:0,deployability,Build,Building,0,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:295,deployability,build,builds,295,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:364,deployability,build,build,364,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:381,deployability,instal,install,381,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:449,deployability,build,build,449,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:640,deployability,updat,update,640,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:671,deployability,build,build,671,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:717,deployability,version,version,717,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:738,deployability,Instal,Installation,738,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:717,integrability,version,version,717,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:717,modifiability,version,version,717,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:442,performance,error,error,442,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:442,safety,error,error,442,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:640,safety,updat,update,640,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:640,security,updat,update,640,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:813,testability,context,context,813,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:159,usability,behavi,behavior,159,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:221,usability,help,help,221,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:233,usability,command,command,233,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:442,usability,error,error,442,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15064:499,usability,support,supported,499,Building ROOT with CMake 3.29.0 and Ninja 1.11.1 breaks; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you. 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:. ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15064
https://github.com/root-project/root/issues/15065:17,performance,content,contents,17,"[DF] Explode RDF contents; A long-standing feature request(https://sft.its.cern.ch/jira/browse/ROOT-9225). This was requested again at ICHEP 2022 where a user pointed out they would sometimes have an easier time processing their data if they could switch from ""N taus per entry"" to ""1 tau per entry"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15065
https://github.com/root-project/root/issues/15065:207,performance,time,time,207,"[DF] Explode RDF contents; A long-standing feature request(https://sft.its.cern.ch/jira/browse/ROOT-9225). This was requested again at ICHEP 2022 where a user pointed out they would sometimes have an easier time processing their data if they could switch from ""N taus per entry"" to ""1 tau per entry"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15065
https://github.com/root-project/root/issues/15065:154,usability,user,user,154,"[DF] Explode RDF contents; A long-standing feature request(https://sft.its.cern.ch/jira/browse/ROOT-9225). This was requested again at ICHEP 2022 where a user pointed out they would sometimes have an easier time processing their data if they could switch from ""N taus per entry"" to ""1 tau per entry"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15065
https://github.com/root-project/root/pull/15066:18,deployability,Scale,Scale,18,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:211,deployability,updat,updated,211,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:18,energy efficiency,Scale,Scale,18,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:18,modifiability,Scal,Scale,18,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:18,performance,Scale,Scale,18,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:181,safety,test,tested,181,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:211,safety,updat,updated,211,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:211,security,updat,updated,211,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15066:181,testability,test,tested,181,[hist] THnSparse::Scale iterate only over non-filled bins; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13962. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15066
https://github.com/root-project/root/pull/15067:202,deployability,updat,updated,202,[hist] fix bug in TSpline3 TSpline5 save-as code; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13441. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15067
https://github.com/root-project/root/pull/15067:172,safety,test,tested,172,[hist] fix bug in TSpline3 TSpline5 save-as code; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13441. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15067
https://github.com/root-project/root/pull/15067:202,safety,updat,updated,202,[hist] fix bug in TSpline3 TSpline5 save-as code; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13441. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15067
https://github.com/root-project/root/pull/15067:202,security,updat,updated,202,[hist] fix bug in TSpline3 TSpline5 save-as code; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13441. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15067
https://github.com/root-project/root/pull/15067:172,testability,test,tested,172,[hist] fix bug in TSpline3 TSpline5 save-as code; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13441. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15067
https://github.com/root-project/root/issues/15068:121,deployability,contain,contain,121,"[DF] Add support for 2-dim, multi-dimensional arrays; A recurring feature request. TTreeReader cannot read branches that contain multi-dimensional arrays (or at least not as such, in some cases it might be able to read a flattened version). This means that we [cannot read certain branches from MiniAODs](https://root-forum.cern.ch/t/rdf-issue-with-cms-miniaod-branch/50779/3). See also https://sft.its.cern.ch/jira/browse/ROOT-9509 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15068
https://github.com/root-project/root/issues/15068:231,deployability,version,version,231,"[DF] Add support for 2-dim, multi-dimensional arrays; A recurring feature request. TTreeReader cannot read branches that contain multi-dimensional arrays (or at least not as such, in some cases it might be able to read a flattened version). This means that we [cannot read certain branches from MiniAODs](https://root-forum.cern.ch/t/rdf-issue-with-cms-miniaod-branch/50779/3). See also https://sft.its.cern.ch/jira/browse/ROOT-9509 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15068
https://github.com/root-project/root/issues/15068:231,integrability,version,version,231,"[DF] Add support for 2-dim, multi-dimensional arrays; A recurring feature request. TTreeReader cannot read branches that contain multi-dimensional arrays (or at least not as such, in some cases it might be able to read a flattened version). This means that we [cannot read certain branches from MiniAODs](https://root-forum.cern.ch/t/rdf-issue-with-cms-miniaod-branch/50779/3). See also https://sft.its.cern.ch/jira/browse/ROOT-9509 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15068
https://github.com/root-project/root/issues/15068:231,modifiability,version,version,231,"[DF] Add support for 2-dim, multi-dimensional arrays; A recurring feature request. TTreeReader cannot read branches that contain multi-dimensional arrays (or at least not as such, in some cases it might be able to read a flattened version). This means that we [cannot read certain branches from MiniAODs](https://root-forum.cern.ch/t/rdf-issue-with-cms-miniaod-branch/50779/3). See also https://sft.its.cern.ch/jira/browse/ROOT-9509 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15068
https://github.com/root-project/root/issues/15068:9,usability,support,support,9,"[DF] Add support for 2-dim, multi-dimensional arrays; A recurring feature request. TTreeReader cannot read branches that contain multi-dimensional arrays (or at least not as such, in some cases it might be able to read a flattened version). This means that we [cannot read certain branches from MiniAODs](https://root-forum.cern.ch/t/rdf-issue-with-cms-miniaod-branch/50779/3). See also https://sft.its.cern.ch/jira/browse/ROOT-9509 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15068
https://github.com/root-project/root/issues/15069:719,availability,down,downstream,719,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:939,deployability,infrastructur,infrastructure,939,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:185,energy efficiency,Current,Currently,185,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:35,integrability,event,event,35,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:226,integrability,event,event,226,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:253,integrability,transform,transformations,253,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:346,integrability,event,event,346,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:404,integrability,transform,transformation,404,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:460,integrability,event,event,460,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:762,integrability,event,event,762,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:253,interoperability,transform,transformations,253,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:404,interoperability,transform,transformation,404,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:850,reliability,doe,does,850,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:593,testability,verif,verified,593,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:1043,testability,context,context,1043,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:11,usability,user,users,11,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:51,usability,user,user-defined,51,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:360,usability,stop,stopped,360,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:806,usability,behavi,behavior,806,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15069:895,usability,stop,stopping,895,"[DF] Allow users to early-quit the event loop on a user-defined condition; ### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped. It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"". This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15069
https://github.com/root-project/root/issues/15070:1008,availability,error,error,1008,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1319,availability,Operat,Operating,1319,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:512,deployability,manag,manager,512,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:558,deployability,manag,managers,558,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:683,deployability,manag,manager,683,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:711,deployability,manag,manager,711,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:805,deployability,manag,manager,805,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:858,deployability,manag,managers,858,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1271,deployability,version,version,1271,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1289,deployability,Instal,Installation,1289,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:512,energy efficiency,manag,manager,512,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:558,energy efficiency,manag,managers,558,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:683,energy efficiency,manag,manager,683,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:711,energy efficiency,manag,manager,711,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:805,energy efficiency,manag,manager,805,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:858,energy efficiency,manag,managers,858,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1213,energy efficiency,current,currently,1213,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:355,integrability,sub,subsets,355,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:881,integrability,schema,schema,881,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:911,integrability,sub,subset,911,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1193,integrability,event,event,1193,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1271,integrability,version,version,1271,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1106,modifiability,reu,reusage,1106,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1271,modifiability,version,version,1271,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:446,performance,time,time,446,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1008,performance,error,error,1008,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:512,safety,manag,manager,512,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:558,safety,manag,managers,558,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:683,safety,manag,manager,683,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:711,safety,manag,manager,711,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:805,safety,manag,manager,805,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:858,safety,manag,managers,858,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1008,safety,error,error,1008,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:593,testability,simpl,simple,593,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1357,testability,context,context,1357,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:203,usability,user,users,203,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:593,usability,simpl,simple,593,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/issues/15070:1008,usability,error,error,1008,"[DF] Separate computation graph from dataset it should run on; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time. The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this. Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers. At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on. To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15070
https://github.com/root-project/root/pull/15071:221,deployability,updat,updated,221,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:46,integrability,filter,filters,46,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:58,interoperability,specif,specified,58,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:191,safety,test,tested,191,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:221,safety,updat,updated,221,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:221,security,updat,updated,221,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:191,testability,test,tested,191,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15071:34,usability,shortcut,shortcut,34,[io] do not use single-file-merge shortcut if filters are specified; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13359. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15071
https://github.com/root-project/root/pull/15072:128,deployability,api,api,128,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:59,energy efficiency,Adapt,Adapting,59,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:59,integrability,Adapt,Adapting,59,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:128,integrability,api,api,128,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:59,interoperability,Adapt,Adapting,59,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:128,interoperability,api,api,128,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/pull/15072:59,modifiability,Adapt,Adapting,59,[cppyy] Fix `missing-field-initializers` with Python 3.12; Adapting to a new field in Python 3.12:. https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15072
https://github.com/root-project/root/issues/15073:656,availability,Operat,Operating,656,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:447,deployability,automat,automatic,447,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:608,deployability,version,version,608,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:626,deployability,Instal,Installation,626,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:332,energy efficiency,Draw,Draw,332,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:608,integrability,version,version,608,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:289,interoperability,specif,specify,289,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:608,modifiability,version,version,608,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:447,testability,automat,automatic,447,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:694,testability,context,context,694,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15073:257,usability,user,users,257,"[DF] Axis range deduction for Histo2D and Histo3D actions in RDF; ### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-8883](https://its.cern.ch/jira/browse/ROOT-8883). It would be nice to have, not just per se, but also because users are used to not having to specify axis ranges when using e.g. TTree::Draw. The main issue is that we fill a different copy of the histogram in each thread, which means that if we used automatic axis resizing naively we would end up having to merge histograms with different binnings. See further discussion in the attached JIRA ticket. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15073
https://github.com/root-project/root/issues/15075:452,testability,context,context,452,"[DF] Add RDataFrame friends directly; ### Feature description. Moving from JIRA: [ROOT-10874](https://its.cern.ch/jira/browse/ROOT-10874). First requested in the forum [here](https://root-forum.cern.ch/t/friend-support-within-rdataframe-class), it would be very nice to be able to add RDataFrame friends directly instead of awkwardly stepping through TTree. Forum post includes usage example. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15075
https://github.com/root-project/root/issues/15075:211,usability,support,support-within-rdataframe-class,211,"[DF] Add RDataFrame friends directly; ### Feature description. Moving from JIRA: [ROOT-10874](https://its.cern.ch/jira/browse/ROOT-10874). First requested in the forum [here](https://root-forum.cern.ch/t/friend-support-within-rdataframe-class), it would be very nice to be able to add RDataFrame friends directly instead of awkwardly stepping through TTree. Forum post includes usage example. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15075
https://github.com/root-project/root/issues/15076:884,availability,Operat,Operating,884,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:519,deployability,pipelin,pipeline,519,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:836,deployability,version,version,836,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:854,deployability,Instal,Installation,854,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:633,energy efficiency,alloc,allocated,633,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:90,integrability,event,event,90,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:448,integrability,event,event,448,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:519,integrability,pipelin,pipeline,519,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:836,integrability,version,version,836,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:836,modifiability,version,version,836,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:726,performance,perform,performs,726,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:922,testability,context,context,922,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:726,usability,perform,performs,726,"[DF] Memleaks in case RDF jitted code is registered but the application never triggers an event loop; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724). Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15077:726,availability,error,error,726,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:927,availability,error,error,927,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1920,availability,Operat,Operating,1920,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:844,deployability,version,version,844,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1567,deployability,updat,updated,1567,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1859,deployability,version,version,1859,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1889,deployability,Instal,Installation,1889,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:237,energy efficiency,current,current,237,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:427,energy efficiency,current,current,427,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:435,integrability,interfac,interface,435,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:844,integrability,version,version,844,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:933,integrability,messag,message,933,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1859,integrability,version,version,1859,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:435,interoperability,interfac,interface,435,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:933,interoperability,messag,message,933,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:435,modifiability,interfac,interface,435,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:844,modifiability,version,version,844,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1113,modifiability,variab,variable,1113,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1859,modifiability,version,version,1859,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:726,performance,error,error,726,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:927,performance,error,error,927,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:278,safety,valid,valid,278,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:726,safety,error,error,726,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:927,safety,error,error,927,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1567,safety,updat,updated,1567,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1567,security,updat,updated,1567,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1958,testability,context,context,1958,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:302,usability,prefer,preferable,302,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:726,usability,error,error,726,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:927,usability,error,error,927,"Passing different floating point types to `RVec` utility functions; ### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:. https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with. ```cpp. auto dphi = DeltaPhi(3.14f, 1.23). ```. will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:. ```cpp. template <typename T, typename U = T>. std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { . // implementation unchanged apart from updated static_assert to take into account T and U. }. ```. This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/pull/15078:196,deployability,updat,updated,196,[hist] Improve precision of TSpline SaveAs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/pull/15078:166,safety,test,tested,166,[hist] Improve precision of TSpline SaveAs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/pull/15078:196,safety,updat,updated,196,[hist] Improve precision of TSpline SaveAs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/pull/15078:196,security,updat,updated,196,[hist] Improve precision of TSpline SaveAs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/pull/15078:166,testability,test,tested,166,[hist] Improve precision of TSpline SaveAs; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/issues/15079:281,availability,error,error-during-rdataframe-snapshot,281,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8162,availability,slo,slot,8162,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8279,availability,slo,slot,8279,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8338,availability,error,error,8338,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8492,availability,error,errors,8492,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8537,availability,slo,slot,8537,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8587,availability,error,errors,8587,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8657,availability,Operat,Operating,8657,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:275,deployability,stack,stack-error-during-rdataframe-snapshot,275,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8043,deployability,stack,stacktraces,8043,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8347,deployability,build,builds,8347,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8402,deployability,build,builds,8402,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8440,deployability,stack,stacktrace,8440,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8609,deployability,version,version,8609,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8627,deployability,Instal,Installation,8627,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:35,integrability,event,event,35,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:476,integrability,event,event,476,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:565,integrability,event,event,565,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:828,integrability,event,event,828,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:5640,integrability,event,eventNumber,5640,"LT_xe110_pufit_L1XE55"", ""TrigHLT_xe110_pufit_xe70_L1XE50"", ""TrigHLT_xe70_mht"", ""TrigHLT_xe90_mht_L1XE50"", ""TrigMatchHLT_e120_lhloose"", ""TrigMatchHLT_e140_lhloose_nod0"", ""TrigMatchHLT_e24_lhmedium_L1EM20VH"", ""TrigMatchHLT_e24_lhtight_nod0_ivarloose"", ""TrigMatchHLT_e26_lhtight_nod0_ivarloose"", ""TrigMatchHLT_e300_etcut"", ""TrigMatchHLT_e60_lhmedium"", ""TrigMatchHLT_e60_lhmedium_nod0"", ""TrigMatchHLT_e60_medium"", ""TrigMatchHLT_mu20_iloose_L1MU15"", ""TrigMatchHLT_mu24_iloose"", ""TrigMatchHLT_mu24_iloose_L1MU15"", ""TrigMatchHLT_mu24_imedium"", ""TrigMatchHLT_mu24_ivarloose"", ""TrigMatchHLT_mu24_ivarloose_L1MU15"", ""TrigMatchHLT_mu24_ivarmedium"", ""TrigMatchHLT_mu26_imedium"", ""TrigMatchHLT_mu26_ivarmedium"", ""TrigMatchHLT_mu40"", ""TrigMatchHLT_mu50"", ""TrigMatchHLT_mu60_0eta105_msonly"", ""TrigMatching"", ""TruthMET_met"", ""TruthMET_phi"", ""TruthMET_sumet"", ""Vtx_n"", ""XbbScoreHiggs"", ""XbbScoreQCD"", ""XbbScoreTop"", ""actualInteractionsPerCrossing"", ""averageInteractionsPerCrossing"", ""bcid"", ""corr_avgIntPerX"", ""eventNumber"", ""isOppositeCharge"", ""lumiBlock"", ""mT_METclosestBJet"", ""mT_METfarestBJet"", ""m_J"", ""m_jj"", ""m_jj_corr"", ""m_ll"", ""muWeight"", ""mu_density"", ""pt_ll"", ""runNumber"", ""sigjet012ptsum""};. 	ROOT::RDataFrame(""MonoH_Nominal"",input_files). Snapshot<Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>, Double_t, Double_t, Float_t, Float_t, Char_t, Char_t, Char_t, Char_t, Char_t, Double_t, Double_t, Double_t, Float_t, Int_t, Bool_t, Float_t, Int_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<char>,std::vector<float>,std::vector<float>, Double_t, Float_t, Float_t, Float_t, Float_t,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8609,integrability,version,version,8609,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8609,modifiability,version,version,8609,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:281,performance,error,error-during-rdataframe-snapshot,281,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:386,performance,parallel,parallel,386,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:450,performance,parallel,parallelism,450,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:619,performance,parallel,parallelism,619,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:699,performance,parallel,parallelism,699,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8338,performance,error,error,8338,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8492,performance,error,errors,8492,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8587,performance,error,errors,8587,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:494,reliability,doe,does,494,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8162,reliability,slo,slot,8162,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8279,reliability,slo,slot,8279,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8537,reliability,slo,slot,8537,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8567,reliability,doe,doesn,8567,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:281,safety,error,error-during-rdataframe-snapshot,281,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:718,safety,safe,safe,718,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:884,safety,input,input,884,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:7966,safety,test,test,7966,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8338,safety,error,error,8338,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8492,safety,error,errors,8492,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8587,safety,error,errors,8587,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:5655,security,isO,isOppositeCharge,5655,"XE55"", ""TrigHLT_xe110_pufit_xe70_L1XE50"", ""TrigHLT_xe70_mht"", ""TrigHLT_xe90_mht_L1XE50"", ""TrigMatchHLT_e120_lhloose"", ""TrigMatchHLT_e140_lhloose_nod0"", ""TrigMatchHLT_e24_lhmedium_L1EM20VH"", ""TrigMatchHLT_e24_lhtight_nod0_ivarloose"", ""TrigMatchHLT_e26_lhtight_nod0_ivarloose"", ""TrigMatchHLT_e300_etcut"", ""TrigMatchHLT_e60_lhmedium"", ""TrigMatchHLT_e60_lhmedium_nod0"", ""TrigMatchHLT_e60_medium"", ""TrigMatchHLT_mu20_iloose_L1MU15"", ""TrigMatchHLT_mu24_iloose"", ""TrigMatchHLT_mu24_iloose_L1MU15"", ""TrigMatchHLT_mu24_imedium"", ""TrigMatchHLT_mu24_ivarloose"", ""TrigMatchHLT_mu24_ivarloose_L1MU15"", ""TrigMatchHLT_mu24_ivarmedium"", ""TrigMatchHLT_mu26_imedium"", ""TrigMatchHLT_mu26_ivarmedium"", ""TrigMatchHLT_mu40"", ""TrigMatchHLT_mu50"", ""TrigMatchHLT_mu60_0eta105_msonly"", ""TrigMatching"", ""TruthMET_met"", ""TruthMET_phi"", ""TruthMET_sumet"", ""Vtx_n"", ""XbbScoreHiggs"", ""XbbScoreQCD"", ""XbbScoreTop"", ""actualInteractionsPerCrossing"", ""averageInteractionsPerCrossing"", ""bcid"", ""corr_avgIntPerX"", ""eventNumber"", ""isOppositeCharge"", ""lumiBlock"", ""mT_METclosestBJet"", ""mT_METfarestBJet"", ""m_J"", ""m_jj"", ""m_jj_corr"", ""m_ll"", ""muWeight"", ""mu_density"", ""pt_ll"", ""runNumber"", ""sigjet012ptsum""};. 	ROOT::RDataFrame(""MonoH_Nominal"",input_files). Snapshot<Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>, Double_t, Double_t, Float_t, Float_t, Char_t, Char_t, Char_t, Char_t, Char_t, Double_t, Double_t, Double_t, Float_t, Int_t, Bool_t, Float_t, Int_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<char>,std::vector<float>,std::vector<float>, Double_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:677,testability,simpl,simply,677,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:7966,testability,test,test,7966,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8359,testability,assert,asserts,8359,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8417,testability,assert,asserts,8417,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8695,testability,context,context,8695,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:281,usability,error,error-during-rdataframe-snapshot,281,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:516,usability,user,users,516,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:604,usability,support,support,604,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:677,usability,simpl,simply,677,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:779,usability,user,users,779,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:884,usability,input,input,884,"[DF] Spawning TBB tasks within RDF event loop is racy; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop). This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```. #include <ROOT/RDataFrame.hxx>. #include <TROOT.h>. #include <vector>. #include <string>. int main(). {. ROOT::EnableImplicitMT();. . for (UInt_t i = 0 ; i < 100; i++){. 	std::vector<std::string> input_files;. 	input_files.emplace_back(""test1.root"");. 	input_files.emplace_back(""test2.root"");	. std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8060,usability,clear,clear,8060,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8338,usability,error,error,8338,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8390,usability,behavi,behavior,8390,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8492,usability,error,errors,8492,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8587,usability,error,errors,8587,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>. (""test"", ""test_out.root"", columnList). .GetValue();. }. }. ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15080:280,availability,state,state,280,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:551,availability,Operat,Operating,551,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:503,deployability,version,version,503,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:521,deployability,Instal,Installation,521,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:280,integrability,state,state,280,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:503,integrability,version,version,503,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:503,modifiability,version,version,503,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:31,performance,concurren,concurrent,31,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:376,performance,concurren,concurrent,376,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:432,performance,concurren,concurrent,432,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:21,safety,test,tests,21,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:415,safety,test,test,415,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:387,security,modif,modification,387,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:21,testability,test,tests,21,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:415,testability,test,test,415,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:589,testability,context,context,589,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:9,usability,support,support,9,"[DF] Add support and tests for concurrent usage of different RDF objects from different threads; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/pull/15081:15,availability,state,state,15,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:264,availability,state,state,264,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:74,deployability,log,logic,74,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:408,deployability,log,logic,408,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:57,energy efficiency,CPU,CPU,57,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:418,energy efficiency,Reduc,Reducer,418,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:633,energy efficiency,reduc,reducer,633,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:15,integrability,state,state,15,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:264,integrability,state,state,264,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:540,integrability,sub,subtract,540,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:617,integrability,wrap,wrapper,617,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:617,interoperability,wrapper,wrapper,617,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:57,performance,CPU,CPU,57,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:74,safety,log,logic,74,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:408,safety,log,logic,408,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:668,safety,test,test,668,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:74,security,log,logic,74,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:408,security,log,logic,408,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:74,testability,log,logic,74,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:408,testability,log,logic,408,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:663,testability,unit,unit,663,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:668,testability,test,test,668,"[RF] Fix dirty state propagation for offsetting with new CPU backend; The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/issues/15082:1006,availability,Operat,Operating,1006,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:958,deployability,version,version,958,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:976,deployability,Instal,Installation,976,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:419,integrability,event,event,419,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:495,integrability,event,event,495,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:958,integrability,version,version,958,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:958,modifiability,version,version,958,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:306,reliability,doe,does,306,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:1044,testability,context,context,1044,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/issues/15082:17,usability,support,support,17,"[DF] In Histo2D, support different types of Data and Weights columns; ### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below. ```. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>. {1.,2.,3.}. ""). .Define(""Ntries"", ""10""). .Define(""Weight"", ""12"");. ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);. auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");. std::cout << temp->GetXaxis()->GetNbins() << std::endl;. return 0;. }. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/pull/15084:187,deployability,compos,composed,187,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:329,deployability,contain,containing,329,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:468,deployability,compos,composed,468,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:527,deployability,compos,compositions,527,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:626,deployability,compos,compositions,626,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1230,deployability,updat,updated,1230,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:364,energy efficiency,current,current,364,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1006,energy efficiency,model,models,1006,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1060,energy efficiency,model,models,1060,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:137,integrability,interfac,interface,137,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:263,integrability,interfac,interface,263,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:137,interoperability,interfac,interface,137,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:263,interoperability,interfac,interface,263,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:876,interoperability,specif,specify,876,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:989,interoperability,specif,specify,989,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:137,modifiability,interfac,interface,137,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:187,modifiability,compos,composed,187,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:263,modifiability,interfac,interface,263,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:468,modifiability,compos,composed,468,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:527,modifiability,compos,compositions,527,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:626,modifiability,compos,compositions,626,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:947,modifiability,extens,extension,947,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1200,safety,test,tested,1200,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1230,safety,updat,updated,1230,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:306,security,access,access,306,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1006,security,model,models,1006,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1060,security,model,models,1060,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1230,security,updat,updated,1230,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1200,testability,test,tested,1200,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:40,usability,prototyp,prototype,40,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:505,usability,support,supported,505,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:777,usability,user,users,777,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:867,usability,user,users,867,"[ntuple] Add initial `RNTupleProcessor` prototype; This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR. Other additions that will be accounted for in one or more follow-up PRs include:. - The possibility for users to provide their own entries/value pointers to the processor. - The possibility for users to specify the `RNTupleModel` used to construct the processor entry. - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/issues/15085:2160,availability,error,errors,2160,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2346,availability,Operat,Operating,2346,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:13,deployability,fail,fails,13,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:147,deployability,version,version,147,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:171,deployability,fail,fails,171,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:540,deployability,build,builds,540,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:620,deployability,version,version,620,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1558,deployability,fail,fails,1558,"/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1697,deployability,version,version,1697,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1881,deployability,fail,fails,1881,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2009,deployability,RELEAS,RELEASE,2009,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2023,deployability,build,build,2023,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2055,deployability,modul,module,2055,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2170,deployability,Fail,Failed,2170,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2227,deployability,version,version,2227,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2278,deployability,build,builds,2278,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2291,deployability,Instal,Installation,2291,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2335,deployability,build,build,2335,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:147,integrability,version,version,147,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:620,integrability,version,version,620,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:773,integrability,pub,public,773,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1697,integrability,version,version,1697,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2227,integrability,version,version,2227,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:147,modifiability,version,version,147,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:620,modifiability,version,version,620,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1697,modifiability,version,version,1697,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2055,modifiability,modul,module,2055,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2227,modifiability,version,version,2227,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2160,performance,error,errors,2160,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:13,reliability,fail,fails,13,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:171,reliability,fail,fails,171,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1558,reliability,fail,fails,1558,"/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1881,reliability,fail,fails,1881,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2170,reliability,Fail,Failed,2170,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:377,safety,compl,completeness,377,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2055,safety,modul,module,2055,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2160,safety,error,errors,2160,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:377,security,compl,completeness,377,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:192,testability,simpl,simple,192,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1930,testability,Trace,Traceback,1930,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2386,testability,context,context,2386,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:192,usability,simpl,simple,192,"PyROOT/cppyy fails with template functions overload with SFINAE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here. There is templated C++ class A. and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:. - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1985,usability,user,user,1985,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2160,usability,error,errors,2160,"# Reproducer. ```python. import ROOT. print ( 'ROOT version' , ROOT.gROOT.GetVersion() ). ROOT.gInterpreter.Declare('''. #include <type_traits> . #include <string> . template <unsigned int N>. class A. {. public:. //. template <unsigned int K,. typename std::enable_if<(K<N),int>::type = 0 >. std::string fun_1 () { return ""ququ"" ;} . //. template <unsigned int K,. typename std::enable_if<(N<=K),int>::type = 0 >. int fun_1 () { return K ;} . };. // the same with functions. template <unsigned int K,unsigned int N, . typename std::enable_if<(K<N),int>::type = 0 >. inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} . //. template <unsigned int K,unsigned int N,. typename std::enable_if<(N<=K),int>::type = 0 >. inline int fun_2 ( A<N>& ) { return K ;} . '''). N = 4 . a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) . for k in range ( 2 * N + 1 ) : . print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) . for k in range( 2 * N + 1 ) :. func = ROOT.fun_2[k,N]. print ( k , func ( a ) ) . ```. And the output is: . ```. ROOT version 6.31/01. Use templated method of templated class A<4> : it is OK. 0 ququ. 1 ququ. 2 ququ. 3 ququ. 4 4. 5 5. 6 6. 7 7. 8 8. Use templated function for templated class A<4> : it fails for k >=4. 0 ququ. 1 ququ. 2 ququ. 3 ququ. Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>. print ( k , func ( a ) ). TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 . Linux, . LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15086:2487,availability,Operat,Operating,2487,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:297,deployability,log,logic,297,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:306,deployability,updat,update,306,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2439,deployability,version,version,2439,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2457,deployability,Instal,Installation,2457,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1770,energy efficiency,model,model,1770,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1815,energy efficiency,model,model,1815,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1896,energy efficiency,model,model,1896,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2141,integrability,Event,Events,2141,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2439,integrability,version,version,2439,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2439,modifiability,version,version,2439,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:297,safety,log,logic,297,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:306,safety,updat,update,306,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:576,safety,prevent,prevents,576,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:630,safety,input,input,630,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:297,security,log,logic,297,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:306,security,updat,update,306,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:576,security,preven,prevents,576,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1770,security,model,model,1770,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1815,security,model,model,1815,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:1896,security,model,model,1896,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2319,security,RSa,RSampleInfo,2319,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:297,testability,log,logic,297,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2525,testability,context,context,2525,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill();. }. }. }. int main(). {. std::vector<std::string> filenames{. ""sample1.root"",. ""sample2.root"",. ""sample3.root""};. std::string ntpl_name = ""Events"";. create_definepersample(ntpl_name, filenames);. ROOT::RDataFrame df{ntpl_name, filenames};. auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {. return si.AsString();. });. df1.Display<std::string>({""file_name""}, 30)->Print();. }. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:23,usability,support,supported,23,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:609,usability,effectiv,effectively,609,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:630,usability,input,input,630,"DefinePerSample is not supported for RDataSource; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```. $: ./repro.out. +-----+-----------+. | Row | file_name |. +-----+-----------+. | 0 | """" |. +-----+-----------+. | 1 | """" |. +-----+-----------+. | 2 | """" |. +-----+-----------+. | 3 | """" |. +-----+-----------+. | 4 | """" |. +-----+-----------+. | 5 | """" |. +-----+-----------+. | 6 | """" |. +-----+-----------+. | 7 | """" |. +-----+-----------+. | 8 | """" |. +-----+-----------+. | 9 | """" |. +-----+-----------+. | 10 | """" |. +-----+-----------+. | 11 | """" |. +-----+-----------+. | 12 | """" |. +-----+-----------+. | 13 | """" |. +-----+-----------+. | 14 | """" |. +-----+-----------+. ```. ### Reproducer. ```cpp. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RNTupleWriter.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <TFile.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleReader.hxx>. #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;. using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames). {. for (const auto &fn : filenames). {. auto model = RNTupleModel::Create();. auto fldX = model->MakeField<ULong64_t>(""x"");. auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);. for (ULong64_t entry = 0; entry < 10; entry++). {. *fldX = entry;. ntpl->Fill()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15087:21,availability,error,error,21,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:97,availability,operat,operator,97,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:237,availability,error,error,237,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:395,availability,error,error,395,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:611,availability,error,error,611,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:687,availability,operat,operator,687,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:766,availability,error,error,766,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:914,availability,error,error,914,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1143,availability,servic,services,1143,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1521,availability,Operat,Operating,1521,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:10,deployability,fail,fails,10,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:260,deployability,build,build,260,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:362,deployability,build,build,362,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:476,deployability,build,build,476,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:521,deployability,build,build,521,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:779,deployability,build,build,779,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:824,deployability,build,build,824,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1091,deployability,log,log,1091,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1143,deployability,servic,services,1143,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1224,deployability,build,build,1224,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1230,deployability,log,log,1230,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1263,deployability,version,version,1263,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1284,deployability,Instal,Installation,1284,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1143,integrability,servic,services,1143,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1263,integrability,version,version,1263,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1143,modifiability,servic,services,1143,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1263,modifiability,version,version,1263,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:21,performance,error,error,21,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:237,performance,error,error,237,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:395,performance,error,error,395,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:611,performance,error,error,611,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:766,performance,error,error,766,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:914,performance,error,error,914,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:10,reliability,fail,fails,10,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:21,safety,error,error,21,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:237,safety,error,error,237,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:395,safety,error,error,395,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:611,safety,error,error,611,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:766,safety,error,error,766,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:914,safety,error,error,914,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1091,safety,log,log,1091,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1230,safety,log,log,1230,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1091,security,log,log,1091,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1230,security,log,log,1230,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1091,testability,log,log,1091,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1230,testability,log,log,1230,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1567,testability,context,context,1567,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:21,usability,error,error,21,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:237,usability,error,error,237,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:395,usability,error,error,395,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:611,usability,error,error,611,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:766,usability,error,error,766,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:914,usability,error,error,914,"ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt. Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'. ```. Also this throws an error. ```. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'. 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);. ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82). ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/pull/15088:57,interoperability,distribut,distributed,57,Properly clone `AsNumpyResult` objects; Motivated by the distributed execution use case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15088
https://github.com/root-project/root/pull/15089:67,usability,Close,Closes,67,[RF] Work around deleted move constructor in `std::span` backport; Closes #15087.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15089
https://github.com/root-project/root/issues/15090:989,availability,Operat,Operating,989,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:926,deployability,version,version,926,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:945,deployability,Instal,Installation,945,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:966,deployability,build,build,966,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:406,energy efficiency,core,core,406,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:532,energy efficiency,core,core,532,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:268,integrability,rout,routinely,268,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:926,integrability,version,version,926,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:926,modifiability,version,version,926,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:312,performance,lock,lock,312,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:712,performance,multi-thread,multi-threaded,712,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:37,safety,safe,safe,37,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:170,safety,safe,safe,170,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:193,safety,Test,TestBit,193,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:216,safety,safe,safe,216,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:312,security,lock,lock,312,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:193,testability,Test,TestBit,193,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:1029,testability,context,context,1029,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:594,usability,experien,experiencing,594,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:793,usability,Visual,Visual,793,"TClass::GetClassInfo() is not thread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15091:351,availability,error,error,351,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:569,availability,error,error,569,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2677,availability,error,error,2677,"anal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2895,availability,error,error,2895,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3379,availability,Error,Error,3379,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3430,availability,error,error,3430,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3680,availability,Operat,Operating,3680,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:20,deployability,modul,module,20,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:55,deployability,fail,fails,55,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:281,deployability,build,build,281,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1284,deployability,build,builds,1284,"root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Dir",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1485,deployability,build,builds,1485,"r.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1544,deployability,Version,Versions,1544,". input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1598,deployability,Version,Versions,1598,"er 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1652,deployability,Version,Versions,1652,"18083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDeri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2074,deployability,build,builds,2074,"ated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2133,deployability,build,builds,2133,"torial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2188,deployability,build,builds,2188,"```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.0043",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2244,deployability,build,builds,2244,"e"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-valu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2322,deployability,build,builds,2322,"sers/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. -------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2607,deployability,build,build,2607,"/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3365,deployability,Fail,Fail,3365,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3621,deployability,version,version,3621,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3642,deployability,Instal,Installation,3642,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3669,deployability,build,build,3669,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1544,integrability,Version,Versions,1544,". input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1598,integrability,Version,Versions,1598,"er 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1652,integrability,Version,Versions,1652,"18083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDeri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3621,integrability,version,version,3621,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:359,interoperability,plug,plugins,359,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:439,interoperability,plug,plugins,439,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2685,interoperability,plug,plugins,2685,"/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2765,interoperability,plug,plugins,2765,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:20,modifiability,modul,module,20,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1544,modifiability,Version,Versions,1544,". input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1598,modifiability,Version,Versions,1598,"er 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1652,modifiability,Version,Versions,1652,"18083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDeri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3621,modifiability,version,version,3621,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:351,performance,error,error,351,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:569,performance,error,error,569,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1230,performance,Content,Contents,1230,". In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2387,performance,time,time,2387,"C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2677,performance,error,error,2677,"anal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2895,performance,error,error,2895,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3283,performance,time,time,3283,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3379,performance,Error,Error,3379,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3430,performance,error,error,3430,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3471,performance,time,time,3471,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3523,performance,time,time,3523,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:55,reliability,fail,fails,55,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3365,reliability,Fail,Fail,3365,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:20,safety,modul,module,20,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:45,safety,test,tests,45,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:351,safety,error,error,351,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:569,safety,error,error,569,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2677,safety,error,error,2677,"anal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2895,safety,error,error,2895,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3278,safety,Test,Test,3278,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3360,safety,Test,Test,3360,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3379,safety,Error,Error,3379,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3430,safety,error,error,3430,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:594,security,ident,identifier,594,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:988,security,HasH,HasHessian,988,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1783,security,secur,security,1783,"enerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1857,security,secur,security,1857,":Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1927,security,secur,security,1927,"MultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2920,security,ident,identifier,2920,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:45,testability,test,tests,45,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3278,testability,Test,Test,3278,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3360,testability,Test,Test,3360,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3718,testability,context,context,3718,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:166,usability,User,Users,166,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:351,usability,error,error,351,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:569,usability,error,error,569,"Clad is an optional module but TFormula (and tests of) fails without it.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1196,usability,Command,Command,1196,"ter/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/maste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1258,usability,User,Users,1258,"ut_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1324,usability,User,Users,1324,"erivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1400,usability,User,Users,1400,"tiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1459,usability,User,Users,1459,"fferentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1672,usability,User,Users,1672," ^. ```. This is due to `TFormula` seemingly unconditionally running:. ```. IncludeCladRuntime. from TFormula::GenerateHessianPar(. from TFormula::HessianPar. from GeneralHessianCalc<T>::Hessian. from GeneralHessianCalc<T>::IsAvailable(fFunc). from WrappedMultiTF1Templ<T>::HasParameterHessian(). from BasicFCNL::HasHessian. from ROOT::Fit::Fitter::DoInitMinimizer. ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2048,usability,User,Users,2048," The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2105,usability,User,Users,2105,"isabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2162,usability,User,Users,2162,"h clad disabled, we get:. ```. Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2218,usability,User,Users,2218,"Make.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2296,usability,User,Users,2296,"r/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu. ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2492,usability,User,Users,2492,"ter-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3. .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2677,usability,error,error,2677,"anal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2895,usability,error,error,2895,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3047,usability,Minim,Minimizer,3047,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3379,usability,Error,Error,3379,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3430,usability,error,error,3430,"in:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra. p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working. /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake"". Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials. ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT. Output:. ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C... In file included from input_line_38:1:. /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found. #include <plugins/include/clad/Differentiator/Differentiator.h>. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_39:4:1: error: use of undeclared identifier 'clad'. clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );. ^. ****************************************. Minimizer is Minuit2 / Migrad. Chi2 = 993.065. NDf = 997. Edm = 8.36115e-22. NCalls = 47. p0 = 0.993546 +/- 0.00475134 . p1 = 0.99397 +/- 0.00434249 . p2 = 0.997895 +/- 0.000545663 . Good fit : p-value = 0.529221. <end of output>. Test time = 0.32 sec. ----------------------------------------------------------. Test Fail Reason:. Error regular expression found in output. Regex=[: error:]. ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT. ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00. ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/pull/15092:300,deployability,contain,contains,300,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:369,integrability,event,event,369,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:453,performance,time,time,453,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:85,reliability,doe,does,85,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:222,reliability,doe,does,222,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:354,safety,test,testing,354,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15092:354,testability,test,testing,354,"[reve] Print warning on missing eve element dictionary; Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15094:110,availability,Error,Error,110,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:168,deployability,updat,updated,168,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:110,performance,Error,Error,110,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:7,safety,prevent,prevent,7,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:110,safety,Error,Error,110,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:138,safety,test,tested,138,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:168,safety,updat,updated,168,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:7,security,preven,prevent,7,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:23,security,access,access,23,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:89,security,access,access,89,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:168,security,updat,updated,168,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:138,testability,test,tested,138,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:110,usability,Error,Error,110,[hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15095:230,deployability,updat,updated,230,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:28,modifiability,paramet,parameters,28,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:200,safety,test,tested,200,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:230,safety,updat,updated,230,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:230,security,updat,updated,230,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:200,testability,test,tested,200,[gui] Do not reset FitPanel parameters when ADD on top of prefitted function; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15096:245,deployability,updat,updated,245,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:215,safety,test,tested,215,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:245,safety,updat,updated,245,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:245,security,updat,updated,245,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:215,testability,test,tested,215,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:144,usability,behavi,behavior-of-setrangeuser-and-fitting-range,144,[skip-ci] clarify side effects of SetRange when fitting; # This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15097:384,availability,state,state,384,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:190,deployability,updat,update,190,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:490,deployability,updat,updated,490,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:555,deployability,log,log,555,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:628,deployability,log,log,628,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:384,integrability,state,state,384,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:190,safety,updat,update,190,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:460,safety,test,tested,460,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:490,safety,updat,updated,490,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:555,safety,log,log,555,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:628,safety,log,log,628,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:190,security,updat,update,190,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:490,security,updat,updated,490,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:555,security,log,log,555,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:628,security,log,log,628,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:460,testability,test,tested,460,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:555,testability,log,log,555,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:628,testability,log,log,628,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:201,usability,document,documentation,201,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:345,usability,guid,guide,345,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:413,usability,feedback,feedback,413,"[TMath] Add moving mean, moving median and mode; # This Pull request:. ## Changes or fixes:. Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me? I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #14258. [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15098:135,usability,Close,Closes,135,"[RF] Fixup work around deleted move constructor in `std::span` backport; This is a followup to #15089, where I missed a second change. Closes #15087.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15098
https://github.com/root-project/root/pull/15099:74,availability,failur,failures,74,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:26,deployability,build,builds,26,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:74,deployability,fail,failures,74,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,deployability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:102,deployability,build,builds,102,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,integrability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,interoperability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:61,modifiability,interm,intermittent,61,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,modifiability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:74,performance,failur,failures,74,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:74,reliability,fail,failures,74,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,reliability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,security,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:90,testability,integr,integration,90,[ci] Disable TMVA for all builds; Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15100:441,deployability,updat,updated,441,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:411,safety,test,tested,411,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:441,safety,updat,updated,441,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:441,security,updat,updated,441,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:411,testability,test,tested,411,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:361,usability,feedback,feedback,361,[TMath] Add Gradient and Laplacian methods for arrays; # This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions? I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14304 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15101:1293,deployability,updat,updated,1293,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:511,modifiability,interm,intermediate,511,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:304,reliability,doe,does,304,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1044,safety,test,tests,1044,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1263,safety,test,tested,1263,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1293,safety,updat,updated,1293,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1293,security,updat,updated,1293,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1044,testability,test,tests,1044,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1263,testability,test,tested,1263,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:852,usability,help,helper,852,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1229,usability,prefer,prefer,1229,"Relaxed rvec utils; # This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #15077 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15103:27,availability,consist,consistent,27,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:188,availability,consist,consistent,188,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:291,deployability,log,logs,291,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:240,energy efficiency,Current,Currently,240,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:233,safety,valid,valid,233,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:291,safety,log,logs,291,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:371,safety,Valid,Valid,371,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:291,security,log,logs,291,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:291,testability,log,logs,291,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:27,usability,consist,consistent,27,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:122,usability,statu,status,122,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:145,usability,minim,minimum,145,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:188,usability,consist,consistent,188,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:222,usability,minim,minimum,222,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:330,usability,Minim,Minimum,330,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:340,usability,statu,status,340,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:377,usability,minim,minimum,377,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/pull/15103:387,usability,statu,status,387,"[minuit2] make letter case consistent; # This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:. ```. Minuit2Minimizer : Invalid Minimum - status = 3. Minuit2Minimizer : Valid minimum - status = 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/issues/15104:457,availability,error,error,457,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:623,availability,Operat,Operating,623,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:17,deployability,fail,fails,17,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:167,deployability,build,build,167,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:183,deployability,observ,observed,183,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:365,deployability,version,version,365,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:504,deployability,version,version,504,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:553,deployability,build,build,553,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:567,deployability,Instal,Installation,567,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:611,deployability,build,build,611,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:365,integrability,version,version,365,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:504,integrability,version,version,504,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:365,modifiability,version,version,365,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:504,modifiability,version,version,504,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:457,performance,error,error,457,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:17,reliability,fail,fails,17,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:457,safety,error,error,457,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:183,testability,observ,observed,183,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:663,testability,context,context,663,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:457,usability,error,error,457,"new PyROOT/cppyy fails to pickle enums; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build. and I've observed that for new PyROOT/cppyy at leats some enum objects . are not pickleable anymore . ### Reproducer. Reproducer is very trivial. ```python. import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT. print ( 'enum:', a ). ## error here:. pickle.dumps ( a ). ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build . . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/pull/15105:1550,availability,down,downloading,1550,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:259,deployability,VERSION,VERSION,259,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:765,deployability,build,build,765,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:950,deployability,updat,updated,950,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1244,deployability,configurat,configuration,1244,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1584,deployability,depend,dependencies,1584,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:259,integrability,VERSION,VERSION,259,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1244,integrability,configur,configuration,1244,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1584,integrability,depend,dependencies,1584,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:259,modifiability,VERSION,VERSION,259,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:694,modifiability,variab,variables,694,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:888,modifiability,variab,variables,888,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1244,modifiability,configur,configuration,1244,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1584,modifiability,depend,dependencies,1584,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1645,modifiability,maintain,maintainers,1645,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:522,performance,perform,performed,522,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:607,performance,content,content,607,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:748,performance,content,content,748,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:142,safety,test,tested,142,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:282,safety,test,test,282,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:920,safety,test,tested,920,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:950,safety,updat,updated,950,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1584,safety,depend,dependencies,1584,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1645,safety,maintain,maintainers,1645,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:705,security,polic,policies,705,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:950,security,updat,updated,950,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1244,security,configur,configuration,1244,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:142,testability,test,tested,142,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:282,testability,test,test,282,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:920,testability,test,tested,920,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1584,testability,depend,dependencies,1584,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:522,usability,perform,performed,522,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:687,usability,custom,custom,687,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1064,usability,user,users,1064,"[cmake] Allow to populate ROOT using FetchContent; # This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:. ```cmake. cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false). include(FetchContent). FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent). #FetchContent_MakeAvailable(MyRoot). # Check if population has already been performed. FetchContent_GetProperties(MyRoot). if(NOT myroot_POPULATED). # Fetch the content using previously declared details. FetchContent_Populate(MyRoot). # Set custom variables, policies, etc. # ... # Bring the populated content into the build. add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}). endif(). ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15106:1024,availability,error,error,1024,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1018,deployability,log,logic,1018,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1070,deployability,upgrad,upgrade,1070,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1261,energy efficiency,reduc,reduce,1261,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:493,interoperability,prox,proxy,493,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:540,interoperability,prox,proxy,540,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1351,interoperability,distribut,distributed,1351,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1070,modifiability,upgrad,upgrade,1070,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1239,modifiability,refact,refactoring,1239,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:355,performance,Memor,MemoryRegulator,355,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:606,performance,Memor,MemoryRegulator,606,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1024,performance,error,error,1024,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1239,performance,refactor,refactoring,1239,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1379,performance,time,timeouts,1379,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:769,reliability,doe,doesn,769,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1018,safety,log,logic,1018,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1024,safety,error,error,1024,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1374,safety,test,test,1374,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1379,safety,timeout,timeouts,1379,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1018,security,log,logic,1018,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:797,testability,hook,hook,797,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1018,testability,log,logic,1018,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1374,testability,test,test,1374,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:48,usability,Clear,ClearProxiedObjects,48,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:129,usability,Clear,ClearProxiedObjects,129,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:355,usability,Memor,MemoryRegulator,355,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:606,usability,Memor,MemoryRegulator,606,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1024,usability,error,error,1024,"PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`; There is an infinite loop in. `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++. while (!fObjectMap.empty()) {. auto elem = fObjectMap.begin();. auto cppobj = elem->first;. auto klassid = elem->second;. auto pyclass = CreateScopeProxy(klassid);. auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {. ... } else {. // Non-owning proxy, just unregister to clean tables. // The proxy deletion by Python will have no effect on C++, so all good. MemoryRegulator::UnregisterPyObject(pyobj, pyclass);. }. }. ```. In the second code branch, the object is not removed from the `fObjMap`,. if `UnregisterPyObject` doesn't call the unregister hook because it. quits early. This can happen if there is not C++ object corresponding to. the regulated python object, causing an infinite loop because. `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed. after the cppyy upgrade. Probably the code path was not hit before. Addresses. https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/issues/15107:224,availability,echo,echo,224,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:970,availability,Operat,Operating,970,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:18,deployability,fail,fails,18,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:176,deployability,fail,fails,176,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:919,deployability,version,version,919,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:940,deployability,Instal,Installation,940,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:877,integrability,Sub,Submit,877,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:919,integrability,version,version,919,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:11,interoperability,format,format,11,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:169,interoperability,format,format,169,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:244,interoperability,format,format,244,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:341,interoperability,format,format,341,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:661,interoperability,format,format,661,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:682,interoperability,format,format,682,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:770,interoperability,format,format,770,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:919,modifiability,version,version,919,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:18,reliability,fail,fails,18,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:176,reliability,fail,fails,176,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:279,security,hash,hash,279,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:376,security,hash,hash,376,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:1008,testability,context,context,1008,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:442,usability,statu,status,442,"[ci] clang-format fails when adding commits; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```. + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'. Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d. ++ grep -i -v LinkDef. ++ sed -E 's,^.[[:space:]]+,,'. ++ grep -v -E '^D +'. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + COMMIT_FILES=. +++ which clang-format. ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format. fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d. + RESULT_OUTPUT=. ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15108:334,availability,Operat,Operating,334,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:283,deployability,version,version,283,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:304,deployability,Instal,Installation,304,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:126,integrability,sub,subject,126,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:224,integrability,Event,Event,224,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:283,integrability,version,version,283,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:15,interoperability,format,format,15,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:143,interoperability,format,format,143,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:283,modifiability,version,version,283,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:202,reliability,pra,pragma,202,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/issues/15108:372,testability,context,context,372,Turn off clang-format for Linkdef files; ### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```. #pragma link C++ class Event + ;. ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/pull/15109:95,availability,failur,failures,95,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:32,deployability,version,version,32,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:95,deployability,fail,failures,95,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:104,deployability,observ,observed,104,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:32,integrability,version,version,32,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:32,modifiability,version,version,32,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:95,performance,failur,failures,95,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:95,reliability,fail,failures,95,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15109:104,testability,observ,observed,104,[tmva] Backport from master new version of TMVA tutorials; This PR should fix some of sporadic failures observed in some TMVA tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15110:196,deployability,fail,fails-for-a-very-large-number-of-entries,196,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:295,deployability,updat,updated,295,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:35,interoperability,format,format,35,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:115,interoperability,format,format,115,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:196,reliability,fail,fails-for-a-very-large-number-of-entries,196,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:128,safety,safe,safety-bounds-checking,128,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:265,safety,test,tested,265,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:295,safety,updat,updated,295,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:295,security,updat,updated,295,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:265,testability,test,tested,265,[hist] TPrincipal bounds check and format; # This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15112:371,deployability,updat,updated,371,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:15,interoperability,Specif,Specify,15,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:341,safety,test,tested,341,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:371,safety,updat,updated,371,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:371,security,updat,updated,371,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:341,testability,test,tested,341,"[skip-ci,math] Specify that returned weight is not normalized; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15113:49,energy efficiency,reduc,reduces,49,Remove concurrent usage of TClass::TestBit; This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15113:7,performance,concurren,concurrent,7,Remove concurrent usage of TClass::TestBit; This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15113:35,safety,Test,TestBit,35,Remove concurrent usage of TClass::TestBit; This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15113:35,testability,Test,TestBit,35,Remove concurrent usage of TClass::TestBit; This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15113:91,usability,behavi,behavior,91,Remove concurrent usage of TClass::TestBit; This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15114:23,deployability,instal,install,23,[cmake][windows] Don't install system DLLs; Fix Jira issue ROOT-10926 https://its.cern.ch/jira/browse/ROOT-10926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15114
https://github.com/root-project/root/pull/15115:22,deployability,depend,dependency,22,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:60,deployability,depend,dependency,60,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:22,integrability,depend,dependency,22,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:60,integrability,depend,dependency,60,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:22,modifiability,depend,dependency,22,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:60,modifiability,depend,dependency,60,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:22,safety,depend,dependency,22,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:60,safety,depend,dependency,60,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:22,testability,depend,dependency,22,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15115:60,testability,depend,dependency,60,[tmva][tutorials] Fix dependency of TMVA tutorials; Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15116:950,availability,avail,available,950,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:70,deployability,version,version,70,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:322,deployability,build,build,322,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:255,energy efficiency,Current,Currently,255,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:466,energy efficiency,Current,Currently,466,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:70,integrability,version,version,70,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:480,integrability,pub,public,480,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:487,integrability,interfac,interface,487,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:722,integrability,interfac,interface,722,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:487,interoperability,interfac,interface,487,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:722,interoperability,interfac,interface,722,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:70,modifiability,version,version,70,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:487,modifiability,interfac,interface,487,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:722,modifiability,interfac,interface,722,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:24,performance,memor,memory,24,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:117,performance,memor,memory,117,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:292,performance,memor,memory,292,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:333,performance,time,time,333,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:950,reliability,availab,available,950,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:950,safety,avail,available,950,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:652,security,hash,hash-based,652,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:950,security,availab,available,950,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:24,usability,memor,memory,24,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:37,usability,prototyp,prototype,37,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:117,usability,memor,memory,117,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:292,usability,memor,memory,292,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:459,usability,user,users,459,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:973,usability,clear,clear,973,"[ntuple] Add initial in-memory index prototype; This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/issues/15117:947,availability,operat,operator,947,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1024,availability,operat,operator,1024,"sting code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1772,availability,Operat,Operating,1772,"fault;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2000,availability,error,error,2000,"= default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2881,availability,sli,slightly,2881,"mplate func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-interna",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24698,availability,state,state,24698,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7,deployability,updat,update,7,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:126,deployability,updat,update,126,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:218,deployability,manag,managed,218,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1556,deployability,version,version,1556,"see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1618,deployability,fail,fail,1618,"OOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1686,deployability,Instal,Installation,1686,"ream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1761,deployability,build,build,1761," ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1926,deployability,updat,updated,1926,"elete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3154,deployability,stack,stack,3154,"_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3361,deployability,stack,stack,3361,"11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4965,deployability,Modul,Modules,4965,"af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5055,deployability,Modul,Modules,5055,"e=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9101,deployability,Modul,Modules,9101,"n/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10022,deployability,build,build-stage,10022,":61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10040,deployability,stage,stage-root-,10040,"58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10154,deployability,Stack,StackTrace,10154,"thread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10224,deployability,build,build-stage,10224,"7 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10242,deployability,stage,stage-root-,10242,"c3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10442,deployability,build,build-stage,10442,"54) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10460,deployability,stage,stage-root-,10460," 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10728,deployability,build,build-stage,10728,"=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10746,deployability,stage,stage-root-,10746,"ptions=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11027,deployability,build,build-stage,11027,"/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11045,deployability,stage,stage-root-,11045,"6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11654,deployability,build,build-stage,11654," (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11672,deployability,stage,stage-root-,11672,"out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11937,deployability,build,build-stage,11937,"0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11955,deployability,stage,stage-root-,11955,"g=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/binding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12244,deployability,build,build-stage,12244,"lener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12262,deployability,stage,stage-root-,12262,"spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12565,deployability,build,build-stage,12565,", args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12583,deployability,stage,stage-root-,12583,"1d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12874,deployability,build,build-stage,12874,"od=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12892,deployability,stage,stage-root-,12892,") at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Templ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13190,deployability,build,build-stage,13190,"ea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13208,deployability,stage,stage-root-,13208,"e/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=922",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13494,deployability,build,build-stage,13494,"out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13512,deployability,stage,stage-root-,13512,"zed out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13778,deployability,build,build-stage,13778,"e0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13796,deployability,stage,stage-root-,13796,"x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16514,deployability,Modul,Modules,16514,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16581,deployability,Modul,Modules,16581,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16652,deployability,Modul,Modules,16652,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16693,deployability,Modul,Modules,16693,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. pre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16776,deployability,Modul,Modules,16776," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16861,deployability,Modul,Modules,16861,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17496,deployability,stack,stack,17496,"f586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17952,deployability,stack,stack,17952,"3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18605,deployability,build,build-stage,18605,"ore running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18623,deployability,stage,stage-root-,18623,"ay get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18888,deployability,build,build-stage,18888,"and (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18906,deployability,stage,stage-root-,18906,"the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/binding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19195,deployability,build,build-stage,19195,"lener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19213,deployability,stage,stage-root-,19213,"spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19516,deployability,build,build-stage,19516,", args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19534,deployability,stage,stage-root-,19534,"1d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19825,deployability,build,build-stage,19825,"od=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19843,deployability,stage,stage-root-,19843,") at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Templ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20141,deployability,build,build-stage,20141,"ea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20159,deployability,stage,stage-root-,20159,"e/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=922",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20445,deployability,build,build-stage,20445,"out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20463,deployability,stage,stage-root-,20463,"zed out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20729,deployability,build,build-stage,20729,"e0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20747,deployability,stage,stage-root-,20747,"x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23465,deployability,Modul,Modules,23465,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23532,deployability,Modul,Modules,23532,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Templa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23603,deployability,Modul,Modules,23603,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23644,deployability,Modul,Modules,23644,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23727,deployability,Modul,Modules,23727," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23812,deployability,Modul,Modules,23812,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24476,deployability,modul,module,24476,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24557,deployability,fail,failed,24557,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24715,deployability,Fail,Failed,24715,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24761,deployability,Fail,Failed,24761,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24998,deployability,observ,observe,24998,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25115,deployability,version,version,25115,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25210,deployability,version,version,25210,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:218,energy efficiency,manag,managed,218,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:643,energy efficiency,Load,LoadText,643,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1632,energy efficiency,current,current,1632,"preter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2708,energy efficiency,current,current,2708,"04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3785,energy efficiency,clock,clockid,3785,"ePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4027,energy efficiency,clock,clockid,4027,"e breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4035,energy efficiency,clock,clockid,4035," with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4227,energy efficiency,clock,clockid,4227,"ak *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4605,energy efficiency,optim,optimized,4605,"pected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4944,energy efficiency,optim,optimized,4944,"utex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5013,energy efficiency,optim,optimized,5013,"entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5034,energy efficiency,optim,optimized,5034,"kid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5181,energy efficiency,optim,optimized,5181,"ond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/cev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5206,energy efficiency,optim,optimized,5206,"0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5526,energy efficiency,optim,optimized,5526,"l/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5787,energy efficiency,optim,optimized,5787,"256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5806,energy efficiency,optim,optimized,5806,"73c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5833,energy efficiency,optim,optimized,5833,"read (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6084,energy efficiency,optim,optimized,6084,"007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=922337203685477",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6106,energy efficiency,optim,optimized,6106,"ction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6132,energy efficiency,optim,optimized,6132,"x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6157,energy efficiency,optim,optimized,6157,"5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6418,energy efficiency,optim,optimized,6418,"nclude/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6437,energy efficiency,optim,optimized,6437,"ract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6464,energy efficiency,optim,optimized,6464,"ctorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6715,energy efficiency,optim,optimized,6715,"3b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6737,energy efficiency,optim,optimized,6737,":5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6763,energy efficiency,optim,optimized,6763,"meDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6788,energy efficiency,optim,optimized,6788,"zed out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7101,energy efficiency,optim,optimized,7101,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7362,energy efficiency,optim,optimized,7362,"eval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7381,energy efficiency,optim,optimized,7381,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7408,energy efficiency,optim,optimized,7408,"ate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7659,energy efficiency,optim,optimized,7659,"tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7681,energy efficiency,optim,optimized,7681," con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7707,energy efficiency,optim,optimized,7707,"s=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7732,energy efficiency,optim,optimized,7732,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8045,energy efficiency,optim,optimized,8045,"ll (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af5874",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8306,energy efficiency,optim,optimized,8306,"eval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8325,energy efficiency,optim,optimized,8325,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8352,energy efficiency,optim,optimized,8352,"ate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8603,energy efficiency,optim,optimized,8603,"tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8625,energy efficiency,optim,optimized,8625," con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8651,energy efficiency,optim,optimized,8651,"s=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8676,energy efficiency,optim,optimized,8676,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8930,energy efficiency,optim,optimized,8930," at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8975,energy efficiency,optim,optimized,8975,"bject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9180,energy efficiency,optim,optimized,9180,"ointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9273,energy efficiency,optim,optimized,9273,"l_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcog",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9694,energy efficiency,optim,optimized,9694,"on/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9844,energy efficiency,optim,optimized,9844,"fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9948,energy efficiency,optim,optimized,9948,"7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10102,energy efficiency,core,core,10102,"ules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10304,energy efficiency,core,core,10304,"_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10668,energy efficiency,optim,optimized,10668,"__GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11107,energy efficiency,core,core,11107,"ix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::Vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11534,energy efficiency,optim,optimized,11534,"ppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12136,energy efficiency,optim,optimized,12136,". #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12444,energy efficiency,optim,optimized,12444," (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12468,energy efficiency,optim,optimized,12468,"001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12490,energy efficiency,optim,optimized,12490,"007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12512,energy efficiency,optim,optimized,12512,"perCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13091,energy efficiency,optim,optimized,13091,"amespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=key",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13115,energy efficiency,optim,optimized,13115,":Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13137,energy efficiency,optim,optimized,13137,"zed out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14588,energy efficiency,optim,optimized,14588,"yy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14849,energy efficiency,optim,optimized,14849,"src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14868,energy efficiency,optim,optimized,14868,"/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14895,energy efficiency,optim,optimized,14895,"eProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af58",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:15550,energy efficiency,optim,optimized,15550,"argsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16820,energy efficiency,optim,optimized,16820,"0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please subm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16842,energy efficiency,optim,optimized,16842,"t=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17183,energy efficiency,optim,optimized,17183,"07af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17205,energy efficiency,optim,optimized,17205,"n_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17232,energy efficiency,optim,optimized,17232,"ry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18485,energy efficiency,optim,optimized,18485,"f the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19087,energy efficiency,optim,optimized,19087,"============================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19395,energy efficiency,optim,optimized,19395," (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19419,energy efficiency,optim,optimized,19419,"001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19441,energy efficiency,optim,optimized,19441,"007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19463,energy efficiency,optim,optimized,19463,"perCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20042,energy efficiency,optim,optimized,20042,"amespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=key",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20066,energy efficiency,optim,optimized,20066,":Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20088,energy efficiency,optim,optimized,20088,"zed out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21539,energy efficiency,optim,optimized,21539,"yy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21800,energy efficiency,optim,optimized,21800,"src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21819,energy efficiency,optim,optimized,21819,"/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21846,energy efficiency,optim,optimized,21846,"eProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af58",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:22501,energy efficiency,optim,optimized,22501,"argsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23771,energy efficiency,optim,optimized,23771,"0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to insta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23793,energy efficiency,optim,optimized,23793,"t=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24134,energy efficiency,optim,optimized,24134,"07af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24156,energy efficiency,optim,optimized,24156,"n_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24183,energy efficiency,optim,optimized,24183,"ry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:837,integrability,pub,public,837,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1556,integrability,version,version,1556,"see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5438,integrability,abstract,abstract,5438,"x. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5588,integrability,abstract,abstract,5588,"MEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7013,integrability,abstract,abstract,7013,"_PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7163,integrability,abstract,abstract,7163,"out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7957,integrability,abstract,abstract,7957,"4a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8107,integrability,abstract,abstract,8107,"out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8883,integrability,abstract,abstract,8883," callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11513,integrability,Wrap,WrapperCall,11513,"rc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14322,integrability,abstract,abstract,14322,"1 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14501,integrability,abstract,abstract,14501,"/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14650,integrability,abstract,abstract,14650,"n CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17821,integrability,sub,submit,17821,"mized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18464,integrability,Wrap,WrapperCall,18464,"ion. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21273,integrability,abstract,abstract,21273,"1 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21452,integrability,abstract,abstract,21452,"/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21601,integrability,abstract,abstract,21601,"n CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24698,integrability,state,state,24698,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25115,integrability,version,version,25115,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25210,integrability,version,version,25210,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:469,interoperability,standard,standard,469,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10522,interoperability,bind,bindings,10522,"at_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10808,interoperability,bind,bindings,10808,"af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11513,interoperability,Wrapper,WrapperCall,11513,"rc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11734,interoperability,bind,bindings,11734,"e/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12017,interoperability,bind,bindings,12017,"spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12324,interoperability,bind,bindings,12324,"io32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12645,interoperability,bind,bindings,12645,"pack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12954,interoperability,bind,bindings,12954,"ge-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13270,interoperability,bind,bindings,13270,".30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13574,interoperability,bind,bindings,13574,"pack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=92233720368547758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13858,interoperability,bind,bindings,13858,"spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18464,interoperability,Wrapper,WrapperCall,18464,"ion. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18685,interoperability,bind,bindings,18685,"rum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18968,interoperability,bind,bindings,18968,"ove as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19275,interoperability,bind,bindings,19275,"io32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19596,interoperability,bind,bindings,19596,"pack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19905,interoperability,bind,bindings,19905,"ge-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20221,interoperability,bind,bindings,20221,".30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20525,interoperability,bind,bindings,20525,"pack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=92233720368547758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20809,interoperability,bind,bindings,20809,"spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1556,modifiability,version,version,1556,"see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4965,modifiability,Modul,Modules,4965,"af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5055,modifiability,Modul,Modules,5055,"e=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5438,modifiability,abstract,abstract,5438,"x. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5588,modifiability,abstract,abstract,5588,"MEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7013,modifiability,abstract,abstract,7013,"_PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7163,modifiability,abstract,abstract,7163,"out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7957,modifiability,abstract,abstract,7957,"4a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8107,modifiability,abstract,abstract,8107,"out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8883,modifiability,abstract,abstract,8883," callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9101,modifiability,Modul,Modules,9101,"n/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10522,modifiability,bind,bindings,10522,"at_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10808,modifiability,bind,bindings,10808,"af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11734,modifiability,bind,bindings,11734,"e/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12017,modifiability,bind,bindings,12017,"spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12324,modifiability,bind,bindings,12324,"io32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12645,modifiability,bind,bindings,12645,"pack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12954,modifiability,bind,bindings,12954,"ge-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13270,modifiability,bind,bindings,13270,".30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13574,modifiability,bind,bindings,13574,"pack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=92233720368547758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13858,modifiability,bind,bindings,13858,"spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14322,modifiability,abstract,abstract,14322,"1 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14501,modifiability,abstract,abstract,14501,"/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14650,modifiability,abstract,abstract,14650,"n CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16514,modifiability,Modul,Modules,16514,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16581,modifiability,Modul,Modules,16581,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16652,modifiability,Modul,Modules,16652,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16693,modifiability,Modul,Modules,16693,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. pre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16776,modifiability,Modul,Modules,16776," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16861,modifiability,Modul,Modules,16861,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17599,modifiability,variab,variable,17599,"9 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18685,modifiability,bind,bindings,18685,"rum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18968,modifiability,bind,bindings,18968,"ove as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19275,modifiability,bind,bindings,19275,"io32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19596,modifiability,bind,bindings,19596,"pack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19905,modifiability,bind,bindings,19905,"ge-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20221,modifiability,bind,bindings,20221,".30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20525,modifiability,bind,bindings,20525,"pack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=92233720368547758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20809,modifiability,bind,bindings,20809,"spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21273,modifiability,abstract,abstract,21273,"1 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21452,modifiability,abstract,abstract,21452,"/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21601,modifiability,abstract,abstract,21601,"n CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23465,modifiability,Modul,Modules,23465,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23532,modifiability,Modul,Modules,23532,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Templa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23603,modifiability,Modul,Modules,23603,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23644,modifiability,Modul,Modules,23644,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23727,modifiability,Modul,Modules,23727," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23812,modifiability,Modul,Modules,23812,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24476,modifiability,modul,module,24476,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25115,modifiability,version,version,25115,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:25210,modifiability,version,version,25210,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:643,performance,Load,LoadText,643,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:669,performance,memor,memory,669,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2000,performance,error,error,2000,"= default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4605,performance,optimiz,optimized,4605,"pected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4944,performance,optimiz,optimized,4944,"utex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4973,performance,time,timemodule,4973,"6c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5013,performance,optimiz,optimized,5013,"entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5034,performance,optimiz,optimized,5034,"kid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5063,performance,time,timemodule,5063,". entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5181,performance,optimiz,optimized,5181,"ond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/cev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5206,performance,optimiz,optimized,5206,"0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5526,performance,optimiz,optimized,5526,"l/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5787,performance,optimiz,optimized,5787,"256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5806,performance,optimiz,optimized,5806,"73c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5833,performance,optimiz,optimized,5833,"read (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6084,performance,optimiz,optimized,6084,"007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=922337203685477",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6106,performance,optimiz,optimized,6106,"ction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6132,performance,optimiz,optimized,6132,"x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6157,performance,optimiz,optimized,6157,"5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6418,performance,optimiz,optimized,6418,"nclude/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6437,performance,optimiz,optimized,6437,"ract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6464,performance,optimiz,optimized,6464,"ctorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6715,performance,optimiz,optimized,6715,"3b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6737,performance,optimiz,optimized,6737,":5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6763,performance,optimiz,optimized,6763,"meDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6788,performance,optimiz,optimized,6788,"zed out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7101,performance,optimiz,optimized,7101,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7362,performance,optimiz,optimized,7362,"eval.c:5945. #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7381,performance,optimiz,optimized,7381,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7408,performance,optimiz,optimized,7408,"ate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277. #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7659,performance,optimiz,optimized,7659,"tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7681,performance,optimiz,optimized,7681," con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7707,performance,optimiz,optimized,7707,"s=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7732,performance,optimiz,optimized,7732,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8045,performance,optimiz,optimized,8045,"ll (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123. #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af5874",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8306,performance,optimiz,optimized,8306,"eval.c:5893. #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8325,performance,optimiz,optimized,8325,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8352,performance,optimiz,optimized,8352,"ate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8603,performance,optimiz,optimized,8603,"tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8625,performance,optimiz,optimized,8625," con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8651,performance,optimiz,optimized,8651,"s=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8676,performance,optimiz,optimized,8676,"optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8930,performance,optimiz,optimized,8930," at ./Include/cpython/abstract.h:114. #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8975,performance,optimiz,optimized,8975,"bject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9180,performance,optimiz,optimized,9180,"ointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9273,performance,optimiz,optimized,9273,"l_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcog",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9694,performance,optimiz,optimized,9694,"on/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9844,performance,optimiz,optimized,9844,"fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9948,performance,optimiz,optimized,9948,"7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10668,performance,optimiz,optimized,10668,"__GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11534,performance,optimiz,optimized,11534,"ppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12136,performance,optimiz,optimized,12136,". #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12444,performance,optimiz,optimized,12444," (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12468,performance,optimiz,optimized,12468,"001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12490,performance,optimiz,optimized,12490,"007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12512,performance,optimiz,optimized,12512,"perCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13091,performance,optimiz,optimized,13091,"amespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=key",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13115,performance,optimiz,optimized,13115,":Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13137,performance,optimiz,optimized,13137,"zed out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14588,performance,optimiz,optimized,14588,"yy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14849,performance,optimiz,optimized,14849,"src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14868,performance,optimiz,optimized,14868,"/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14895,performance,optimiz,optimized,14895,"eProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af58",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:15550,performance,optimiz,optimized,15550,"argsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16820,performance,optimiz,optimized,16820,"0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please subm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16842,performance,optimiz,optimized,16842,"t=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17183,performance,optimiz,optimized,17183,"07af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17205,performance,optimiz,optimized,17205,"n_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17232,performance,optimiz,optimized,17232,"ry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18485,performance,optimiz,optimized,18485,"f the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19087,performance,optimiz,optimized,19087,"============================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19395,performance,optimiz,optimized,19395," (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19419,performance,optimiz,optimized,19419,"001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19441,performance,optimiz,optimized,19441,"007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19463,performance,optimiz,optimized,19463,"perCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20042,performance,optimiz,optimized,20042,"amespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=key",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20066,performance,optimiz,optimized,20066,":Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20088,performance,optimiz,optimized,20088,"zed out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this. entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786. #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21539,performance,optimiz,optimized,21539,"yy/CPyCppyy/src/CPPOverload.cxx:567. #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21800,performance,optimiz,optimized,21800,"src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21819,performance,optimiz,optimized,21819,"/cppyy/CPyCppyy/src/TemplateProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21846,performance,optimiz,optimized,21846,"eProxy.cxx:621. #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate. entry=0x5fe0e474d0c0, callable=callable. entry=0x7af5722e0040, args=args. entry=0x7af586c1dbb0, nargs=1, keywords=keywords. entry=0x0) at Objects/call.c:215. #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112. #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99. #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af58",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:22501,performance,optimiz,optimized,22501,"argsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123. #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893. #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23771,performance,optimiz,optimized,23771,"0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to insta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23793,performance,optimiz,optimized,23793,"t=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24134,performance,optimiz,optimized,24134,"07af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24156,performance,optimiz,optimized,24156,"n_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24183,performance,optimiz,optimized,24183,"ry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1618,reliability,fail,fail,1618,"OOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2881,reliability,sli,slightly,2881,"mplate func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-interna",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24557,reliability,fail,failed,24557,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24715,reliability,Fail,Failed,24715,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24761,reliability,Fail,Failed,24761,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7,safety,updat,update,7,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:126,safety,updat,update,126,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:218,safety,manag,managed,218,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:355,safety,compl,completely,355,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1926,safety,updat,updated,1926,"elete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2000,safety,error,error,2000,"= default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4965,safety,Modul,Modules,4965,"af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5055,safety,Modul,Modules,5055,"e=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval_gil.h:256. #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate. entry=0x5fe0e89423b0) at Python/ceval.c:547. #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077. #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370. #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516. #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123. #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9101,safety,Modul,Modules,9101,"n/abstract.h:123. #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893. #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198. #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46. #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067. #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114. #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61. #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100. #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248. #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442. #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):. #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffea3a8ed78, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16514,safety,Modul,Modules,16514,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16581,safety,Modul,Modules,16581,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16652,safety,Modul,Modules,16652,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16693,safety,Modul,Modules,16693,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. pre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16776,safety,Modul,Modules,16776," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16861,safety,Modul,Modules,16861,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23465,safety,Modul,Modules,23465,"onrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23532,safety,Modul,Modules,23532,"entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Templa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23603,safety,Modul,Modules,23603,"als. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23644,safety,Modul,Modules,23644,"ntry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23727,safety,Modul,Modules,23727," #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23812,safety,Modul,Modules,23812,"als=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24476,safety,modul,module,24476,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7,security,updat,update,7,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:126,security,updat,update,126,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:355,security,compl,completely,355,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1926,security,updat,updated,1926,"elete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11147,security,sign,signal,11147,"em::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183. #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196. #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626. #8 <signal handler called>. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1819,testability,context,context,1819,"uct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_pt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2544,testability,understand,understand,2544,"# ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (privat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3160,testability,trace,trace,3160,"e<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3367,testability,trace,trace,3367,"s/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17502,testability,trace,trace,17502,"3cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, narg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17958,testability,trace,trace,17958,"0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24351,testability,Trace,Traceback,24351,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24998,testability,observ,observe,24998,"ilename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. Traceback (most recent call last):. File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>. repro.foo(cppyy.gbl.std.move(c)). TypeError: Template method resolution failed:. void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>. SegmentationViolation: segfault in C++; program state was reset. Failed to instantiate ""foo(repro::Derived&)"". Failed to instantiate ""foo(repro::Derived*)"". void repro::foo(repro::Derived&& t) =>. ValueError: could not convert argument 1 (object is not an rvalue). ```. </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:. - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version. - If I have `void foo(std::unique_ptr<Base>&&)`, then cppyy also calls the unique_ptr version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:245,usability,minim,minimal,245,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:323,usability,behavi,behavior,323,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:669,usability,memor,memory,669,"PyROOT update broke some existing code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". #include <memory>. #include <iostream>. #include <type_traits>. namespace repro {. struct Base {. virtual ~Base() = default;. virtual int func() const = 0;. };. struct Derived : public Base {. Derived(int i) : m_i(i) {}. ~Derived() = default;. Derived(const Derived&) = delete;. Derived& operator=(const Derived&) = delete;. Derived(Derived&&) = default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2000,usability,error,error,2000,"= default;. Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }. private:. int m_i{42};. };. void foo(std::unique_ptr<Base> basePtr) {. std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;. }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&. !std::is_lvalue_reference_v<T>>>. void foo(T&& t) {. std::cout << ""via template func: "" << t.func() << std::endl;. }. } // namespace repro. """""". ). from ROOT import repro. c = repro.Derived(123). repro.foo(ROOT.std.move(c)). ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console. $ python repro.py. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:2872,usability,behavi,behavior,2872,"y. via template func: 123. ```. However, with the updated cppyy I get:. ```console. $ python repro.py . input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'. ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here. unique_ptr(const unique_ptr&) = delete;. ^. ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/fute",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3563,usability,cancel,cancel,3563,"ses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:3728,usability,cancel,cancel,3728,"s to change. ```diff. - void foo(std::unique_ptr<Base> basePtr) {. + void foo(std::unique_ptr<Base>&& basePtr) {. ```. However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:. ```console. $ python repro.py . via unique_ptr: 123. ```. Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload. <details>. <summary>stack trace</summary>. ```console. $ python repro.py. via unique_ptr: *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7af5721ff640 (LWP 292770) ""python""):. #0 __futex_abstimed_wait_common64 (private=-392944720, cancel=true, abstime=0x7af5721fe520, op=137, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57. #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87. #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word. entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected. entry=0, clockid=clockid. entry=1, abstime=abstime. entry=0x7af5721fe520, private=private. entry=0) at ./nptl/futex-internal.c:139. #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503. #4 ___pthread_cond_timedwait64 (cond=cond. entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex. entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime. entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652. #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73. #6 take_gil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:15841,usability,close,closeit,15841,"te=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16091,usability,close,closeit,16091,"kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16099,usability,close,closeit,16099,"0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16297,usability,close,closeit,16297,"550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16305,usability,close,closeit,16305,"locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17422,usability,hint,hint,17422,"e_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17636,usability,help,help,17636,"ea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17694,usability,prefer,preferably,17694,"s/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17715,usability,command,command,17715,"00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17868,usability,prefer,preferably,17868,".c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17890,usability,command,command,17890,"586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18034,usability,help,help,18034,"s/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x00005fe0e3303095 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #9 0x00007af5858a404a in ?? (). #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6. #11 0x00005fe0e89d9090 in ?? (). #12 0x00007ffea3a91a60 in ?? (). #13 0x00007af5858a1017 in ?? (). #14 0x0000000000000001 in ?? (). #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785. #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #17 CPyCppyy::(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:22792,usability,close,closeit,22792,"te=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181. #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46. #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23042,usability,close,closeit,23042,"kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23050,usability,close,closeit,23050,"0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067. #31 PyEval_EvalCode (co=co. entry=0x7af586c71b00, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23248,usability,close,closeit,23248,"550200, locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23256,usability,close,closeit,23256,"locals=locals. entry=0x7af586550200) at Python/ceval.c:1134. #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291. #33 run_mod (mod=<optimized out>, filename=filename. entry=0x7af5865a5e30, globals=globals. entry=0x7af586550200, locals=locals. entry=0x7af586550200, flags=flags. entry=0x7ffea3a92318, arena=arena. entry=0x7af5865026f0) at Python/pythonrun.c:1312. #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208. #35 _PyRun_SimpleFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:456. #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp. entry=0x5fe0e477c7f0, filename=filename. entry=0x7af5865a5e30, closeit=closeit. entry=1, flags=flags. entry=0x7ffea3a92318) at Python/pythonrun.c:90. #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353. #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372. #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587. #40 Py_RunMain () at Modules/main.c:666. #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696. #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720. #43 0x00007af586e29d90 in __libc_start_call_main (main=main. entry=0x5fe0e3303060 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58. #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392. #45 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15118:1068,availability,Operat,Operating,1068,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:23,deployability,build,build,23,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:148,deployability,build,build,148,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:302,deployability,configurat,configuration,302,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:322,deployability,Build,Build,322,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:336,deployability,fail,fails,336,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:551,deployability,modul,modules,551,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:809,deployability,build,build,809,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:828,deployability,configurat,configuration,828,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:935,deployability,instal,installation,935,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:958,deployability,version,version,958,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:1024,deployability,Instal,Installation,1024,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:1045,deployability,build,build,1045,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:302,integrability,configur,configuration,302,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:828,integrability,configur,configuration,828,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:958,integrability,version,version,958,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:235,modifiability,variab,variables,235,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:302,modifiability,configur,configuration,302,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:551,modifiability,modul,modules,551,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:582,modifiability,variab,variables,582,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:703,modifiability,variab,variables,703,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:828,modifiability,configur,configuration,828,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:897,modifiability,variab,variables,897,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:958,modifiability,version,version,958,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:14,reliability,doe,does,14,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:336,reliability,fail,fails,336,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:370,safety,compl,complaining,370,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:551,safety,modul,modules,551,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:302,security,configur,configuration,302,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:370,security,compl,complaining,370,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:828,security,configur,configuration,828,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:1110,testability,context,context,1110,"jsoninterface does not build if provided with RapidYAML; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/pull/15122:9,energy efficiency,core,core,9,[PyROOT][core] Move args without copy c'tor in `TClingCallFunc::make_narg_call`; Closes https://github.com/root-project/root/issues/15117. This is a direct port of a change that cppyy applied to ROOT meta. See. https://github.com/wlav/cppyy-backend/blob/master/cling/src/core/metacling/src/TClingCallFunc.cxx#L468. **edit: I just noticed that this PR already exists: https://github.com/root-project/root/pull/14426** :laughing: .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15122
https://github.com/root-project/root/pull/15122:271,energy efficiency,core,core,271,[PyROOT][core] Move args without copy c'tor in `TClingCallFunc::make_narg_call`; Closes https://github.com/root-project/root/issues/15117. This is a direct port of a change that cppyy applied to ROOT meta. See. https://github.com/wlav/cppyy-backend/blob/master/cling/src/core/metacling/src/TClingCallFunc.cxx#L468. **edit: I just noticed that this PR already exists: https://github.com/root-project/root/pull/14426** :laughing: .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15122
https://github.com/root-project/root/pull/15122:81,usability,Close,Closes,81,[PyROOT][core] Move args without copy c'tor in `TClingCallFunc::make_narg_call`; Closes https://github.com/root-project/root/issues/15117. This is a direct port of a change that cppyy applied to ROOT meta. See. https://github.com/wlav/cppyy-backend/blob/master/cling/src/core/metacling/src/TClingCallFunc.cxx#L468. **edit: I just noticed that this PR already exists: https://github.com/root-project/root/pull/14426** :laughing: .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15122
https://github.com/root-project/root/pull/15123:9,deployability,patch,patches,9,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:39,deployability,build,builds,39,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:0,safety,Test,Test,0,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:9,safety,patch,patches,9,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:26,safety,test,tests,26,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:9,security,patch,patches,9,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:0,testability,Test,Test,0,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15123:26,testability,test,tests,26,Test 628 patches; This PR tests the CI builds. It is same as #15115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15124:14,safety,test,test,14,"[skip-ci] Add test to PR #15078; This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15124
https://github.com/root-project/root/pull/15124:88,safety,test,test,88,"[skip-ci] Add test to PR #15078; This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15124
https://github.com/root-project/root/pull/15124:14,testability,test,test,14,"[skip-ci] Add test to PR #15078; This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15124
https://github.com/root-project/root/pull/15124:88,testability,test,test,88,"[skip-ci] Add test to PR #15078; This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15124
https://github.com/root-project/root/pull/15125:17,deployability,automat,automatic,17,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:72,deployability,automat,automatic,72,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:27,interoperability,convers,conversion,27,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:82,interoperability,convers,conversion,82,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:301,interoperability,convers,conversion,301,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:524,safety,safe,safest,524,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:567,safety,test,test,567,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:17,testability,automat,automatic,17,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:72,testability,automat,automatic,72,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:556,testability,regress,regression,556,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:567,testability,test,test,567,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:539,usability,Close,Closes,539,"[PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:. https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15126:28,deployability,build,builds,28,[skip-ci][ci] Add scheduled builds for 6.32; The title says it all.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15126
https://github.com/root-project/root/pull/15126:18,energy efficiency,schedul,scheduled,18,[skip-ci][ci] Add scheduled builds for 6.32; The title says it all.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15126
https://github.com/root-project/root/pull/15126:18,performance,schedul,scheduled,18,[skip-ci][ci] Add scheduled builds for 6.32; The title says it all.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15126
https://github.com/root-project/root/issues/15129:4,availability,error,error,4,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:194,availability,error,error,194,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:834,availability,error,error,834,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8397,availability,Operat,Operating,8397,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8759,availability,error,error,8759,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:549,deployability,version,version,549,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:957,deployability,Version,Versions,957,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1214,deployability,Version,Versions,1214,"ashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1329,deployability,Version,Versions,1329,"/root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1503,deployability,Version,Versions,1503,"30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/Syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1647,deployability,Version,Versions,1647," |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWitho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1806,deployability,Version,Versions,1806,"w();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1958,deployability,Version,Versions,1958,"ons/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2075,deployability,Version,Versions,2075,"ata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2198,deployability,Version,Versions,2198,"O.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2380,deployability,Version,Versions,2380,"gePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2545,deployability,Version,Versions,2545,"lus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2732,deployability,Version,Versions,2732,"nary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::TCanvas(char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:7794,deployability,version,version,7794,"ar const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8125,deployability,version,version,8125,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8308,deployability,Instal,Installation,8308,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8382,deployability,instal,installer,8382,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8475,deployability,instal,installed,8475,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8530,deployability,updat,updated,8530,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8606,deployability,instal,install,8606,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8678,deployability,upgrad,upgrade,8678,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8697,deployability,version,version,8697,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8787,deployability,instal,installed,8787,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:25,energy efficiency,draw,draw,25,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:140,energy efficiency,draw,draw,140,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:807,energy efficiency,Draw,Draw,807,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:4336,energy efficiency,alloc,allocator,4336,"st*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::MakeDefCanvas() (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TObject::AppendPad(char const*) (no d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:4599,energy efficiency,alloc,allocator,4599,"nvas::Constructor(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::MakeDefCanvas() (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TObject::AppendPad(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libHist.so] TH1::Draw(char const*) (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:5403,energy efficiency,Draw,Draw,5403,"ing::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TObject::AppendPad(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libHist.so] TH1::Draw(char const*) (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:5907,energy efficiency,alloc,allocator,5907,"preterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TObject::AppendPad(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libHist.so] TH1::Draw(char const*) (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:6170,energy efficiency,alloc,allocator,6170,"oot_v6.30.06/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TObject::AppendPad(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libHist.so] TH1::Draw(char const*) (no debug info). [<unknown binary>] (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::Interpreter::process(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, cling::Value*, cling::Transaction**, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Applications/root_v6.30.06/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:7771,energy efficiency,Draw,Draw,7771,"] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i man",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:549,integrability,version,version,549,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:957,integrability,Version,Versions,957,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1214,integrability,Version,Versions,1214,"ashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1329,integrability,Version,Versions,1329,"/root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1503,integrability,Version,Versions,1503,"30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/Syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1647,integrability,Version,Versions,1647," |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWitho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1806,integrability,Version,Versions,1806,"w();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1958,integrability,Version,Versions,1958,"ons/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2075,integrability,Version,Versions,2075,"ata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2198,integrability,Version,Versions,2198,"O.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2380,integrability,Version,Versions,2380,"gePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2545,integrability,Version,Versions,2545,"lus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2732,integrability,Version,Versions,2732,"nary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::TCanvas(char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:7794,integrability,version,version,7794,"ar const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8125,integrability,version,version,8125,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8697,integrability,version,version,8697,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:549,modifiability,version,version,549,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:957,modifiability,Version,Versions,957,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1214,modifiability,Version,Versions,1214,"ashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1329,modifiability,Version,Versions,1329,"/root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1503,modifiability,Version,Versions,1503,"30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/Syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1647,modifiability,Version,Versions,1647," |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWitho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1806,modifiability,Version,Versions,1806,"w();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:1958,modifiability,Version,Versions,1958,"ons/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2075,modifiability,Version,Versions,2075,"ata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2198,modifiability,Version,Versions,2198,"O.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2264,modifiability,extens,extension,2264," debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2380,modifiability,Version,Versions,2380,"gePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2449,modifiability,extens,extension,2449,"). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2545,modifiability,Version,Versions,2545,"lus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:2732,modifiability,Version,Versions,2732,"nary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithContentsOfURL:expandImageContentNow:giveUpOnNetworkURLsWithoutGoodExtensions:] (no debug info). [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] -[NSImage initWithContentsOfURL:] (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::SetApplicationIcon() (no debug info). [/Applications/root_v6.30.06/lib/libGCocoa.so] TGCocoa::MapWindow(unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TGStatusBar::TGStatusBar(TGWindow const*, unsigned int, unsigned int, unsigned int, unsigned long) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::CreateCanvas(char const*) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootCanvas::TRootCanvas(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGui.so] TRootGuiFactory::CreateCanvasImp(TCanvas*, char const*, int, int, unsigned int, unsigned int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int) (no debug info). [/Applications/root_v6.30.06/lib/libGpad.so] TCanvas::TCanvas(char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:7794,modifiability,version,version,7794,"ar const*, char const*, int*) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8125,modifiability,version,version,8125,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8678,modifiability,upgrad,upgrade,8678,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8697,modifiability,version,version,8697,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:4,performance,error,error,4,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:194,performance,error,error,194,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:834,performance,error,error,834,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8759,performance,error,error,8759,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:4,safety,error,error,4,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:194,safety,error,error,194,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:834,safety,error,error,834,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8530,safety,updat,updated,8530,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8759,safety,error,error,8759,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:373,security,Team,Team,373,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:7949,security,Team,Team,7949,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8530,security,updat,updated,8530,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8449,testability,context,context,8449,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:4,usability,error,error,4,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:157,usability,interact,interactive,157,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:194,usability,error,error,194,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:594,usability,help,help,594,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:834,usability,error,error,834,"Bus error when trying to draw TH1F on macos 14.4; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. . ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. *** Break *** bus error. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info). [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPrope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8170,usability,help,help,8170,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8759,usability,error,error,8759,") (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info). [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info). [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info). [/Applications/root_v6.30.06/bin/root.exe] main (no debug info). [/usr/lib/dyld] start (no debug info). Root > . ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:. ```. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);. root [1] h->Fill(5);. root [2] h->Draw();. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 03 2024, 10:22:56 |. | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it. I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/pull/15130:34,interoperability,format,format,34,[skip-ci] [BP] [io] Collapse data format details of TFile class; BP of https://github.com/root-project/root/pull/14929.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15130
https://github.com/root-project/root/pull/15131:34,interoperability,format,format,34,[skip-ci] [BP] [io] Collapse data format details of TFile class; BP of https://github.com/root-project/root/pull/14929,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15131
https://github.com/root-project/root/pull/15133:18,safety,prevent,prevent,18,[v632][BP] [hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15094,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15133
https://github.com/root-project/root/pull/15133:18,security,preven,prevent,18,[v632][BP] [hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15094,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15133
https://github.com/root-project/root/pull/15133:34,security,access,access,34,[v632][BP] [hist] prevent nullptr access; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15094,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15133
https://github.com/root-project/root/issues/15136:160,availability,state,statement,160,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:666,availability,state,statement,666,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:876,availability,Operat,Operating,876,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:33,deployability,version,version,33,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:199,deployability,version,version,199,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:400,deployability,version,version,400,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:535,deployability,version,version,535,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:596,deployability,version,version,596,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:783,deployability,version,version,783,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:829,deployability,Instal,Installation,829,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:850,deployability,Build,Building,850,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:33,integrability,version,version,33,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:160,integrability,state,statement,160,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:199,integrability,version,version,199,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:400,integrability,version,version,400,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:535,integrability,version,version,535,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:596,integrability,version,version,596,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:666,integrability,state,statement,666,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:783,integrability,version,version,783,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:7,interoperability,specif,specify,7,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:17,interoperability,specif,specific,17,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:170,interoperability,specif,specifying,170,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:183,interoperability,specif,specific,183,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:570,interoperability,specif,specify,570,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:580,interoperability,specif,specific,580,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:33,modifiability,version,version,33,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:199,modifiability,version,version,199,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:400,modifiability,version,version,400,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:535,modifiability,version,version,535,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:596,modifiability,version,version,596,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:783,modifiability,version,version,783,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/issues/15136:916,testability,context,context,916,"How to specify a specific python version in the master...; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed? Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/pull/15137:78,safety,avoid,avoid,78,[skip-ci] [pyroot] Use raw string to allow escaped character in docstring; To avoid warnings such as `_rvec.py:95: SyntaxWarning: invalid escape sequence '\p'`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15137
https://github.com/root-project/root/pull/15138:87,deployability,instal,installing,87,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:141,deployability,instal,installing,141,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:218,deployability,instal,installation,218,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:382,deployability,instal,installation,382,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:572,deployability,instal,install,572,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:648,deployability,instal,installation,648,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:675,deployability,instal,install,675,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1366,deployability,instal,installation,1366,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1493,deployability,updat,updated,1493,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1628,deployability,version,versions,1628,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1628,integrability,version,versions,1628,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1628,modifiability,version,versions,1628,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1379,performance,time,time,1379,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:16,safety,permiss,permissions,16,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:172,safety,permiss,permissions,172,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:304,safety,permiss,permissions,304,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:469,safety,permiss,permissions,469,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:614,safety,permiss,permissions,614,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:706,safety,Permiss,Permissions,706,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1351,safety,permiss,permissions,1351,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1397,safety,permiss,permissions,1397,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1463,safety,test,tested,1463,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1493,safety,updat,updated,1493,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:733,security,Modif,Modified,733,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1493,security,updat,updated,1493,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1463,testability,test,tested,1463,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:250,usability,user,users,250,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:345,usability,user,users,345,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:540,usability,user,user,540,"[cmake] Set the permissions for etc and other folders that are in the source tree when installing; # This Pull request:. fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory. ## Changes or fixes:. The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:. ```. Permissions Size User Date Modified Name. drwxr-xr-x - root 3 Apr 18:08 bin. drwxr-xr-x - root 3 Apr 18:08 cmake. drwxr-xr-x - root 3 Apr 18:08 config. drwx------ - root 3 Apr 18:08 etc. drwxr-xr-x - root 28 Jan 09:45 fonts. drwxr-xr-x - root 28 Jan 09:45 icons. drwxr-xr-x - root 3 Apr 18:08 include. drwxr-xr-x - root 3 Apr 18:08 js. drwxr-xr-x - root 3 Apr 18:08 lib. .rw-r--r-- 847 root 29 Oct 2023 LICENSE. drwxr-xr-x - root 28 Jan 09:45 macros. drwxr-xr-x - root 28 Jan 09:44 man. drwxr-xr-x - root 28 Jan 09:45 README. drwxr-xr-x - root 3 Apr 18:08 tutorials. drwxr-xr-x - root 28 Jan 09:45 ui. ```. This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
