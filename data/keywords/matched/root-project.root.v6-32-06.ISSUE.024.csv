id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/5946:249,integrability,Protocol,Protocol,249,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:123,interoperability,Plug,Plugin,123,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:182,interoperability,protocol,protocol,182,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:249,interoperability,Protocol,Protocol,249,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:75,performance,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:236,performance,load,load,236,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:241,reliability,fail,failed,241,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:75,safety,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:223,security,cryptograph,cryptography,223,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:75,usability,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:262,usability,support,supported,262,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5948:75,availability,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:241,deployability,fail,failed,241,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:236,energy efficiency,load,load,236,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:182,integrability,protocol,protocol,182,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:249,integrability,Protocol,Protocol,249,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:123,interoperability,Plug,Plugin,123,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:182,interoperability,protocol,protocol,182,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:249,interoperability,Protocol,Protocol,249,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:75,performance,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:236,performance,load,load,236,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:241,reliability,fail,failed,241,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:75,safety,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:223,security,cryptograph,cryptography,223,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:75,usability,error,errors,75,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:262,usability,support,supported,262,"[Tutorials] Veto df103_NanoAODHiggsAnalysis on Mac 10.13; Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```. Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so. Secsss: 0x30 cryptography load failed; Protocol not supported. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5949:17,energy efficiency,core,core,17,Move TError from core to foundation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5949
https://github.com/root-project/root/pull/5950:23,deployability,version,versions,23,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:215,deployability,version,version,215,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:100,energy efficiency,reduc,reduced,100,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:23,integrability,version,versions,23,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:215,integrability,version,version,215,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:23,modifiability,version,versions,23,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:215,modifiability,version,version,215,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:260,testability,simpl,simply,260,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:260,usability,simpl,simply,260,"Implement fast running versions of RDF tutorials; I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5951:136,availability,servic,services,136,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5951:136,deployability,servic,services,136,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5951:136,integrability,servic,services,136,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5951:24,interoperability,compatib,compatibility,24,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5951:38,modifiability,layer,layers,38,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5951:136,modifiability,servic,services,136,"Revert ""Remove obsolete compatibility layers from TError""; Reverts root-project/root#5922. Seemed to have broken master: https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/8819. To be further investigated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5951
https://github.com/root-project/root/pull/5955:123,integrability,repositor,repository,123,"Revert ""Remove obsolete compatibility layers from TError""; Same as #5951 but without creating a new branch in the upstream repository.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5955
https://github.com/root-project/root/pull/5955:24,interoperability,compatib,compatibility,24,"Revert ""Remove obsolete compatibility layers from TError""; Same as #5951 but without creating a new branch in the upstream repository.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5955
https://github.com/root-project/root/pull/5955:123,interoperability,repositor,repository,123,"Revert ""Remove obsolete compatibility layers from TError""; Same as #5951 but without creating a new branch in the upstream repository.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5955
https://github.com/root-project/root/pull/5955:38,modifiability,layer,layers,38,"Revert ""Remove obsolete compatibility layers from TError""; Same as #5951 but without creating a new branch in the upstream repository.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5955
https://github.com/root-project/root/pull/5956:113,energy efficiency,current,current,113,Eve-7: Finalize multiple selection ; This change enables multiple selection in secondary selectable objects. The current examples are digit set an line sets. Use 'Ctrl' key to add selected elements.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5956
https://github.com/root-project/root/pull/5957:56,availability,error,errors,56,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:234,availability,Error,Error,234,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:679,availability,Error,Error,679,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:191,deployability,FAIL,FAILED,191,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:636,deployability,FAIL,FAILED,636,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:56,performance,error,errors,56,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:234,performance,Error,Error,234,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:679,performance,Error,Error,679,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:191,reliability,FAIL,FAILED,191,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:636,reliability,FAIL,FAILED,636,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:56,safety,error,errors,56,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:65,safety,Test,Test,65,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:234,safety,Error,Error,234,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:509,safety,Test,Test,509,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:679,safety,Error,Error,679,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:65,testability,Test,Test,65,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:509,testability,Test,Test,509,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:56,usability,error,errors,56,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:234,usability,Error,Error,234,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:679,usability,Error,Error,679,Adjust stressGraphics.ref; This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK. PDF output.......................................... 5 FAILED. Result = 12968. Reference = 12802. Error = 166 (was 150). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output......................................... 43 FAILED. Result = 14206. Reference = 14075. Error = 131 (was 100). GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5958:15,availability,error,error,15,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:460,availability,operat,operator,460,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:718,deployability,fail,failed,718,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:541,energy efficiency,alloc,allocator,541,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:15,performance,error,error,15,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:718,reliability,fail,failed,718,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:15,safety,error,error,15,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:278,safety,test,test,278,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:299,safety,test,tests,299,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:242,testability,assert,assertion,242,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:278,testability,test,test,278,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:299,testability,test,tests,299,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:663,testability,Assert,Assertion,663,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:15,usability,error,error,15,"Fix off-by-one error in the histogram v7 bin iterator; The histogram bin iterator should start at 1 and end at N + 1, not. start at 0 and end at N. (As for all iterators, the end element is the. invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins. [ RUN ] BinIterNBins.NumBins. /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5960:325,availability,error,error,325,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:764,availability,error,error,764,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1205,availability,error,error,1205," version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2696,availability,state,statement,2696,"ce this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4167,availability,error,error,4167,"xec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is base",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4331,availability,error,error,4331,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4711,availability,error,error,4711,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4757,availability,error,error,4757,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:30,deployability,version,versions,30,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:136,deployability,version,versions,136,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:209,deployability,version,version,209,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:301,deployability,fail,fails,301,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:426,deployability,build,builddir,426,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:435,deployability,build,build,435,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:441,deployability,BUILD,BUILDROOT,441,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:534,deployability,build,builddir,534,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:543,deployability,build,build,543,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:549,deployability,BUILD,BUILDROOT,549,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:818,deployability,instal,install,818,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1225,deployability,build,build,1225,"tOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1680,deployability,fail,fails,1680,"llowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1831,deployability,modul,module,1831,"## test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2007,deployability,modul,module,2007,"locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2086,deployability,version,versions,2086,"expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2135,deployability,version,version,2135,"st1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2191,deployability,version,version,2191,"duces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2265,deployability,version,version,2265,"1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2273,deployability,fail,fails,2273,"line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2320,deployability,version,versions,2320,"). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2456,deployability,version,versions,2456,"is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2525,deployability,version,version,2525,"glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2592,deployability,version,version,2592,"in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2632,deployability,version,version,2632," return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2743,deployability,version,versions,2743,"python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3097,deployability,fail,fails,3097,"upposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4878,deployability,modul,module,4878,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:30,integrability,version,versions,30,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:136,integrability,version,versions,136,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:209,integrability,version,version,209,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2086,integrability,version,versions,2086,"expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2135,integrability,version,version,2135,"st1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2191,integrability,version,version,2191,"duces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2265,integrability,version,version,2265,"1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2320,integrability,version,versions,2320,"). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2456,integrability,version,versions,2456,"is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2525,integrability,version,version,2525,"glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2592,integrability,version,version,2592,"in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2632,integrability,version,version,2632," return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2696,integrability,state,statement,2696,"ce this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2743,integrability,version,versions,2743,"python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:0,interoperability,Compatib,Compatibility,0,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:30,modifiability,version,versions,30,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:136,modifiability,version,versions,136,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:209,modifiability,version,version,209,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:239,modifiability,pac,packaging,239,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:610,modifiability,pac,packages,610,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1831,modifiability,modul,module,1831,"## test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2007,modifiability,modul,module,2007,"locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2086,modifiability,version,versions,2086,"expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2135,modifiability,version,version,2135,"st1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2191,modifiability,version,version,2191,"duces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2265,modifiability,version,version,2265,"1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2320,modifiability,version,versions,2320,"). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2456,modifiability,version,versions,2456,"is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2525,modifiability,version,version,2525,"glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2592,modifiability,version,version,2592,"in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2632,modifiability,version,version,2632," return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2743,modifiability,version,versions,2743,"python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4878,modifiability,modul,module,4878,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:325,performance,error,error,325,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:764,performance,error,error,764,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1205,performance,error,error,1205," version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4167,performance,error,error,4167,"xec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is base",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4331,performance,error,error,4331,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4711,performance,error,error,4711,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4757,performance,error,error,4757,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:301,reliability,fail,fails,301,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1680,reliability,fail,fails,1680,"llowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2273,reliability,fail,fails,2273,"line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3097,reliability,fail,fails,3097,"upposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3568,reliability,doe,does,3568,"e have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). retur",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4011,reliability,doe,doesn,4011,". ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4686,reliability,doe,doesn,4686,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4734,reliability,doe,does,4734,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:325,safety,error,error,325,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:764,safety,error,error,764,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:914,safety,test,test,914,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1059,safety,test,test,1059,"a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. Howe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1205,safety,error,error,1205," version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1506,safety,test,test,1506,"bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, whic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1653,safety,test,test,1653,"r: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1723,safety,valid,valid,1723,"unction (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something tha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1831,safety,modul,module,1831,"## test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1840,safety,test,test,1840,".py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1876,safety,test,test,1876," the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2007,safety,modul,module,2007,"locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2114,safety,valid,valid,2114," 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2781,safety,test,test,2781,"ecent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3008,safety,test,test,3008,"ule>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3523,safety,valid,valid,3523,"ersion in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3542,safety,valid,valid,3542,"OS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3639,safety,test,test,3639,"hat works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3872,safety,test,test,3872," exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4167,safety,error,error,4167,"xec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is base",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4331,safety,error,error,4331,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4430,safety,test,test,4430,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4581,safety,test,test,4581,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4711,safety,error,error,4711,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4757,safety,error,error,4757,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4787,safety,test,test,4787,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4878,safety,modul,module,4878,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4887,safety,test,test,4887,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4923,safety,test,test,4923,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2577,security,ident,identified,2577,"a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3474,security,modif,modify,3474,"l present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:914,testability,test,test,914,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1059,testability,test,test,1059,"a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. Howe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1506,testability,test,test,1506,"bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, whic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1653,testability,test,test,1653,"r: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1766,testability,Trace,Traceback,1766,"Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1840,testability,test,test,1840,".py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1876,testability,test,test,1876," the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2781,testability,test,test,2781,"ecent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3008,testability,test,test,3008,"ule>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3639,testability,test,test,3639,"hat works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3872,testability,test,test,3872," exec('print(a); b = 456', glob, locals()). else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This works for Python 3:. ```. $ python3 test3.py . 123. 456. ```. Sadly it fails for Python 2:. ```. $ python2 test3.py . File ""test3.py"", line 7. exec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4405,testability,simpl,simpler,4405,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4430,testability,test,test,4430,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4581,testability,test,test,4581,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4787,testability,test,test,4787,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4813,testability,Trace,Traceback,4813,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4887,testability,test,test,4887,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4923,testability,test,test,4923,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:325,usability,error,error,325,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:764,usability,error,error,764,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:780,usability,statu,status,780,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:857,usability,minim,minimal,857,"Compatibility with python 2.7 versions before 2.7.9; This is a workaround for https://bugs.python.org/issue21591 which. affect Python 2 versions before 2.7.9. This includes Python 2.7.5. which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1205,usability,error,error,1205," version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:. ```. + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1. Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1481,usability,command,command,1481,"4/python2.7 using /usr/bin/python2.7. Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ... SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198). error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install). ```. ### test1.py. This is a minimal reproducer of the existing code:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()). print(locals()['b']). return inner(). test(). ```. This produces the expected output with Python 3:. ```. $ python3 test1.py . 123. 456. ```. But when using Python 2 it reproduces the error from the root build:. ```. $ python2 test1.py . File ""test1.py"", line 5. exec('print(a); b = 456', glob, locals()). SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function. ```. ### test2.py . If the Python 2 syntax is used for the exec command:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. Then Python 3 fails as expected since this syntax is not valid Pathon 3:. ```. $ python3 test2.py . Traceback (most recent call last):. File ""test2.py"", line 8, in <module>. test(). File ""test2.py"", line 7, in test. return inner(). File ""test2.py"", line 5, in inner. exec('print(a); b = 456') in glob, locals(). File ""<string>"", line 1, in <module>. NameError: name 'a' is not defined. ```. However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:. ```. $ python2 test2.py . 123. 456. ```. That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still presen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4167,usability,error,error,4167,"xec('print(a); b = 456', glob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is base",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4331,usability,error,error,4331,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4405,usability,simpl,simpler,4405,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4711,usability,error,error,4711,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4757,usability,error,error,4757,"lob, locals()). SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function. ```. Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:. ```python. import sys. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. if sys.version_info[0] >= 3:. exec('print(a); b = 456', glob, locals()) in {}. else:. exec('print(a); b = 456') in glob, locals(). print(locals()['b']). return inner(). test(). ```. This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:. ```. $ python3 test4.py . 123. 456. ```. However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:. ```. $ python2 test4.py . 123. 456. ```. So we are happy now! ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:. ```python. def test():. def inner():. glob = dict(globals()). glob['a'] = 123. exec('print(a); b = 456', glob, locals()) in {}. print(locals()['b']). return inner(). test(). ```. This obiously works for Python 3:. ```. $ python3 test5.py . 123. 456. ```. But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:. ```. [ellert@bestlapp test]$ python2 test5.py . Traceback (most recent call last):. File ""test5.py"", line 8, in <module>. test(). File ""test5.py"", line 7, in test. return inner(). File ""test5.py"", line 5, in inner. exec('print(a); b = 456', glob, locals()) in {}. TypeError: exec: arg 1 must be a string, file, or code object. ```. So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5962:11,deployability,version,version,11,Import doc version changer to 6.20;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5962
https://github.com/root-project/root/pull/5962:11,integrability,version,version,11,Import doc version changer to 6.20;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5962
https://github.com/root-project/root/pull/5962:11,modifiability,version,version,11,Import doc version changer to 6.20;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5962
https://github.com/root-project/root/pull/5963:11,deployability,version,version,11,Import doc version changer to 6.22;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5963
https://github.com/root-project/root/pull/5963:11,integrability,version,version,11,Import doc version changer to 6.22;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5963
https://github.com/root-project/root/pull/5963:11,modifiability,version,version,11,Import doc version changer to 6.22;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5963
https://github.com/root-project/root/pull/5964:38,deployability,updat,updates,38,[RF][NFC] Collection of documentation updates from june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5964
https://github.com/root-project/root/pull/5964:38,safety,updat,updates,38,[RF][NFC] Collection of documentation updates from june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5964
https://github.com/root-project/root/pull/5964:38,security,updat,updates,38,[RF][NFC] Collection of documentation updates from june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5964
https://github.com/root-project/root/pull/5964:24,usability,document,documentation,24,[RF][NFC] Collection of documentation updates from june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5964
https://github.com/root-project/root/pull/5965:4,usability,support,support,4,Add support for toplevel array and unique_ptr in GetMissingDictionary;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5965
https://github.com/root-project/root/pull/5966:43,interoperability,prox,proxies,43,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5966:60,interoperability,prox,proxies,60,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5966:177,interoperability,prox,proxy,177,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5966:222,interoperability,prox,proxy,222,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5966:294,modifiability,paramet,parameter,294,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5966:209,usability,intuit,intuitive,209,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. ```. RooTemplateProxy<const RooAbsPdf>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5967:45,energy efficiency,model,model,45,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:391,energy efficiency,model,model-specific,391,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:397,interoperability,specif,specific,397,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:25,safety,valid,validity,25,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:127,safety,valid,validity,127,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:216,safety,valid,validity,216,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:45,security,model,model,45,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5967:391,security,model,model-specific,391,"[ntuple] move field name validity check from model to FieldBase; During the implementation of #5934, I realized the field name validity check could be used for more than `RNTupleModel`. . This PR separates the field validity check `EnsureValidFieldName` in two: . * a check for field names in general (no dots, no empty string), which will also be useful for `RNTupleDescriptorBuilder`. * a model-specific check (no duplicate names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5967
https://github.com/root-project/root/pull/5969:43,interoperability,prox,proxies,43,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5969:60,interoperability,prox,proxies,60,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5969:177,interoperability,prox,proxy,177,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5969:222,interoperability,prox,proxy,222,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5969:294,modifiability,paramet,parameter,294,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5969:209,usability,intuit,intuitive,209,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5970:43,interoperability,prox,proxies,43,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5970:60,interoperability,prox,proxies,60,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5970:177,interoperability,prox,proxy,177,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5970:222,interoperability,prox,proxy,222,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5970:294,modifiability,paramet,parameter,294,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5970:209,usability,intuit,intuitive,209,"[RF] Remove excessive const-ness in object proxies.; RooFit proxies act similar to a smart pointer. It was, however, not. possible to mutate the pointed-to object if the owning proxy was const. That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template. parameter const, e.g. RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5971:87,deployability,patch,patch,87,"Remove ROOT clib bits from TError; Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5971
https://github.com/root-project/root/pull/5971:65,performance,time,time,65,"Remove ROOT clib bits from TError; Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5971
https://github.com/root-project/root/pull/5971:87,safety,patch,patch,87,"Remove ROOT clib bits from TError; Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5971
https://github.com/root-project/root/pull/5971:87,security,patch,patch,87,"Remove ROOT clib bits from TError; Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5971
https://github.com/root-project/root/pull/5972:42,availability,cluster,cluster,42,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5972:42,deployability,cluster,cluster,42,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5972:30,safety,test,test-ntuple-cluster,30,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5972:51,safety,test,test,51,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5972:30,testability,test,test-ntuple-cluster,30,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5972:51,testability,test,test,51,Fix the `gtest-tree-ntuple-v7-test-ntuple-cluster` test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5972
https://github.com/root-project/root/pull/5973:238,energy efficiency,draw,drawn,238,"[TAxis] print warning if trying to unzoom without gPad; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this warns user that `UnZoom` does nothing if the axis hasn't been drawn.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5973
https://github.com/root-project/root/pull/5973:201,reliability,doe,does,201,"[TAxis] print warning if trying to unzoom without gPad; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this warns user that `UnZoom` does nothing if the axis hasn't been drawn.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5973
https://github.com/root-project/root/pull/5973:182,usability,user,user,182,"[TAxis] print warning if trying to unzoom without gPad; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this warns user that `UnZoom` does nothing if the axis hasn't been drawn.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5973
https://github.com/root-project/root/pull/5974:0,usability,document,document,0,"document TH1 unbinned stats calculations; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this adds documentation explaining the behavior of `TH1::GetStats` so that a user can know when to expect binned vs. unbinned values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5974
https://github.com/root-project/root/pull/5974:167,usability,document,documentation,167,"document TH1 unbinned stats calculations; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this adds documentation explaining the behavior of `TH1::GetStats` so that a user can know when to expect binned vs. unbinned values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5974
https://github.com/root-project/root/pull/5974:196,usability,behavi,behavior,196,"document TH1 unbinned stats calculations; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this adds documentation explaining the behavior of `TH1::GetStats` so that a user can know when to expect binned vs. unbinned values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5974
https://github.com/root-project/root/pull/5974:234,usability,user,user,234,"document TH1 unbinned stats calculations; Initially reported in the forum [here](https://root-forum.cern.ch/t/th1-stat-calculations-are-inconsistent/40152), this adds documentation explaining the behavior of `TH1::GetStats` so that a user can know when to expect binned vs. unbinned values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5974
https://github.com/root-project/root/pull/5975:230,availability,error,error,230,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:593,availability,error,error,593,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:599,availability,state,state,599,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:652,availability,error,error,652,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:42,deployability,fail,failed,42,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:444,deployability,stack,stack,444,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:599,integrability,state,state,599,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:230,performance,error,error,230,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:593,performance,error,error,593,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:652,performance,error,error,652,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:42,reliability,fail,failed,42,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:5,safety,except,exceptions,5,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:230,safety,error,error,230,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:427,safety,except,exception,427,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:593,safety,error,error,593,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:652,safety,error,error,652,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:720,safety,valid,validRes,720,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:755,safety,valid,validRes,755,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:769,safety,valid,validRes,769,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:230,usability,error,error,230,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:593,usability,error,error,593,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:652,usability,error,error,652,"[v7, exceptions] add shorthand method for failed RResult<void>; Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. . Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:. ```cpp. RResult<void> validRes = FallibleVoidFn();. if (!validRes) { . validRes.Throw(); . }. ```. After:. ```cpp. FallibleVoidFn().ThrowOnError(); . ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5977:149,deployability,build,builddir,149,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:158,deployability,build,build,158,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:164,deployability,BUILD,BUILD,164,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:442,deployability,version,version,442,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:513,deployability,build,builddir,513,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:522,deployability,build,build,522,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:528,deployability,BUILD,BUILD,528,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:442,integrability,version,version,442,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:389,interoperability,format,format,389,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:442,modifiability,version,version,442,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:26,safety,test,test,26,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5977:26,testability,test,test,26,"Fix the RNTuple.LargeFile test on 32bit Linux (i386 and armv7hf); Before this change:. [ RUN ] RNTuple.LargeFile. Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'. aborting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5978:109,energy efficiency,model,model,109,Eve-7 Import of calorimeter visalization ; This is import of calorimeters from original EVE to server-client model of event display. Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization. ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5978:118,integrability,event,event,118,Eve-7 Import of calorimeter visalization ; This is import of calorimeters from original EVE to server-client model of event display. Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization. ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5978:247,performance,cach,cache-,247,Eve-7 Import of calorimeter visalization ; This is import of calorimeters from original EVE to server-client model of event display. Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization. ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5978:109,security,model,model,109,Eve-7 Import of calorimeter visalization ; This is import of calorimeters from original EVE to server-client model of event display. Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization. ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5978:203,usability,visual,visualization,203,Eve-7 Import of calorimeter visalization ; This is import of calorimeters from original EVE to server-client model of event display. Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization. ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5979:54,deployability,version,versions,54,[PyROOT] Backport 6.22: Compatibility with python 2.7 versions before 2.7.9; Backport of https://github.com/root-project/root/pull/5960,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5979
https://github.com/root-project/root/pull/5979:54,integrability,version,versions,54,[PyROOT] Backport 6.22: Compatibility with python 2.7 versions before 2.7.9; Backport of https://github.com/root-project/root/pull/5960,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5979
https://github.com/root-project/root/pull/5979:24,interoperability,Compatib,Compatibility,24,[PyROOT] Backport 6.22: Compatibility with python 2.7 versions before 2.7.9; Backport of https://github.com/root-project/root/pull/5960,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5979
https://github.com/root-project/root/pull/5979:54,modifiability,version,versions,54,[PyROOT] Backport 6.22: Compatibility with python 2.7 versions before 2.7.9; Backport of https://github.com/root-project/root/pull/5960,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5979
https://github.com/root-project/root/pull/5980:10,energy efficiency,Optim,Optimize,10,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:21,energy efficiency,draw,drawing,21,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:240,energy efficiency,Optim,Optimize,240,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:493,energy efficiency,draw,drawing,493,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:532,energy efficiency,optim,optimized,532,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:542,energy efficiency,draw,drawing,542,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:653,energy efficiency,draw,drawing,653,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:10,performance,Optimiz,Optimize,10,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:165,performance,time,time,165,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:240,performance,Optimiz,Optimize,240,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:414,performance,memor,memory,414,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:532,performance,optimiz,optimized,532,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:329,usability,efficien,efficiently,329,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:414,usability,memor,memory,414,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:426,usability,efficien,efficiency,426,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:558,usability,support,supported,558,"Introduce Optimize() drawing method for RH1/RH2/RH3 classes; When histogram object too large (more than 10^6 bins), its JSON representation can be huge. At the same time graphics cannot display so much individual bins. Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client. Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and. efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now. For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`. Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5982:10,energy efficiency,draw,drawn,10,[DF] Show drawn image in snapshot tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5982
https://github.com/root-project/root/pull/5983:5,deployability,Updat,Update,5,[RF] Update/fix a few tutorials.; Collection of a few tutorial tweaks/fixes. Also for one RDF tutorial.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5983
https://github.com/root-project/root/pull/5983:5,safety,Updat,Update,5,[RF] Update/fix a few tutorials.; Collection of a few tutorial tweaks/fixes. Also for one RDF tutorial.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5983
https://github.com/root-project/root/pull/5983:5,security,Updat,Update,5,[RF] Update/fix a few tutorials.; Collection of a few tutorial tweaks/fixes. Also for one RDF tutorial.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5983
https://github.com/root-project/root/pull/5984:16,integrability,messag,message,16,[DF] Print info message if RDisplay::Print is omitting some columns; Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5984
https://github.com/root-project/root/pull/5984:16,interoperability,messag,message,16,[DF] Print info message if RDisplay::Print is omitting some columns; Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5984
https://github.com/root-project/root/pull/5984:91,usability,feedback,feedback,91,[DF] Print info message if RDisplay::Print is omitting some columns; Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5984
https://github.com/root-project/root/pull/5985:434,availability,state,state,434,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:223,integrability,wrap,wrap,223,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:434,integrability,state,state,434,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:548,integrability,messag,messages,548,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:548,interoperability,messag,messages,548,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:5,safety,except,exceptions,5,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:466,safety,safe,safeguards,466,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:964,safety,review,review,964,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1043,safety,Test,TestMoveOnly,1043,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1148,safety,Test,TestMoveOnly,1148,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:757,security,access,access,757,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1298,security,access,access,1298,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:964,testability,review,review,964,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1043,testability,Test,TestMoveOnly,1043,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1148,testability,Test,TestMoveOnly,1148,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:651,usability,clear,clear,651,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:665,usability,document,documentation,665,"[v7, exceptions] Enable RResult to work with move-only types; Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: . ```cpp. auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {. return std::make_unique<int>(1);. };. auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile. // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access. const auto& copy_inner = res.Inspect();. EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type. auto move_inner = res.Unwrap();. EXPECT_EQ(1, *move_inner);. move_inner.reset();. move_inner = std::make_unique<int>(2);. EXPECT_EQ(2, *move_inner);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5986:9,testability,Simpl,Simplify,9,"[histv7] Simplify class structure:; Axis-type agnostic base; Fill happens through derived. Gets rid of RHistImpl (soon). Still needs some work, esp with C++14... [skip-CI]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5986
https://github.com/root-project/root/pull/5986:9,usability,Simpl,Simplify,9,"[histv7] Simplify class structure:; Axis-type agnostic base; Fill happens through derived. Gets rid of RHistImpl (soon). Still needs some work, esp with C++14... [skip-CI]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5986
https://github.com/root-project/root/pull/5987:23,deployability,patch,patch,23,Fix clang-10 warnings; patch from Fons,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5987
https://github.com/root-project/root/pull/5987:23,safety,patch,patch,23,Fix clang-10 warnings; patch from Fons,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5987
https://github.com/root-project/root/pull/5987:23,security,patch,patch,23,Fix clang-10 warnings; patch from Fons,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5987
https://github.com/root-project/root/pull/5988:75,deployability,modul,modules,75,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5988:101,deployability,modul,modulemap,101,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5988:75,modifiability,modul,modules,75,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5988:101,modifiability,modul,modulemap,101,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5988:75,safety,modul,modules,75,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5988:101,safety,modul,modulemap,101,"[cmake] rootcling needs include/RConfigure.h (ROOT-10776):; rootcling uses modules, and those have a modulemap entry for include/RConfigure.h. Make sure that it actually gets copied before the first run of rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5988
https://github.com/root-project/root/pull/5989:69,availability,error,error-checking,69,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:520,availability,Cluster,Cluster,520,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:110,deployability,build,build,110,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:520,deployability,Cluster,Cluster,520,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:69,performance,error,error-checking,69,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:43,safety,valid,validity,43,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:69,safety,error,error-checking,69,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:440,safety,valid,validity,440,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:266,security,expos,expose,266,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:69,usability,error,error-checking,69,"[ntuple] implement NTupleDescriptorBuilder validity check ; Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934). Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` . and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5991:9,deployability,Instal,Install,9,[PyROOT] Install additional PyROOT headers;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5991
https://github.com/root-project/root/pull/5992:19,deployability,Instal,Install,19,[Backport][PyROOT] Install additional PyROOT headers; Backport of #5991,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5992
https://github.com/root-project/root/pull/5993:315,availability,error,errors,315,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:476,availability,error,error,476,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:668,availability,error,error,668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:869,availability,error,error,869,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:100,deployability,fail,fails,100,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:273,deployability,fail,failing,273,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:680,deployability,Version,Version,680,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:721,deployability,Version,Version,721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1140,deployability,modul,module,1140,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1607,deployability,updat,updated,1607,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1668,deployability,updat,updated,1668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1700,deployability,build,build,1700,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1721,deployability,updat,update,1721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1233,energy efficiency,core,core,1233,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:680,integrability,Version,Version,680,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:721,integrability,Version,Version,721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:680,modifiability,Version,Version,680,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:721,modifiability,Version,Version,721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1140,modifiability,modul,module,1140,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:315,performance,error,errors,315,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:476,performance,error,error,476,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:668,performance,error,error,668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:869,performance,error,error,869,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:100,reliability,fail,fails,100,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:273,reliability,fail,failing,273,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:315,safety,error,errors,315,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:476,safety,error,error,476,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:668,safety,error,error,668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:869,safety,error,error,869,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1140,safety,modul,module,1140,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1607,safety,updat,updated,1607,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1668,safety,updat,updated,1668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1721,safety,updat,update,1721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1607,security,updat,updated,1607,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1668,security,updat,updated,1668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1721,security,updat,update,1721,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:315,usability,error,errors,315,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:432,usability,interact,interactive,432,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:476,usability,error,error,476,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:668,usability,error,error,668,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:869,usability,error,error,869,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1207,usability,User,Users,1207,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1281,usability,command,command,1281,"Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5994:0,deployability,updat,update,0,update links to the new web site;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5994
https://github.com/root-project/root/pull/5994:0,safety,updat,update,0,update links to the new web site;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5994
https://github.com/root-project/root/pull/5994:0,security,updat,update,0,update links to the new web site;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5994
https://github.com/root-project/root/pull/5995:1164,availability,avail,available,1164,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:21,interoperability,specif,specify,21,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1164,reliability,availab,available,1164,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:520,safety,input,input,520,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:742,safety,input,input,742,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1119,safety,test,tested,1119,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1164,safety,avail,available,1164,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1164,security,availab,available,1164,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1119,testability,test,tested,1119,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:288,usability,command,command,288,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:520,usability,input,input,520,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:675,usability,tool,tools,675,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:742,usability,input,input,742,"[hadd] add option to specify which objects should (not) be merged; Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description . Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose . Allows to merge only certain objects from the list of input files. ### Use case. Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings. - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`. - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5997:35,availability,state,state,35,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:90,availability,state,state,90,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:41,deployability,updat,update,41,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:159,deployability,manag,managed,159,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:159,energy efficiency,manag,managed,159,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:35,integrability,state,state,35,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:90,integrability,state,state,90,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:41,safety,updat,update,41,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:71,safety,prevent,prevent,71,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:159,safety,manag,managed,159,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:41,security,updat,update,41,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5997:71,security,preven,prevent,71,"[RF] Fix ROOT-10913; Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5999:69,deployability,updat,update,69,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:169,deployability,Updat,Update,169,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:69,safety,updat,update,69,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:169,safety,Updat,Update,169,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:69,security,updat,update,69,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:110,security,NIST,NIST,110,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:169,security,Updat,Update,169,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:250,security,NIST,NIST,250,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:273,security,nist,nist,273,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/5999:457,testability,Plan,Planck,457,"Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST; Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST. (https://physics.nist.gov/cuu/Constants/index.html). with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units. Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/6000:16,deployability,build,building,16,ROOT-10812: Fix building clad with external clang (#5945); ROOT-10812: Fix building clad with external clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6000
https://github.com/root-project/root/pull/6000:75,deployability,build,building,75,ROOT-10812: Fix building clad with external clang (#5945); ROOT-10812: Fix building clad with external clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6000
https://github.com/root-project/root/pull/6001:54,safety,input,input,54,Remove protections in TMath::Asin and TMath::ACos for input values outside the range; Revert commit https://github.com/root-project/root/commit/0c1e5e6160fc816c3bbbe26e9b06aaf2c9a51f80. and remove the protections for entries outside range in TMath::ASin and TMath::ACos and let. std::asin and std::acos returning a NaN,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6001
https://github.com/root-project/root/pull/6001:54,usability,input,input,54,Remove protections in TMath::Asin and TMath::ACos for input values outside the range; Revert commit https://github.com/root-project/root/commit/0c1e5e6160fc816c3bbbe26e9b06aaf2c9a51f80. and remove the protections for entries outside range in TMath::ASin and TMath::ACos and let. std::asin and std::acos returning a NaN,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6001
https://github.com/root-project/root/pull/6002:0,safety,Avoid,Avoid,0,Avoid registering to TGeoManager reflected assemblies.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6002
https://github.com/root-project/root/pull/6003:26,interoperability,skeleton,skeleton,26,[ntuple] add merger files skeleton to be filled in; Kick off NTuple merger implementation with some shiny new files to be filled in over the next few weeks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6003
https://github.com/root-project/root/pull/6005:21,deployability,Updat,Update,21,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…; … constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6005
https://github.com/root-project/root/pull/6005:21,safety,Updat,Update,21,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…; … constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6005
https://github.com/root-project/root/pull/6005:42,safety,prevent,prevent,42,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…; … constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6005
https://github.com/root-project/root/pull/6005:21,security,Updat,Update,21,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…; … constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6005
https://github.com/root-project/root/pull/6005:42,security,preven,prevent,42,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…; … constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6005
https://github.com/root-project/root/pull/6006:130,deployability,contain,contains,130,"[prompt] Do not segfault when root_hist has zero lines; Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6006:322,deployability,patch,patch,322,"[prompt] Do not segfault when root_hist has zero lines; Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6006:322,safety,patch,patch,322,"[prompt] Do not segfault when root_hist has zero lines; Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6006:205,security,access,access,205,"[prompt] Do not segfault when root_hist has zero lines; Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6006:322,security,patch,patch,322,"[prompt] Do not segfault when root_hist has zero lines; Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6007:166,deployability,build,building,166,[WIP] Applying modernize-use-override; * applied clang-tidy modernize-use-override on some targets. * replaced ClassDef by ClassDefOverride where VC complained while building Tree,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6007
https://github.com/root-project/root/pull/6007:149,safety,compl,complained,149,[WIP] Applying modernize-use-override; * applied clang-tidy modernize-use-override on some targets. * replaced ClassDef by ClassDefOverride where VC complained while building Tree,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6007
https://github.com/root-project/root/pull/6007:149,security,compl,complained,149,[WIP] Applying modernize-use-override; * applied clang-tidy modernize-use-override on some targets. * replaced ClassDef by ClassDefOverride where VC complained while building Tree,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6007
https://github.com/root-project/root/pull/6008:53,integrability,interfac,interface,53,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:135,integrability,interfac,interface,135,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:53,interoperability,interfac,interface,53,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:135,interoperability,interfac,interface,135,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:53,modifiability,interfac,interface,53,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:135,modifiability,interfac,interface,135,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:419,performance,disk,disk,419,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:734,safety,avoid,avoid,734,"[ntuple] advertise RNTuple implements hadd MergeFile interface; Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: . https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. . ~~**Edit:** segfault fixed by #6016~~. **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6009:44,availability,error,error,44,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:80,availability,error,error,80,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:230,availability,error,error,230,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:699,availability,Error,Error,699,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:777,availability,error,error,777,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:396,deployability,build,build,396,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:402,deployability,releas,release,402,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:555,deployability,build,build,555,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:561,deployability,releas,release,561,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:726,deployability,build,build,726,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:732,deployability,releas,release,732,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:766,integrability,messag,message,766,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:766,interoperability,messag,message,766,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:44,performance,error,error,44,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:80,performance,error,error,80,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:230,performance,error,error,230,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:699,performance,Error,Error,699,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:777,performance,error,error,777,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:44,safety,error,error,44,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:80,safety,error,error,80,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:230,safety,error,error,230,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:699,safety,Error,Error,699,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:777,safety,error,error,777,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:44,usability,error,error,44,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:80,usability,error,error,80,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:142,usability,User,Users,142,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:230,usability,error,error,230,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:381,usability,User,Users,381,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:540,usability,User,Users,540,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:699,usability,Error,Error,699,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:711,usability,User,Users,711,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:777,usability,error,error,777,"Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows; Fix the following error on Windows:. In file included from input_line_10:1:. C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t minValue,. ^. C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor. RooRealVar(const char *name, const char *title, Double_t value,. ^. CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6010:32,deployability,build,build,32,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:81,deployability,build,build,81,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:166,deployability,log,logs,166,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:166,safety,log,logs,166,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:166,security,log,logs,166,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:166,testability,log,logs,166,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6010:135,usability,navigat,navigation,135,Creating symlinks of headers in build directory; Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6011:144,deployability,fail,fails,144,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:144,reliability,fail,fails,144,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:18,safety,test,test,18,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:98,safety,test,test,98,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:110,safety,test,tested,110,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:176,safety,test,test,176,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:235,safety,test,test,235,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:18,testability,test,test,18,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:98,testability,test,test,98,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:110,testability,test,tested,110,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:176,testability,test,test,176,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:235,testability,test,test,235,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:54,usability,help,helpers,54,Add tabcompletion test similar to the one in JupyROOT/helpers/cppcompleter.py; This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6012:0,safety,Avoid,Avoid,0,"Avoid double delete by registering to TGeoManager reflected shape ass…; …emblies, owned by TGeoVolumeAssemby. (cherry picked from commit 437486008912b2da317097eaf7ea8f2ea1a822c4)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6012
https://github.com/root-project/root/pull/6013:0,safety,Avoid,Avoid,0,"Avoid double delete by registering to TGeoManager reflected shape ass…; …emblies, owned by TGeoVolumeAssemby. (cherry picked from commit 437486008912b2da317097eaf7ea8f2ea1a822c4)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6013
https://github.com/root-project/root/pull/6014:251,deployability,compos,compose,251,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:432,deployability,build,build,432,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:483,deployability,Automat,Automatic,483,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:530,deployability,fail,fails,530,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,deployability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,integrability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,interoperability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:251,modifiability,compos,compose,251,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:498,modifiability,refact,refactoring,498,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,modifiability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:498,performance,refactor,refactoring,498,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:530,reliability,fail,fails,530,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,reliability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,security,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:483,testability,Automat,Automatic,483,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:635,testability,integr,integration,635,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:309,usability,Visual,Visual,309,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:452,usability,experien,experience,452,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:650,usability,Visual,Visual,650,"Including headers for all libraries based on ROOT_STANDARD_LIBRARY_PACKAGE; Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:. > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6016:649,availability,slo,slower,649,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1028,availability,slo,slower,1028,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1069,availability,Error,Error,1069,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:137,modifiability,inherit,inherit,137,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:326,modifiability,inherit,inherit,326,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1069,performance,Error,Error,1069,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:129,reliability,doe,doesn,129,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:649,reliability,slo,slower,649,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1028,reliability,slo,slower,1028,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1129,reliability,doe,does,1129,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1069,safety,Error,Error,1069,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:1069,usability,Error,Error,1069,"[io] Fix segfault in ReadObjectAny; Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. . We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: . ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. *** Break *** segmentation violation. ```. After:. ```shell. ../bin/hadd -f merged.root ntuple1.root ntuple2.root. hadd Target file: merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: merged.root:/. Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead. Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6019:207,energy efficiency,CPU,CPU,207,"[RF] Disable interpreted RooFit/RooStats tests.; stress{RooFit,RooStats,HistFactory} are all run twice, once compiled,. once interpreted. Given that we have cling, this is unnecessary, so it's. only wasting CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6019
https://github.com/root-project/root/pull/6019:207,performance,CPU,CPU,207,"[RF] Disable interpreted RooFit/RooStats tests.; stress{RooFit,RooStats,HistFactory} are all run twice, once compiled,. once interpreted. Given that we have cling, this is unnecessary, so it's. only wasting CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6019
https://github.com/root-project/root/pull/6019:41,safety,test,tests,41,"[RF] Disable interpreted RooFit/RooStats tests.; stress{RooFit,RooStats,HistFactory} are all run twice, once compiled,. once interpreted. Given that we have cling, this is unnecessary, so it's. only wasting CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6019
https://github.com/root-project/root/pull/6019:41,testability,test,tests,41,"[RF] Disable interpreted RooFit/RooStats tests.; stress{RooFit,RooStats,HistFactory} are all run twice, once compiled,. once interpreted. Given that we have cling, this is unnecessary, so it's. only wasting CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6019
https://github.com/root-project/root/pull/6020:36,deployability,Updat,Update,36,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…; … constructor. Backport of https://github.com/root-project/root/pull/6005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6020
https://github.com/root-project/root/pull/6020:36,safety,Updat,Update,36,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…; … constructor. Backport of https://github.com/root-project/root/pull/6005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6020
https://github.com/root-project/root/pull/6020:57,safety,prevent,prevent,57,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…; … constructor. Backport of https://github.com/root-project/root/pull/6005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6020
https://github.com/root-project/root/pull/6020:36,security,Updat,Update,36,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…; … constructor. Backport of https://github.com/root-project/root/pull/6005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6020
https://github.com/root-project/root/pull/6020:57,security,preven,prevent,57,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…; … constructor. Backport of https://github.com/root-project/root/pull/6005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6020
https://github.com/root-project/root/pull/6021:69,integrability,sub,submitted,69,"[Tutorial] Add tutorial for fitting a histogram in a file.; Tutorial submitted by Eckhard v. Toerne. Apparently, a tutorial showing the complete workflow of retrieving a histogram from a file, fitting it, and plotting the results is missing. This is demonstrated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6021
https://github.com/root-project/root/pull/6021:136,safety,compl,complete,136,"[Tutorial] Add tutorial for fitting a histogram in a file.; Tutorial submitted by Eckhard v. Toerne. Apparently, a tutorial showing the complete workflow of retrieving a histogram from a file, fitting it, and plotting the results is missing. This is demonstrated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6021
https://github.com/root-project/root/pull/6021:136,security,compl,complete,136,"[Tutorial] Add tutorial for fitting a histogram in a file.; Tutorial submitted by Eckhard v. Toerne. Apparently, a tutorial showing the complete workflow of retrieving a histogram from a file, fitting it, and plotting the results is missing. This is demonstrated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6021
https://github.com/root-project/root/pull/6021:145,usability,workflow,workflow,145,"[Tutorial] Add tutorial for fitting a histogram in a file.; Tutorial submitted by Eckhard v. Toerne. Apparently, a tutorial showing the complete workflow of retrieving a histogram from a file, fitting it, and plotting the results is missing. This is demonstrated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6021
https://github.com/root-project/root/pull/6022:89,availability,error,error,89,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916); Most probable reason for error described in ROOT-10916 issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6022:34,energy efficiency,draw,drawing,34,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916); Most probable reason for error described in ROOT-10916 issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6022:89,performance,error,error,89,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916); Most probable reason for error described in ROOT-10916 issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6022:89,safety,error,error,89,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916); Most probable reason for error described in ROOT-10916 issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6022:89,usability,error,error,89,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916); Most probable reason for error described in ROOT-10916 issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6023:34,energy efficiency,draw,drawing,34,[jsroot] fix TStyle handling when drawing TCanvas (ROOT-10916) v6.22;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6023
https://github.com/root-project/root/pull/6024:208,availability,operat,operator,208,[PyROOT][ROOT-10870] Fixes/additions for CPPExcInstance; This PR:. - Fixes a corruption issue of `CPPExcInstance` objects that resulted in a crash at teardown time during garbage collection. - Adds a boolean operator to `CPPExcInstance` that forwards the call to the internal `CPPInstance`. The changes will be communicated to upstream cppyy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6024
https://github.com/root-project/root/pull/6024:159,performance,time,time,159,[PyROOT][ROOT-10870] Fixes/additions for CPPExcInstance; This PR:. - Fixes a corruption issue of `CPPExcInstance` objects that resulted in a crash at teardown time during garbage collection. - Adds a boolean operator to `CPPExcInstance` that forwards the call to the internal `CPPInstance`. The changes will be communicated to upstream cppyy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6024
https://github.com/root-project/root/pull/6027:442,availability,slo,slower,442,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:80,deployability,instal,installed,80,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:111,deployability,releas,release,111,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:560,deployability,patch,patch,560,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:871,deployability,patch,patches,871,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:18,energy efficiency,draw,drawing,18,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:147,energy efficiency,draw,drawing,147,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:501,energy efficiency,draw,draw,501,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:26,performance,perform,performance,26,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:155,performance,perform,performance,155,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:442,reliability,slo,slower,442,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:560,safety,patch,patch,560,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:871,safety,patch,patches,871,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:203,security,sign,significantly,203,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:534,security,sign,significant,534,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:560,security,patch,patch,560,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:871,security,patch,patches,871,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:26,usability,perform,performance,26,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:155,usability,perform,performance,155,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:685,usability,confirm,confirmed,685,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772. The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this? All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6028:66,integrability,Filter,Filter,66,"Fix Jira issue #ROOT-10925 Can not compile ROOT macro on Windows; Filter out internal DLLs, not supposed to be linked when using ACLiC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6028
https://github.com/root-project/root/pull/6029:89,integrability,messag,messages,89,Doxygen fixes; Fix some warnings during doxygen documentation generation. See the commit messages for details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6029
https://github.com/root-project/root/pull/6029:89,interoperability,messag,messages,89,Doxygen fixes; Fix some warnings during doxygen documentation generation. See the commit messages for details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6029
https://github.com/root-project/root/pull/6029:48,usability,document,documentation,48,Doxygen fixes; Fix some warnings during doxygen documentation generation. See the commit messages for details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6029
https://github.com/root-project/root/pull/6031:197,availability,error,error,197,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:112,deployability,build,build,112,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:231,deployability,build,building,231,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:264,deployability,build,build,264,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:287,deployability,Build,Build,287,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:0,interoperability,Compatib,Compatibility,0,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:197,performance,error,error,197,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:197,safety,error,error,197,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6031:197,usability,error,error,197,"Compatibility with xrootd 5.; The old client library libXrdClient is removed. Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already. disabled by default - give error if someone enables it while building. with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6032:14,availability,error,error,14,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6032:14,performance,error,error,14,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6032:14,safety,error,error,14,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6032:14,usability,error,error,14,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6032:23,usability,user,user,23,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6032:28,usability,guid,guide,28,[DF][NFC] Fix error in user guide image;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6032
https://github.com/root-project/root/pull/6033:72,integrability,Filter,Filter,72,"v6.22 Fix Jira issue #ROOT-10925 Can not compile ROOT macro on Windows; Filter out internal DLLs, not supposed to be linked when using ACLiC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6033
https://github.com/root-project/root/pull/6034:0,energy efficiency,Reduc,Reduce,0,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:214,energy efficiency,alloc,allocation,214,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:311,energy efficiency,alloc,allocations,311,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:174,performance,memor,memory,174,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:207,performance,memor,memory,207,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:271,performance,memor,memory,271,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:304,performance,memor,memory,304,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:422,performance,memor,memory,422,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:532,performance,memor,memory,532,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:608,performance,tune,tuned,608,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:103,usability,effectiv,effectively,103,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:166,usability,minim,minimal,166,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:174,usability,memor,memory,174,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:207,usability,memor,memory,207,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:271,usability,memor,memory,271,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:286,usability,minim,minimal,286,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:304,usability,memor,memory,304,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:422,usability,memor,memory,422,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6034:532,usability,memor,memory,532,"Reduce TBasket high water mark use. Fix ROOT-10927.; In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating. the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping. the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:. - files were kept open. - TTree were kept in memory. - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading. (This leads to spurrious large reallocation in case of a consecutive series of. large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6035:112,availability,avail,available,112,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:130,energy efficiency,load,loaded,130,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:130,performance,load,loaded,130,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:112,reliability,availab,available,112,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:112,safety,avail,available,112,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:112,security,availab,available,112,"In TClass::GetListOfBaseClasses, correct conditional.; It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6036:361,deployability,depend,depend,361,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:31,energy efficiency,alloc,allocation,31,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:169,energy efficiency,current,currently,169,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:153,integrability,buffer,buffer,153,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:361,integrability,depend,depend,361,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:361,modifiability,depend,depend,361,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:24,performance,memor,memory,24,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:361,safety,depend,depend,361,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:179,security,sign,significantly,179,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:361,testability,depend,depend,361,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6036:24,usability,memor,memory,24,"Improve TBasket/TBuffer memory allocation for reading.; Rename TBasket::Reset to TBasket::WriteReset. Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger. than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6037:321,availability,error,errors,321,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:482,availability,error,error,482,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:674,availability,error,error,674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:875,availability,error,error,875,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:106,deployability,fail,fails,106,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:279,deployability,fail,failing,279,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:686,deployability,Version,Version,686,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:727,deployability,Version,Version,727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1146,deployability,modul,module,1146,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1613,deployability,updat,updated,1613,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1674,deployability,updat,updated,1674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1706,deployability,build,build,1706,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1727,deployability,updat,update,1727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1239,energy efficiency,core,core,1239,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:686,integrability,Version,Version,686,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:727,integrability,Version,Version,727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:686,modifiability,Version,Version,686,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:727,modifiability,Version,Version,727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1146,modifiability,modul,module,1146,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:321,performance,error,errors,321,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:482,performance,error,error,482,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:674,performance,error,error,674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:875,performance,error,error,875,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:106,reliability,fail,fails,106,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:279,reliability,fail,failing,279,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:321,safety,error,errors,321,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:482,safety,error,error,482,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:674,safety,error,error,674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:875,safety,error,error,875,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1146,safety,modul,module,1146,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1613,safety,updat,updated,1613,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1674,safety,updat,updated,1674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1727,safety,updat,update,1727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1613,security,updat,updated,1613,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1674,security,updat,updated,1674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1727,security,updat,update,1727,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:321,usability,error,errors,321,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:438,usability,interact,interactive,438,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:482,usability,error,error,482,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:674,usability,error,error,674,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:875,usability,error,error,875,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1213,usability,User,Users,1213,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1287,usability,command,command,1287,"v6.22 Fix potential issue with dictionary generation on Windows; In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers. For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found. #include ""TMVA/Volume."". ^~~~~~~~~~~~~~. Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:168:10: fatal error: 'TMV/Version.h' file not found. #include ""TMV/Version.h"". ^~~~~~~~~~~~~~~. Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap. input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found. #include ""TMVA/TreInference/Objectives.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters. Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:. - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression. - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6038:347,deployability,patch,patches,347,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:10,energy efficiency,optim,optimization,10,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:85,energy efficiency,optim,optimization,85,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:10,performance,optimiz,optimization,10,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:85,performance,optimiz,optimization,85,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:247,performance,perform,performance-issue,247,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:347,safety,patch,patches,347,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:347,security,patch,patches,347,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:247,usability,perform,performance-issue,247,Set cling optimization level to 3 and turn off pointer checks; Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR. Please see the following discussion:. https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6039:249,availability,error,error,249,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:255,availability,state,state,255,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:284,availability,error,error,284,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:255,integrability,state,state,255,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:249,performance,error,error,249,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:284,performance,error,error,284,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:5,safety,except,exceptions,5,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:222,safety,test,test,222,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:249,safety,error,error,249,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:284,safety,error,error,284,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:222,testability,test,test,222,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:373,testability,simpl,simplification,373,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:249,usability,error,error,249,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:284,usability,error,error,284,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:373,usability,simpl,simplification,373,"[v7, exceptions] Add R__FORWARD_ERROR macro; For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6040:99,deployability,build,build,99,"Revert ""[To be reverted] Disable df026 because it requires pandas.""; PR to check the status of the build nodes wrt to pandas. Related to the ticket https://sft.its.cern.ch/jira/browse/ROOT-10921",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6040
https://github.com/root-project/root/pull/6040:85,usability,statu,status,85,"Revert ""[To be reverted] Disable df026 because it requires pandas.""; PR to check the status of the build nodes wrt to pandas. Related to the ticket https://sft.its.cern.ch/jira/browse/ROOT-10921",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6040
https://github.com/root-project/root/pull/6041:13,safety,test,test,13,[PyROOT] Fix test veto if ROOTTEST_IGNORE_NUMBA_PY[23] set.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6041
https://github.com/root-project/root/pull/6041:13,testability,test,test,13,[PyROOT] Fix test veto if ROOTTEST_IGNORE_NUMBA_PY[23] set.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6041
https://github.com/root-project/root/pull/6042:39,deployability,modul,module,39,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:107,deployability,modul,module,107,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:131,deployability,Modul,Modules,131,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:139,deployability,build,build,139,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:159,deployability,fail,fail,159,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:39,modifiability,modul,module,39,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:107,modifiability,modul,module,107,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:131,modifiability,Modul,Modules,131,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:159,reliability,fail,fail,159,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:39,safety,modul,module,39,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:107,safety,modul,module,107,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6042:131,safety,Modul,Modules,131,Add missing header TEveVector.h in Eve module; This commit adds the missing TEveVector.h header in the Eve module which causes the Modules build on Windows to fail. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6042
https://github.com/root-project/root/pull/6043:19,deployability,modul,modules,19,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:78,deployability,modul,modules,78,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:188,deployability,modul,modules,188,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:19,modifiability,modul,modules,19,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:78,modifiability,modul,modules,78,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:188,modifiability,modul,modules,188,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:19,safety,modul,modules,19,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:78,safety,modul,modules,78,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6043:188,safety,modul,modules,188,"Fix libary path of modules for Windows; This commit fixes the library path of modules in Windows by adding the Bin directory in the list of paths. Previously, ROOT by default assumes that modules are present in the Lib directory which is not the case for Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6043
https://github.com/root-project/root/pull/6044:34,energy efficiency,draw,drawing,34,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6044
https://github.com/root-project/root/pull/6044:14,usability,close,close,14,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6044
https://github.com/root-project/root/pull/6044:138,usability,close,close,138,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6044
https://github.com/root-project/root/pull/6044:285,usability,close,close,285,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6044
https://github.com/root-project/root/pull/6045:34,energy efficiency,draw,drawing,34,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6045
https://github.com/root-project/root/pull/6045:14,usability,close,close,14,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6045
https://github.com/root-project/root/pull/6045:138,usability,close,close,138,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6045
https://github.com/root-project/root/pull/6045:285,usability,close,close,285,"[RF] Properly close polygons when drawing PDFs as surfaces.; [ROOT-10931] Due to an unstable sorting algorithm, polygons sometimes. won't close, since the order of the outermost points is not preserved. By moving those points by 1/1000 of the distance between points, they. now always close.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6045
https://github.com/root-project/root/pull/6046:125,availability,error,errors,125,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:369,availability,Error,Error,369,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:452,availability,Error,Error,452,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:566,deployability,Updat,Update,566,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:612,deployability,updat,update,612,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:427,integrability,interfac,interface,427,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:520,integrability,wrap,wrapper,520,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:427,interoperability,interfac,interface,427,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:520,interoperability,wrapper,wrapper,520,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:427,modifiability,interfac,interface,427,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:125,performance,error,errors,125,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:369,performance,Error,Error,369,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:452,performance,Error,Error,452,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:125,safety,error,errors,125,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:369,safety,Error,Error,369,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:452,safety,Error,Error,452,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:566,safety,Updat,Update,566,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:612,safety,updat,update,612,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:566,security,Updat,Update,566,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:612,security,updat,update,612,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:162,testability,context,context,162,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:125,usability,error,errors,125,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:170,usability,menu,menu,170,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:315,usability,Dialog,Dialog,315,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:369,usability,Error,Error,369,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:452,usability,Error,Error,452,"Fix Jira issue #ROOT-10883 Warning in TBrowser when selecting ""Add"" m…; …ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):. ```. Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ```. And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6047:35,reliability,poisson,poisson,35,Fix handling the asymptotic single poisson constraint in the AsymptoticCalculator (ROOT-10920); Avoid cloning the pdf when creating a NuisancePdf in RooStats::MakeNuisancePdf. Without the cloning then the call in the AsymptoticCalculator to setNoRounding(true) is effective. This fixes ROOT-10920. Also apply a small fix when setting an external nuisance pdf in the RooStats HybridCalculator,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6047
https://github.com/root-project/root/pull/6047:96,safety,Avoid,Avoid,96,Fix handling the asymptotic single poisson constraint in the AsymptoticCalculator (ROOT-10920); Avoid cloning the pdf when creating a NuisancePdf in RooStats::MakeNuisancePdf. Without the cloning then the call in the AsymptoticCalculator to setNoRounding(true) is effective. This fixes ROOT-10920. Also apply a small fix when setting an external nuisance pdf in the RooStats HybridCalculator,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6047
https://github.com/root-project/root/pull/6047:264,usability,effectiv,effective,264,Fix handling the asymptotic single poisson constraint in the AsymptoticCalculator (ROOT-10920); Avoid cloning the pdf when creating a NuisancePdf in RooStats::MakeNuisancePdf. Without the cloning then the call in the AsymptoticCalculator to setNoRounding(true) is effective. This fixes ROOT-10920. Also apply a small fix when setting an external nuisance pdf in the RooStats HybridCalculator,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6047
https://github.com/root-project/root/pull/6048:113,integrability,compon,component,113,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:242,integrability,compon,components,242,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:113,interoperability,compon,component,113,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:242,interoperability,compon,components,242,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:113,modifiability,compon,component,113,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:242,modifiability,compon,components,242,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:292,reliability,Poisson,Poisson,292,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:75,safety,Avoid,Avoid,75,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:215,safety,avoid,avoid,215,Backport in 6.22 of fix for ROOT-10920 in RooStats::AsymptoticCalculator ; Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6049:9,deployability,modul,modulemap,9,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:39,energy efficiency,Reduc,Reduce,39,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:62,energy efficiency,adapt,adapt,62,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:62,integrability,adapt,adapt,62,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:62,interoperability,adapt,adapt,62,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:9,modifiability,modul,modulemap,9,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:24,modifiability,maintain,maintainable,24,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:62,modifiability,adapt,adapt,62,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:9,safety,modul,modulemap,9,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:24,safety,maintain,maintainable,24,Make the modulemap more maintainable.; Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6051:107,energy efficiency,load,loading,107,[To be reverted] Fix the data of RDF tutorial df105; The datasets are suboptimally created and trigger the loading of the. full dataset with reading the metadata. This results in reading 150GB. of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6051
https://github.com/root-project/root/pull/6051:70,integrability,sub,suboptimally,70,[To be reverted] Fix the data of RDF tutorial df105; The datasets are suboptimally created and trigger the loading of the. full dataset with reading the metadata. This results in reading 150GB. of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6051
https://github.com/root-project/root/pull/6051:245,integrability,event,events,245,[To be reverted] Fix the data of RDF tutorial df105; The datasets are suboptimally created and trigger the loading of the. full dataset with reading the metadata. This results in reading 150GB. of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6051
https://github.com/root-project/root/pull/6051:107,performance,load,loading,107,[To be reverted] Fix the data of RDF tutorial df105; The datasets are suboptimally created and trigger the loading of the. full dataset with reading the metadata. This results in reading 150GB. of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6051
https://github.com/root-project/root/pull/6052:31,deployability,modul,modules,31,"Reduce depdendencies, move few modules out of the boost_modules_wrapper.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6052
https://github.com/root-project/root/pull/6052:0,energy efficiency,Reduc,Reduce,0,"Reduce depdendencies, move few modules out of the boost_modules_wrapper.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6052
https://github.com/root-project/root/pull/6052:31,modifiability,modul,modules,31,"Reduce depdendencies, move few modules out of the boost_modules_wrapper.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6052
https://github.com/root-project/root/pull/6052:31,safety,modul,modules,31,"Reduce depdendencies, move few modules out of the boost_modules_wrapper.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6052
https://github.com/root-project/root/pull/6053:34,modifiability,variab,variable,34,Remove definition of unused cmake variable;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6053
https://github.com/root-project/root/pull/6054:6,deployability,instal,installation,6,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:87,deployability,build,build,87,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:159,deployability,instal,installation,159,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:242,deployability,instal,install,242,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:505,deployability,build,builds,505,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:520,deployability,modul,modules,520,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:536,deployability,instal,installed,536,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:695,deployability,configurat,configuration,695,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:832,deployability,modul,modules,832,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:974,deployability,instal,install,974,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:695,integrability,configur,configuration,695,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:329,interoperability,standard,standard,329,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:477,interoperability,platform,platforms,477,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:595,interoperability,compatib,compatibility,595,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:229,modifiability,pac,packagers,229,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:520,modifiability,modul,modules,520,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:695,modifiability,configur,configuration,695,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:832,modifiability,modul,modules,832,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:1283,modifiability,pac,package,1283,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:709,performance,time,time,709,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:520,safety,modul,modules,520,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:832,safety,modul,modules,832,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:695,security,configur,configuration,695,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:145,usability,custom,customize,145,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:223,usability,user,users,223,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:1208,usability,help,help,1208,"Allow installation of PyROOT in python system directories; A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation. directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,. non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6055:112,deployability,automat,automatic,112,"[PyROOT] Add TPyDispatcher for programming GUI callbacks in Python; If possible, this should be replaced by the automatic wrapping of Python callables provided by new cppyy (work started by @vepadulano).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6055
https://github.com/root-project/root/pull/6055:122,integrability,wrap,wrapping,122,"[PyROOT] Add TPyDispatcher for programming GUI callbacks in Python; If possible, this should be replaced by the automatic wrapping of Python callables provided by new cppyy (work started by @vepadulano).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6055
https://github.com/root-project/root/pull/6055:112,testability,automat,automatic,112,"[PyROOT] Add TPyDispatcher for programming GUI callbacks in Python; If possible, this should be replaced by the automatic wrapping of Python callables provided by new cppyy (work started by @vepadulano).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6055
https://github.com/root-project/root/pull/6056:298,availability,error,error,298,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:337,availability,error,error,337,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:419,availability,Error,Error,419,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:485,availability,failur,failure,485,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:292,deployability,build,build,292,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:485,deployability,fail,failure,485,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:298,performance,error,error,298,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:337,performance,error,error,337,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:419,performance,Error,Error,419,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:485,performance,failur,failure,485,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:485,reliability,fail,failure,485,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:298,safety,error,error,298,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:337,safety,error,error,337,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:419,safety,Error,Error,419,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:298,usability,error,error,298,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:337,usability,error,error,337,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:419,usability,Error,Error,419,"[cmake] Append to include directories, do not overwrite them; This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```. input_line_12:3:10: fatal error: 'inc/classes.h' file not found. #include ""inc/classes.h"". ^~~~~~~~~~~~~~~. Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6057:96,deployability,updat,update,96,"[PyROOT] Add workaround for frozen rootbrowse on MacOS; Since MacOS blocks our second thread to update the GUI, rootbrowse will. run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in. Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6057:137,integrability,event,event,137,"[PyROOT] Add workaround for frozen rootbrowse on MacOS; Since MacOS blocks our second thread to update the GUI, rootbrowse will. run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in. Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6057:96,safety,updat,update,96,"[PyROOT] Add workaround for frozen rootbrowse on MacOS; Since MacOS blocks our second thread to update the GUI, rootbrowse will. run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in. Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6057:212,safety,hot,hotfix,212,"[PyROOT] Add workaround for frozen rootbrowse on MacOS; Since MacOS blocks our second thread to update the GUI, rootbrowse will. run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in. Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6057:96,security,updat,update,96,"[PyROOT] Add workaround for frozen rootbrowse on MacOS; Since MacOS blocks our second thread to update the GUI, rootbrowse will. run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in. Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6058:79,deployability,updat,update,79,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:13,energy efficiency,Adapt,Adapt,13,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:13,integrability,Adapt,Adapt,13,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:13,interoperability,Adapt,Adapt,13,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:133,interoperability,compatib,compatible,133,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:13,modifiability,Adapt,Adapt,13,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:79,safety,updat,update,79,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:79,security,updat,update,79,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:27,usability,support,support,27,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6058:94,usability,support,support,94,"[ROOT-10936] Adapt TMVA to support cuDNN 8; WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6059:31,availability,error,error,31,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6059:37,integrability,messag,messages,37,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6059:37,interoperability,messag,messages,37,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6059:31,performance,error,error,31,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6059:31,safety,error,error,31,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6059:31,usability,error,error,31,Enable again the usage of ROOT error messages (TError) in Minuit2; For some unknown reasons using TError in Minuit2 was disabled. It should be enabled when compiling Minuit2 within ROOT. This is done by setting the preprocessor macro USE_ROOT_ERROR,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6059
https://github.com/root-project/root/pull/6060:41,usability,minim,minimum,41,Backport in 6.22 bug in Minos when a new minimum is found;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6060
https://github.com/root-project/root/pull/6061:149,modifiability,paramet,parameters,149,Avoid auto-parsing for std::pair during I/O init.; Don't provoke auto-parsing during name normalization for the std::pair (but let it happen for its parameters if need be). In TGenCollectionProxy Don't provoke autoparsing for an std::pair. In TGenCollectionProxy handle the fact that we may now not find the std::pair. Addresses (at least part of) ROOT-10932,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6061
https://github.com/root-project/root/pull/6061:40,performance,I/O,I/O,40,Avoid auto-parsing for std::pair during I/O init.; Don't provoke auto-parsing during name normalization for the std::pair (but let it happen for its parameters if need be). In TGenCollectionProxy Don't provoke autoparsing for an std::pair. In TGenCollectionProxy handle the fact that we may now not find the std::pair. Addresses (at least part of) ROOT-10932,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6061
https://github.com/root-project/root/pull/6061:0,safety,Avoid,Avoid,0,Avoid auto-parsing for std::pair during I/O init.; Don't provoke auto-parsing during name normalization for the std::pair (but let it happen for its parameters if need be). In TGenCollectionProxy Don't provoke autoparsing for an std::pair. In TGenCollectionProxy handle the fact that we may now not find the std::pair. Addresses (at least part of) ROOT-10932,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6061
https://github.com/root-project/root/pull/6062:0,energy efficiency,Reduc,Reduce,0,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:37,energy efficiency,core,core,37,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:364,energy efficiency,core,core,364,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:231,integrability,event,event-though,231,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:457,integrability,event,events,457,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:511,integrability,event,events,511,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:565,integrability,event,events,565,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:618,integrability,event,events,618,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:673,integrability,event,events,673,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:728,integrability,event,events,728,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:783,integrability,event,events,783,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:838,integrability,event,events,838,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:893,integrability,event,events,893,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:949,integrability,event,events,949,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1005,integrability,event,events,1005,"ontention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1061,integrability,event,events,1061,"used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1117,integrability,event,events,1117,"github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1173,integrability,event,events,1173,". The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1229,integrability,event,events,1229,"vent-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1285,integrability,event,events,1285,"he same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1341,integrability,event,events,1341,hreads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. thr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1397,integrability,event,events,1397,ys at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. thre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1453,integrability,event,events,1453, events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. thread,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1509,integrability,event,events,1509,vents: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1565,integrability,event,events,1565,nts: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1621,integrability,event,events,1621,: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1677,integrability,event,events,1677, 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1733,integrability,event,events,1733,40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1789,integrability,event,events,1789,0000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1845,integrability,event,events,1845,000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1899,integrability,event,events,1899,0000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1955,integrability,event,events,1955,0000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2011,integrability,event,events,2011,0000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2067,integrability,event,events,2067,0000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 ite,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2123,integrability,event,events,2123,0000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 ite,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2179,integrability,event,events,2179,0000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 ite,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2235,integrability,event,events,2235,0000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 ite,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2307,integrability,event,events,2307,0.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2362,integrability,event,events,2362,91.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2417,integrability,event,events,2417,298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2471,integrability,event,events,2471,: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 event,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2526,integrability,event,events,2526,e: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 even,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2581,integrability,event,events,2581,me: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 eve,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2636,integrability,event,events,2636,ime: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 ev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2689,integrability,event,events,2689,0 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2744,integrability,event,events,2744,00 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2800,integrability,event,events,2800,00 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2856,integrability,event,events,2856,00 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2912,integrability,event,events,2912, time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2967,integrability,event,events,2967,0 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3023,integrability,event,events,3023,0 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3077,integrability,event,events,3077,000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3133,integrability,event,events,3133,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3189,integrability,event,events,3189,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3245,integrability,event,events,3245,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3301,integrability,event,events,3301,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3357,integrability,event,events,3357,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3413,integrability,event,events,3413,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3469,integrability,event,events,3469,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3525,integrability,event,events,3525,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3581,integrability,event,events,3581,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3637,integrability,event,events,3637,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3693,integrability,event,events,3693,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3749,integrability,event,events,3749,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3805,integrability,event,events,3805,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3859,integrability,event,events,3859,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3915,integrability,event,events,3915,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3971,integrability,event,events,3971,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:4027,integrability,event,events,4027,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:4083,integrability,event,events,4083,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:7,performance,content,contention,7,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:296,performance,time,time,296,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:474,performance,time,time,474,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:528,performance,time,time,528,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:582,performance,time,time,582,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:635,performance,time,time,635,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:690,performance,time,time,690,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:745,performance,time,time,745,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:800,performance,time,time,800,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:855,performance,time,time,855,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:910,performance,time,time,910,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:966,performance,time,time,966,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1022,performance,time,time,1022,"e atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1078,performance,time,time,1078,"mprovements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1134,performance,time,time,1134,"project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1190,performance,time,time,1190,"low are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1246,performance,time,time,1246," are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1302,performance,time,time,1302,e with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1358,performance,time,time,1358,eal core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1414,performance,time,time,1414,ity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1470,performance,time,time,1470,0 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1526,performance,time,time,1526,time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 ev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1582,performance,time,time,1582,me: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 eve,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1638,performance,time,time,1638, 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 even,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1694,performance,time,time,1694,214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1750,performance,time,time,1750,20.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1806,performance,time,time,1806,9.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1862,performance,time,time,1862,.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1916,performance,time,time,1916,2.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:1972,performance,time,time,1972,4.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2028,performance,time,time,2028,9.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2084,performance,time,time,2084,2.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2140,performance,time,time,2140,7.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2196,performance,time,time,2196,5.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2252,performance,time,time,2252,3.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2324,performance,time,time,2324,: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2379,performance,time,time,2379,s: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2434,performance,time,time,2434,ds: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2488,performance,time,time,2488,eads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2543,performance,time,time,2543,reads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 tim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2598,performance,time,time,2598,hreads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2653,performance,time,time,2653,threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2706,performance,time,time,2706,s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 4000000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2761,performance,time,time,2761, s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 400000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2817,performance,time,time,2817, s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 400000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2873,performance,time,time,2873,. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2929,performance,time,time,2929,. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:2984,performance,time,time,2984,s. threads: 28 items: 10 events: 40000000 time: 359.936 s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 4000000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3040,performance,time,time,3040,s. threads: 29 items: 10 events: 40000000 time: 650.803 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 4000000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3094,performance,time,time,3094,3 s. threads: 30 items: 10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3150,performance,time,time,3150,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3206,performance,time,time,3206,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3262,performance,time,time,3262,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3318,performance,time,time,3318,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3374,performance,time,time,3374,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3430,performance,time,time,3430,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3486,performance,time,time,3486,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3542,performance,time,time,3542,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3598,performance,time,time,3598,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3654,performance,time,time,3654,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3710,performance,time,time,3710,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3766,performance,time,time,3766,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3822,performance,time,time,3822,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3876,performance,time,time,3876,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3932,performance,time,time,3932,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:3988,performance,time,time,3988,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:4044,performance,time,time,4044,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:4100,performance,time,time,4100,10 events: 40000000 time: 383.258 s. threads: 31 items: 10 events: 40000000 time: 396.386 s. threads: 32 items: 10 events: 40000000 time: 407.827 s. ```. after. ```. threads: 1 items: 10 events: 40000000 time: 137.238 s. threads: 2 items: 10 events: 40000000 time: 133.271 s. threads: 3 items: 10 events: 40000000 time: 132.73 s. threads: 4 items: 10 events: 40000000 time: 135.589 s. threads: 5 items: 10 events: 40000000 time: 134.098 s. threads: 6 items: 10 events: 40000000 time: 135.231 s. threads: 7 items: 10 events: 40000000 time: 135.1 s. threads: 8 items: 10 events: 40000000 time: 135.831 s. threads: 9 items: 10 events: 40000000 time: 137.835 s. threads: 10 items: 10 events: 40000000 time: 135.396 s. threads: 11 items: 10 events: 40000000 time: 140.318 s. threads: 12 items: 10 events: 40000000 time: 134.98 s. threads: 13 items: 10 events: 40000000 time: 135.903 s. threads: 14 items: 10 events: 40000000 time: 135.5 s. threads: 15 items: 10 events: 40000000 time: 148.489 s. threads: 16 items: 10 events: 40000000 time: 138.087 s. threads: 16 items: 10 events: 40000000 time: 140.827 s. threads: 17 items: 10 events: 40000000 time: 138.913 s. threads: 18 items: 10 events: 40000000 time: 141.967 s. threads: 19 items: 10 events: 40000000 time: 140.632 s. threads: 20 items: 10 events: 40000000 time: 141.348 s. threads: 21 items: 10 events: 40000000 time: 136.448 s. threads: 22 items: 10 events: 40000000 time: 143.764 s. threads: 23 items: 10 events: 40000000 time: 139.445 s. threads: 24 items: 10 events: 40000000 time: 156.048 s. threads: 25 items: 10 events: 40000000 time: 138.128 s. threads: 26 items: 10 events: 40000000 time: 145.185 s. threads: 27 items: 10 events: 40000000 time: 137.8 s. threads: 27 items: 10 events: 40000000 time: 158.187 s. threads: 28 items: 10 events: 40000000 time: 141.434 s. threads: 30 items: 10 events: 40000000 time: 182.248 s. threads: 31 items: 10 events: 40000000 time: 142.101 s. threads: 32 items: 10 events: 40000000 time: 141.625 s. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:59,safety,test,test,59,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6062:59,testability,test,test,59,"Reduce contention on some atomics in core/meta and io; The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:. ```. threads: 1 items: 10 events: 40000000 time: 192.72 s. threads: 2 items: 10 events: 40000000 time: 211.41 s. threads: 3 items: 10 events: 40000000 time: 219.9 s. threads: 4 items: 10 events: 40000000 time: 212.033 s. threads: 5 items: 10 events: 40000000 time: 214.991 s. threads: 6 items: 10 events: 40000000 time: 220.459 s. threads: 7 items: 10 events: 40000000 time: 219.831 s. threads: 8 items: 10 events: 40000000 time: 236.328 s. threads: 9 items: 10 events: 40000000 time: 222.565 s. threads: 10 items: 10 events: 40000000 time: 224.154 s. threads: 11 items: 10 events: 40000000 time: 229.009 s. threads: 12 items: 10 events: 40000000 time: 232.501 s. threads: 13 items: 10 events: 40000000 time: 227.134 s. threads: 14 items: 10 events: 40000000 time: 225.087 s. threads: 15 items: 10 events: 40000000 time: 223.564 s. threads: 16 items: 10 events: 40000000 time: 270.977 s. threads: 16 items: 10 events: 40000000 time: 291.434 s. threads: 17 items: 10 events: 40000000 time: 298.618 s. threads: 18 items: 10 events: 40000000 time: 237.387 s. threads: 19 items: 10 events: 40000000 time: 434.656 s. threads: 20 items: 10 events: 40000000 time: 358.451 s. threads: 21 items: 10 events: 40000000 time: 364.873 s. threads: 22 items: 10 events: 40000000 time: 491.755 s. threads: 23 items: 10 events: 40000000 time: 404.095 s. threads: 24 items: 10 events: 40000000 time: 444.607 s. threads: 25 items: 10 events: 40000000 time: 577.3 s. threads: 26 items: 10 events: 40000000 time: 603.918 s. threads: 27 items: 10 events: 40000000 time: 349.925 s. threads: 28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6064:37,deployability,version,version,37,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:50,deployability,build,building,50,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:90,deployability,build,building,90,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:177,deployability,build,builds,177,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:37,integrability,version,version,37,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:37,modifiability,version,version,37,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:8,safety,Prevent,Prevent,8,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:8,security,Preven,Prevent,8,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6064:184,usability,confirm,confirm,184,"[CMake] Prevent overwriting --python-version when building with only …; …one Python. When building with one Python, `PYTHON_VERSION_STRING_Development_Other` is not defined. If builds confirm I will merge and backport to 6.22, @oshadura can have a look when she is back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6064
https://github.com/root-project/root/pull/6065:223,deployability,automat,automatic,223,"[PyROOT] Backport 6.22: Add TPyDispatcher for programming GUI callbacks in Python; Backport of https://github.com/root-project/root/pull/6055. Same as for the PR in master, if a better solution can be implemented using the automatic C++ wrappers of cppyy (work started by @vepadulano ), the changes in this PR will not be necessary anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6065
https://github.com/root-project/root/pull/6065:237,integrability,wrap,wrappers,237,"[PyROOT] Backport 6.22: Add TPyDispatcher for programming GUI callbacks in Python; Backport of https://github.com/root-project/root/pull/6055. Same as for the PR in master, if a better solution can be implemented using the automatic C++ wrappers of cppyy (work started by @vepadulano ), the changes in this PR will not be necessary anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6065
https://github.com/root-project/root/pull/6065:237,interoperability,wrapper,wrappers,237,"[PyROOT] Backport 6.22: Add TPyDispatcher for programming GUI callbacks in Python; Backport of https://github.com/root-project/root/pull/6055. Same as for the PR in master, if a better solution can be implemented using the automatic C++ wrappers of cppyy (work started by @vepadulano ), the changes in this PR will not be necessary anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6065
https://github.com/root-project/root/pull/6065:223,testability,automat,automatic,223,"[PyROOT] Backport 6.22: Add TPyDispatcher for programming GUI callbacks in Python; Backport of https://github.com/root-project/root/pull/6055. Same as for the PR in master, if a better solution can be implemented using the automatic C++ wrappers of cppyy (work started by @vepadulano ), the changes in this PR will not be necessary anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6065
https://github.com/root-project/root/pull/6066:52,deployability,version,version,52,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6066:65,deployability,build,building,65,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6066:52,integrability,version,version,52,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6066:52,modifiability,version,version,52,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6066:23,safety,Prevent,Prevent,23,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6066:23,security,Preven,Prevent,23,[CMake] Backport 6.22: Prevent overwriting --python-version when building with only …; …one Python. Backport of https://github.com/root-project/root/pull/6064,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6066
https://github.com/root-project/root/pull/6067:59,availability,redund,redundant-argument-in-tgraphpolar,59,fix macro3; Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6067:59,deployability,redundan,redundant-argument-in-tgraphpolar,59,fix macro3; Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6067:59,reliability,redundan,redundant-argument-in-tgraphpolar,59,fix macro3; Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6067:59,safety,redund,redundant-argument-in-tgraphpolar,59,fix macro3; Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6068:372,integrability,sub,subclasses,372,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6068:21,usability,document,documentation,21,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6068:108,usability,document,documentation,108,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6068:154,usability,guid,guide,154,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6068:447,usability,document,documentation,447,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6068:597,usability,user,user-images,597,[PyROOT][Docs] Parse documentation in pythonization .py files; [skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6070:35,deployability,updat,updates,35,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:94,deployability,updat,updates,94,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:35,safety,updat,updates,35,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:94,safety,updat,updates,94,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:35,security,updat,updates,35,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:94,security,updat,updates,94,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:21,usability,document,documentation,21,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6070:80,usability,document,documentation,80,[Docs] Collection of documentation updates.; A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6071:22,safety,test,test,22,"[Tree] Add regression test for the issue described in ROOT-10942; i.e. t.GetLeaf(t.GetLeaf(""a"")->GetFullName()) == nullptr in some cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6071
https://github.com/root-project/root/pull/6071:11,testability,regress,regression,11,"[Tree] Add regression test for the issue described in ROOT-10942; i.e. t.GetLeaf(t.GetLeaf(""a"")->GetFullName()) == nullptr in some cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6071
https://github.com/root-project/root/pull/6071:22,testability,test,test,22,"[Tree] Add regression test for the issue described in ROOT-10942; i.e. t.GetLeaf(t.GetLeaf(""a"")->GetFullName()) == nullptr in some cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6071
https://github.com/root-project/root/pull/6072:76,deployability,patch,patch,76,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:253,deployability,patch,patch,253,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:643,deployability,log,logic,643,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:482,energy efficiency,power,powerful,482,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:43,safety,valid,valid,43,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:76,safety,patch,patch,76,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:158,safety,valid,valid,158,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:222,safety,valid,valid,222,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:253,safety,patch,patch,253,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:297,safety,valid,valid,297,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:352,safety,avoid,avoid,352,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:643,safety,log,logic,643,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:675,safety,valid,valid,675,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:787,safety,valid,valid,787,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:881,safety,valid,valid,881,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:930,safety,valid,valid,930,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:76,security,patch,patch,76,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:253,security,patch,patch,253,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:643,security,log,logic,643,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:643,testability,log,logic,643,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:340,usability,behavi,behavior,340,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:378,usability,behavi,behavior,378,"[DF] Add all spellings of a branch name to valid column names ; Before this patch, in cases in which t.GetBranch(""a.b"") and. t.GetBranch(""b"") both returned a valid address, RDataFrame was adding. only ""a.b"" to the list of valid TTree columns. With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,. described in detail in ROOT-10942: since ROOT-10702 was fixed,. TTree::GetBranch became more powerful and started returning non-null. addresses for branch names with form ""a.b"" while it was returning a. nullptr until v6.20/06. With RDataFrame's previous logic, this in turn. meant that valid code that was using ""a"" as a column broke as RDataFrame. was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a. valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6073:513,availability,error,error,513,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:557,modifiability,paramet,parameter,557,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:513,performance,error,error,513,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:209,safety,input,inputs,209,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:278,safety,input,inputs,278,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:513,safety,error,error,513,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:338,security,ident,identical,338,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:209,usability,input,inputs,209,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:278,usability,input,inputs,278,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6073:513,usability,error,error,513,"[io] combine merge handling cases for TObjects; Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:. 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or. 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the. `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and. `TFileMerge*` info. For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6074:32,integrability,buffer,buffer,32,Eve-7: Use REveRenderData index buffer as unsigned integer array ; Store index buffer as unsigned integer as it is convention in Web GL graphics:. https://github.com/alja/root/blob/uint-idxBuff/ui5/eve7/lib/EveManager.js#L447,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6074
https://github.com/root-project/root/pull/6074:79,integrability,buffer,buffer,79,Eve-7: Use REveRenderData index buffer as unsigned integer array ; Store index buffer as unsigned integer as it is convention in Web GL graphics:. https://github.com/alja/root/blob/uint-idxBuff/ui5/eve7/lib/EveManager.js#L447,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6074
https://github.com/root-project/root/pull/6074:181,usability,ui,uint-idxBuff,181,Eve-7: Use REveRenderData index buffer as unsigned integer array ; Store index buffer as unsigned integer as it is convention in Web GL graphics:. https://github.com/alja/root/blob/uint-idxBuff/ui5/eve7/lib/EveManager.js#L447,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6074
https://github.com/root-project/root/pull/6075:10,deployability,modul,modules,10,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:46,deployability,patch,patch,46,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:143,deployability,modul,modulemap,143,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:10,modifiability,modul,modules,10,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:143,modifiability,modul,modulemap,143,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:128,performance,content,content,128,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:10,safety,modul,modules,10,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:46,safety,patch,patch,46,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:66,safety,accid,accidental,66,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:143,safety,modul,modulemap,143,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6075:46,security,patch,patch,46,Make more modules such as uuid to work.; This patch also fixes an accidental merge problem where we essentially. added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6079:139,deployability,configurat,configuration,139,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:139,integrability,configur,configuration,139,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:139,modifiability,configur,configuration,139,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:139,security,configur,configuration,139,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:4,testability,regress,regression,4,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:79,usability,support,supports,79,"fix regression in f8edeb9 not using correct string_view with CUDA; CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6080:42,deployability,log,logic,42,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:85,energy efficiency,current,current,85,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:0,safety,Compl,Comply,0,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:42,safety,log,logic,42,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:0,security,Compl,Comply,0,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:42,security,log,logic,42,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6080:42,testability,log,logic,42,Comply with TVirtualMCStack::PopNextTrack logic; Don't rely on the engine to set the current track after popping from. TMCManagerStack but do it implicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6080
https://github.com/root-project/root/pull/6081:282,reliability,doe,does,282,"[TreeReader] Add support for TBranchObjects ; To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6081
https://github.com/root-project/root/pull/6081:346,reliability,doe,does,346,"[TreeReader] Add support for TBranchObjects ; To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6081
https://github.com/root-project/root/pull/6081:17,usability,support,support,17,"[TreeReader] Add support for TBranchObjects ; To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6081
https://github.com/root-project/root/pull/6082:98,deployability,modul,modulemap,98,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:249,deployability,modul,modulemaps,249,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:303,deployability,modul,modulemap,303,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:241,energy efficiency,load,load,241,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:288,energy efficiency,load,load,288,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:86,interoperability,specif,specify,86,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:98,modifiability,modul,modulemap,98,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:164,modifiability,variab,variable,164,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:249,modifiability,modul,modulemaps,249,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:303,modifiability,modul,modulemap,303,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:241,performance,load,load,241,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:288,performance,load,load,288,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:98,safety,modul,modulemap,98,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:249,safety,modul,modulemaps,249,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:303,safety,modul,modulemap,303,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:77,usability,user,users,77,[cxxmodules] CLING_MODULEMAP_PATH becomes CLING_MODULEMAP_FILES; This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6083:8,deployability,fail,failing,8,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:182,deployability,fail,failing,182,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:263,deployability,updat,updated,263,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:8,reliability,fail,failing,8,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:182,reliability,fail,failing,182,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:46,safety,test,tests,46,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:263,safety,updat,updated,263,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:263,security,updat,updated,263,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:46,testability,test,tests,46,"Disable failing pyroot and dataframe (Python) tests on Windows; - dependency_versions.py: cannot run the root-config shell script on Windows. - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6086:288,reliability,doe,does,288,"[TreeReader] Add support for TBranchObjects (6.22); To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6086
https://github.com/root-project/root/pull/6086:352,reliability,doe,does,352,"[TreeReader] Add support for TBranchObjects (6.22); To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6086
https://github.com/root-project/root/pull/6086:17,usability,support,support,17,"[TreeReader] Add support for TBranchObjects (6.22); To this end, two changes were introduced:. * TBranchProxy::Setup now uses the more generic fBranch->SetupAddresses(). instead of fBranch->SetupAddress(nullptr) to trigger the setting. of TBranch::fAddress: TBranchObject::SetupAddresses does the right. thing, but TBranchObject::SetupAddress(nullptr) does not. * if the branch is a TBranchObject, we set TBranchProxy::fIsaPointer to. true, as TBranchObject::GetAddress() returns a pointer to pointer to. the actual object. This fixes ROOT-10022, ROOT-10023 and ROOT-9731.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6086
https://github.com/root-project/root/pull/6087:20,safety,test,test,20,[DF] Add regression test for ROOT-9731 (RDF+TBranchObject);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6087
https://github.com/root-project/root/pull/6087:9,testability,regress,regression,9,[DF] Add regression test for ROOT-9731 (RDF+TBranchObject);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6087
https://github.com/root-project/root/pull/6087:20,testability,test,test,20,[DF] Add regression test for ROOT-9731 (RDF+TBranchObject);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6087
https://github.com/root-project/root/pull/6088:45,deployability,log,logic,45,Remove a obsolete Win32 specific code (whose logic was wrong anyway);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6088
https://github.com/root-project/root/pull/6088:24,interoperability,specif,specific,24,Remove a obsolete Win32 specific code (whose logic was wrong anyway);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6088
https://github.com/root-project/root/pull/6088:45,safety,log,logic,45,Remove a obsolete Win32 specific code (whose logic was wrong anyway);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6088
https://github.com/root-project/root/pull/6088:45,security,log,logic,45,Remove a obsolete Win32 specific code (whose logic was wrong anyway);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6088
https://github.com/root-project/root/pull/6088:45,testability,log,logic,45,Remove a obsolete Win32 specific code (whose logic was wrong anyway);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6088
https://github.com/root-project/root/pull/6089:186,deployability,patch,patches,186,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:233,deployability,patch,patches,233,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:293,deployability,patch,patches,293,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:18,energy efficiency,draw,drawing,18,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:26,performance,perform,performance,26,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:186,safety,patch,patches,186,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:233,safety,patch,patches,233,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:293,safety,patch,patches,293,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:186,security,patch,patches,186,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:233,security,patch,patches,233,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:293,security,patch,patches,293,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:26,usability,perform,performance,26,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:356,usability,tool,tools,356,"[Fix][graf2d] Fix drawing performance of marker styles 6 and 7; Hello,. these are exactly the same changes as PR #6027. Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,. Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6090:84,energy efficiency,optim,optimisation,84,[RF] Speed improvement and a little usability; Two small things:. - Disable level 2 optimisation when batch mode in use. It just wastes time. - Check that sigmas of Gaussians are positive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6090
https://github.com/root-project/root/pull/6090:102,integrability,batch,batch,102,[RF] Speed improvement and a little usability; Two small things:. - Disable level 2 optimisation when batch mode in use. It just wastes time. - Check that sigmas of Gaussians are positive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6090
https://github.com/root-project/root/pull/6090:102,performance,batch,batch,102,[RF] Speed improvement and a little usability; Two small things:. - Disable level 2 optimisation when batch mode in use. It just wastes time. - Check that sigmas of Gaussians are positive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6090
https://github.com/root-project/root/pull/6090:136,performance,time,time,136,[RF] Speed improvement and a little usability; Two small things:. - Disable level 2 optimisation when batch mode in use. It just wastes time. - Check that sigmas of Gaussians are positive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6090
https://github.com/root-project/root/pull/6090:36,usability,usab,usability,36,[RF] Speed improvement and a little usability; Two small things:. - Disable level 2 optimisation when batch mode in use. It just wastes time. - Check that sigmas of Gaussians are positive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6090
https://github.com/root-project/root/pull/6091:73,energy efficiency,CPU,CPU,73,"[GSoC][WIP] Added Forward and Backward pass for Conv3D and MaxPool3D(for CPU) ; Added header files, Parse and Add layer functions, forward and backward pass functions for Conv3D and MaxPool3D(for CPU). Backward Pass needs some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6091
https://github.com/root-project/root/pull/6091:196,energy efficiency,CPU,CPU,196,"[GSoC][WIP] Added Forward and Backward pass for Conv3D and MaxPool3D(for CPU) ; Added header files, Parse and Add layer functions, forward and backward pass functions for Conv3D and MaxPool3D(for CPU). Backward Pass needs some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6091
https://github.com/root-project/root/pull/6091:114,modifiability,layer,layer,114,"[GSoC][WIP] Added Forward and Backward pass for Conv3D and MaxPool3D(for CPU) ; Added header files, Parse and Add layer functions, forward and backward pass functions for Conv3D and MaxPool3D(for CPU). Backward Pass needs some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6091
https://github.com/root-project/root/pull/6091:73,performance,CPU,CPU,73,"[GSoC][WIP] Added Forward and Backward pass for Conv3D and MaxPool3D(for CPU) ; Added header files, Parse and Add layer functions, forward and backward pass functions for Conv3D and MaxPool3D(for CPU). Backward Pass needs some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6091
https://github.com/root-project/root/pull/6091:196,performance,CPU,CPU,196,"[GSoC][WIP] Added Forward and Backward pass for Conv3D and MaxPool3D(for CPU) ; Added header files, Parse and Add layer functions, forward and backward pass functions for Conv3D and MaxPool3D(for CPU). Backward Pass needs some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6091
https://github.com/root-project/root/pull/6092:21,deployability,log,logic,21,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:164,deployability,version,version,164,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:221,deployability,version,version,221,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:164,integrability,version,version,164,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:221,integrability,version,version,221,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:164,modifiability,version,version,164,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:221,modifiability,version,version,221,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:21,safety,log,logic,21,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:122,safety,compl,completely,122,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:21,security,log,logic,21,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:122,security,compl,completely,122,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:21,testability,log,logic,21,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:175,usability,Visual,Visual,175,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6092:232,usability,Visual,Visual,232,"Fix wrong (inverted) logic in `REveVector.hxx` (was already fixed in `TEveVector.h`); This `#ifdef R__WIN32` block can be completely removed when moving to a newer version of Visual Studio, but since moving to the latest version of Visual Studio introduces new issues, let's keep this code for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6092
https://github.com/root-project/root/pull/6094:503,reliability,doe,doesn,503,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:283,safety,test,tests,283,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:340,safety,test,testing,340,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:416,safety,input,input,416,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:528,safety,test,tests,528,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:559,safety,test,tests,559,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:283,testability,test,tests,283,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:340,testability,test,testing,340,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:528,testability,test,tests,528,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:559,testability,test,tests,559,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:9,usability,support,support,9,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:416,usability,input,input,416,"[DF] Add support for Snapshots of TBranchObjects; Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF. Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)? EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6095:47,availability,error,errors,47,[rootcling] Treat warnings coming from ROOT as errors.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6095
https://github.com/root-project/root/pull/6095:47,performance,error,errors,47,[rootcling] Treat warnings coming from ROOT as errors.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6095
https://github.com/root-project/root/pull/6095:47,safety,error,errors,47,[rootcling] Treat warnings coming from ROOT as errors.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6095
https://github.com/root-project/root/pull/6095:47,usability,error,errors,47,[rootcling] Treat warnings coming from ROOT as errors.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6095
https://github.com/root-project/root/pull/6096:214,availability,avail,available,214,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6096:30,interoperability,convers,conversion,30,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6096:159,interoperability,convers,conversion,159,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6096:214,reliability,availab,available,214,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6096:214,safety,avail,available,214,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6096:214,security,availab,available,214,"[ntuple, tutorials] Drop tree conversion from ntpl004; Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6097:106,availability,error,errors,106,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:167,deployability,build,build,167,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:173,deployability,releas,release,173,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:551,energy efficiency,load,load,551,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:894,energy efficiency,load,load,894,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1239,energy efficiency,load,load,1239,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:378,integrability,interfac,interface,378,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:442,integrability,pub,public,442,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:723,integrability,interfac,interface,723,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:787,integrability,pub,public,787,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1067,integrability,interfac,interface,1067,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1131,integrability,pub,public,1131,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:378,interoperability,interfac,interface,378,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:574,interoperability,share,shared,574,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:723,interoperability,interfac,interface,723,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:917,interoperability,share,shared,917,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1067,interoperability,interfac,interface,1067,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1262,interoperability,share,shared,1262,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:44,modifiability,variab,variables,44,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:378,modifiability,interfac,interface,378,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:723,modifiability,interfac,interface,723,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1067,modifiability,interfac,interface,1067,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:106,performance,error,errors,106,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:551,performance,load,load,551,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:894,performance,load,load,894,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1239,performance,load,load,1239,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:106,safety,error,errors,106,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:106,usability,error,errors,106,"Move the initialization of static constexpr variables from source to …; …header. This fixes the following errors on Windows (with all macros using `RColor`):. ```. C:\build\release\tutorials\v7>root -l box.cxx. root [0]. Processing box.cxx... IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]! You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue. Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6098:138,deployability,contain,contains,138,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:330,deployability,patch,patch,330,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:330,safety,patch,patch,330,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:213,security,access,access,213,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:330,security,patch,patch,330,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:412,security,auth,authored-by,412,"[prompt] Do not segfault when root_hist has zero lines (v6.22); Pressing ctrl-r when no ~/.root_hist file is present or possibly. when it contains 0 lines used to cause a segfault. The culprit. if an out-of-bound access in History::GetLine, as the case in which. the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead. This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6101:993,availability,slo,slower,993,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1740,availability,Error,Error,1740,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1780,availability,error,error,1780,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1804,availability,Error,Error,1804,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1835,availability,error,error,1835,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:200,integrability,bridg,bridge,200,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:317,integrability,interfac,interface,317,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:200,interoperability,bridg,bridge,200,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:317,interoperability,interfac,interface,317,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:317,modifiability,interfac,interface,317,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1740,performance,Error,Error,1740,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1780,performance,error,error,1780,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1804,performance,Error,Error,1804,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1835,performance,error,error,1835,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:993,reliability,slo,slower,993,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1740,safety,Error,Error,1740,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1780,safety,error,error,1780,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1804,safety,Error,Error,1804,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1835,safety,error,error,1835,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1685,security,control,control,1685,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1685,testability,control,control,1685,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1740,usability,Error,Error,1740,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1780,usability,error,error,1780,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1804,usability,Error,Error,1804,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1835,usability,error,error,1835,"[ntuple, io] pass paths, names of ntuples for merging to RNTuple side; We construct a vector of string pairs and pass it through to the. RNTuple::Merge function for merging. This implements a ""legacy bridge"". between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without. using either class in the implementation by carefully casting the. RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,. and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: . ```shell. $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root. hadd Target file: dir/merged.root. hadd compression setting for all output: 1. hadd Source file 1: ntuple1.root. hadd Source file 2: ntuple2.root. hadd Sources and Target have different compression levels. hadd merging will be slower. hadd Target path: dir/merged.root:/. Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins . examining ntuple1.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. examining ntuple2.root:/. got key for type ROOT::Experimental::RNTuple with name ntuple. got ntuple from file 'ntuple1.root:/' named 'ntuple'. got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins. RNTuple merger output file is dir/merged.root:/. merging ntuple from file 'ntuple1.root:/ named 'ntuple'. merging ntuple from file 'ntuple2.root:/ named 'ntuple'. RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive. Error in <TFileMerger::MergeRecursive>: error merging RNTuples. Error in <TFileMerger::Merge>: error during merge of your ROOT files. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6102:56,performance,disk,disk,56,"[RDF][Doc] Save figures in the Python tutorials also to disk; * In Python script mode the canvases dont stay on screen, therefore. the figures are saved and an according notification is printed. * Fixes ROOT-10960",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6102
https://github.com/root-project/root/pull/6103:130,availability,error,errors,130,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:182,availability,error,errors,182,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:130,performance,error,errors,130,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:159,performance,time,time,159,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:182,performance,error,errors,182,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:130,safety,error,errors,130,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:182,safety,error,errors,182,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:212,safety,test,test,212,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:212,testability,test,test,212,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:130,usability,error,errors,130,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:182,usability,error,errors,182,"[histv7] WIP: Fitting for RHist; Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6104:22,deployability,modul,modulemaps,22,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:79,deployability,patch,patch,79,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:172,deployability,modul,modulemaps,172,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:184,deployability,instal,installed,184,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:22,modifiability,modul,modulemaps,22,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:172,modifiability,modul,modulemaps,172,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:22,safety,modul,modulemaps,22,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:79,safety,patch,patch,79,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:172,safety,modul,modulemaps,172,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:79,security,patch,patch,79,Allow only the system modulemaps to be overriden by already present ones; This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6106:42,availability,cluster,cluster,42,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:42,deployability,cluster,cluster,42,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:215,deployability,pipelin,pipeline,215,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:68,energy efficiency,schedul,schedules,68,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:78,energy efficiency,load,loading,78,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:176,energy efficiency,load,loaded,176,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:215,integrability,pipelin,pipeline,215,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:23,modifiability,deco,decompression,23,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:132,modifiability,deco,decompression,132,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:233,modifiability,deco,decompression,233,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:368,modifiability,deco,decompress,368,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:9,performance,Parallel,Parallel,9,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:68,performance,schedul,schedules,68,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:78,performance,load,loading,78,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:176,performance,load,loaded,176,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:428,safety,compl,completely,428,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:428,security,compl,completely,428,"[ntuple] Parallel page decompression; The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6107:159,deployability,releas,release,159,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:209,deployability,releas,release,209,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:332,deployability,releas,release,332,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:73,energy efficiency,Adapt,Adapted,73,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:73,integrability,Adapt,Adapted,73,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:116,integrability,pub,published,116,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:495,integrability,filter,filters,495,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:693,integrability,filter,filtering,693,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:73,interoperability,Adapt,Adapted,73,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:73,modifiability,Adapt,Adapted,73,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:674,modifiability,scal,scaling,674,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:669,safety,test,test,669,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:669,testability,test,test,669,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:222,usability,document,documentation,222,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:794,usability,user,user-images,794,"[RDF][Tutorial] Add tutorial with reconstruction of single top decays; * Adapted from the physics analysis examples published with the 13 TeV. ATLAS Open Data release in 2020. * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6108:196,availability,avail,available,196,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:15,integrability,inject,inject,15,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:335,integrability,inject,injecting,335,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:57,interoperability,platform,platforms,57,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:196,reliability,availab,available,196,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:196,safety,avail,available,196,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:15,security,inject,inject,15,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:196,security,availab,available,196,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:335,security,inject,injecting,335,"[cling] Do not inject libCling first (ROOT-10499):; Some platforms have problems (rightfully so!) in finding symbols. from libCling.so, which is dlopened with RTLD_LOCAL. libCling should. me made available to RuntimeDyld, but priority should be given to. the main binary, i.e. the ""traditional"" symbol resolution. This is. achieved by injecting libCling as a symbol source into the. DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,. not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6109:163,availability,avail,available,163,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:87,deployability,version,version,87,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:27,integrability,pub,published,27,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:87,integrability,version,version,87,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:121,integrability,pub,public,121,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:87,modifiability,version,version,87,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:163,reliability,availab,available,163,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:163,safety,avail,available,163,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6109:163,security,availab,available,163,[RDF][Doc] Move to samples published on the CERN Open Data portal; We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6110:163,availability,error,errors,163,"[RF] Fix an initial value in RooMomentMorphND.; RooMomentMorphND was initialising fractions to zero. That will lead to. an all-zero PDF, which triggers evaluation errors. Setting all fractions. to 1 avoids those warnings, and the correct values will be calculated. during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6110:163,performance,error,errors,163,"[RF] Fix an initial value in RooMomentMorphND.; RooMomentMorphND was initialising fractions to zero. That will lead to. an all-zero PDF, which triggers evaluation errors. Setting all fractions. to 1 avoids those warnings, and the correct values will be calculated. during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6110:163,safety,error,errors,163,"[RF] Fix an initial value in RooMomentMorphND.; RooMomentMorphND was initialising fractions to zero. That will lead to. an all-zero PDF, which triggers evaluation errors. Setting all fractions. to 1 avoids those warnings, and the correct values will be calculated. during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6110:199,safety,avoid,avoids,199,"[RF] Fix an initial value in RooMomentMorphND.; RooMomentMorphND was initialising fractions to zero. That will lead to. an all-zero PDF, which triggers evaluation errors. Setting all fractions. to 1 avoids those warnings, and the correct values will be calculated. during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6110:163,usability,error,errors,163,"[RF] Fix an initial value in RooMomentMorphND.; RooMomentMorphND was initialising fractions to zero. That will lead to. an all-zero PDF, which triggers evaluation errors. Setting all fractions. to 1 avoids those warnings, and the correct values will be calculated. during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6111:30,deployability,updat,updates,30,"[RF] Collection of small code updates; This is a collection of a bunch of commits that piled up in my dev branch, such as wrong includes or modernisations of code. Given that they are unrelated to the feature that's WIP, I took them out to make the review more digestable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6111
https://github.com/root-project/root/pull/6111:30,safety,updat,updates,30,"[RF] Collection of small code updates; This is a collection of a bunch of commits that piled up in my dev branch, such as wrong includes or modernisations of code. Given that they are unrelated to the feature that's WIP, I took them out to make the review more digestable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6111
https://github.com/root-project/root/pull/6111:249,safety,review,review,249,"[RF] Collection of small code updates; This is a collection of a bunch of commits that piled up in my dev branch, such as wrong includes or modernisations of code. Given that they are unrelated to the feature that's WIP, I took them out to make the review more digestable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6111
https://github.com/root-project/root/pull/6111:30,security,updat,updates,30,"[RF] Collection of small code updates; This is a collection of a bunch of commits that piled up in my dev branch, such as wrong includes or modernisations of code. Given that they are unrelated to the feature that's WIP, I took them out to make the review more digestable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6111
https://github.com/root-project/root/pull/6111:249,testability,review,review,249,"[RF] Collection of small code updates; This is a collection of a bunch of commits that piled up in my dev branch, such as wrong includes or modernisations of code. Given that they are unrelated to the feature that's WIP, I took them out to make the review more digestable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6111
https://github.com/root-project/root/pull/6112:94,availability,sli,slightly,94,[RDF][Doc] Enable fast mode for df105; The tutorial runs now very fast in ~20s! The output is slightly different since the statistics is reduced by a factor of 10:. **Old**. ![](https://root.cern/doc/master/pict1_df105_WBosonAnalysis.py.png). **New**. ![df105_WBosonAnalysis](https://user-images.githubusercontent.com/6951222/89209409-892aaf80-d5be-11ea-879c-3fc8f321630d.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6112
https://github.com/root-project/root/pull/6112:137,energy efficiency,reduc,reduced,137,[RDF][Doc] Enable fast mode for df105; The tutorial runs now very fast in ~20s! The output is slightly different since the statistics is reduced by a factor of 10:. **Old**. ![](https://root.cern/doc/master/pict1_df105_WBosonAnalysis.py.png). **New**. ![df105_WBosonAnalysis](https://user-images.githubusercontent.com/6951222/89209409-892aaf80-d5be-11ea-879c-3fc8f321630d.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6112
https://github.com/root-project/root/pull/6112:94,reliability,sli,slightly,94,[RDF][Doc] Enable fast mode for df105; The tutorial runs now very fast in ~20s! The output is slightly different since the statistics is reduced by a factor of 10:. **Old**. ![](https://root.cern/doc/master/pict1_df105_WBosonAnalysis.py.png). **New**. ![df105_WBosonAnalysis](https://user-images.githubusercontent.com/6951222/89209409-892aaf80-d5be-11ea-879c-3fc8f321630d.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6112
https://github.com/root-project/root/pull/6112:284,usability,user,user-images,284,[RDF][Doc] Enable fast mode for df105; The tutorial runs now very fast in ~20s! The output is slightly different since the statistics is reduced by a factor of 10:. **Old**. ![](https://root.cern/doc/master/pict1_df105_WBosonAnalysis.py.png). **New**. ![df105_WBosonAnalysis](https://user-images.githubusercontent.com/6951222/89209409-892aaf80-d5be-11ea-879c-3fc8f321630d.png).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6112
https://github.com/root-project/root/pull/6113:110,availability,state,state,110,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:110,integrability,state,state,110,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:5,safety,Test,Test,5,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:134,safety,test,test,134,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:160,safety,valid,valid,160,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:5,testability,Test,Test,5,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6113:134,testability,test,test,134,[DF] Test and workaround for the TLeaf-side part of ROOT-10942; This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6115:17,deployability,build,build,17,[DOCS] Add v6.22 build badge to README;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6115
https://github.com/root-project/root/pull/6116:117,availability,state,state,117,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.22); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6116:117,integrability,state,state,117,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.22); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6116:142,safety,test,test,142,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.22); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6116:168,safety,valid,valid,168,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.22); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6116:142,testability,test,test,142,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.22); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6117:117,availability,state,state,117,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.20); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6117:117,integrability,state,state,117,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.20); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6117:142,safety,test,test,142,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.20); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6117:168,safety,valid,valid,168,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.20); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6117:142,testability,test,test,142,[DF] Work around TTree::GetLeaf bug in GetBranchOrLeafTypeName (6.20); This should bring RDF back to a fully working state (for all cases. we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6118:115,interoperability,format,format,115,[DF] Beauty fixes; * Use new naming convention for helper type. * Remove unnecessary fwd decl and include. * clang-format pass on RInterface.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6118
https://github.com/root-project/root/pull/6118:51,usability,help,helper,51,[DF] Beauty fixes; * Use new naming convention for helper type. * Remove unnecessary fwd decl and include. * clang-format pass on RInterface.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6118
https://github.com/root-project/root/pull/6119:127,integrability,inject,inject,127,"[PyROOT] Respect existing __str__ method in pretty printing; If the method `__str__` is already defined on the C++ side, don't inject. the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6119:213,performance,perform,performance,213,"[PyROOT] Respect existing __str__ method in pretty printing; If the method `__str__` is already defined on the C++ side, don't inject. the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6119:127,security,inject,inject,127,"[PyROOT] Respect existing __str__ method in pretty printing; If the method `__str__` is already defined on the C++ side, don't inject. the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6119:213,usability,perform,performance,213,"[PyROOT] Respect existing __str__ method in pretty printing; If the method `__str__` is already defined on the C++ side, don't inject. the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6121:57,performance,concurren,concurrently,57,[DF] Use unique file names in tests; Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6121:30,safety,test,tests,30,[DF] Use unique file names in tests; Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6121:47,safety,test,tests,47,[DF] Use unique file names in tests; Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6121:30,testability,test,tests,30,[DF] Use unique file names in tests; Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6121:47,testability,test,tests,47,[DF] Use unique file names in tests; Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6122:64,performance,concurren,concurrently,64,[DF] Use unique file names in tests (6.20); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6122:30,safety,test,tests,30,[DF] Use unique file names in tests (6.20); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6122:54,safety,test,tests,54,[DF] Use unique file names in tests (6.20); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6122:30,testability,test,tests,30,[DF] Use unique file names in tests (6.20); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6122:54,testability,test,tests,54,[DF] Use unique file names in tests (6.20); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6123:64,performance,concurren,concurrently,64,[DF] Use unique file names in tests (6.22); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6123:30,safety,test,tests,30,[DF] Use unique file names in tests (6.22); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6123:54,safety,test,tests,54,[DF] Use unique file names in tests (6.22); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6123:30,testability,test,tests,30,[DF] Use unique file names in tests (6.22); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6123:54,testability,test,tests,54,[DF] Use unique file names in tests (6.22); Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6124:28,availability,error,error,28,"[treeplayer] Fix conversion error, thanks clang10!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6124
https://github.com/root-project/root/pull/6124:17,interoperability,convers,conversion,17,"[treeplayer] Fix conversion error, thanks clang10!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6124
https://github.com/root-project/root/pull/6124:28,performance,error,error,28,"[treeplayer] Fix conversion error, thanks clang10!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6124
https://github.com/root-project/root/pull/6124:28,safety,error,error,28,"[treeplayer] Fix conversion error, thanks clang10!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6124
https://github.com/root-project/root/pull/6124:28,usability,error,error,28,"[treeplayer] Fix conversion error, thanks clang10!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6124
https://github.com/root-project/root/pull/6125:26,availability,error,errors,26,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:89,availability,error,errors,89,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:272,availability,error,errors,272,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:639,availability,error,errors,639,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:20,deployability,build,build,20,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:83,deployability,build,build,83,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:215,deployability,updat,updating,215,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:266,deployability,build,build,266,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:633,deployability,build,build,633,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:26,performance,error,errors,26,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:89,performance,error,errors,89,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:272,performance,error,errors,272,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:639,performance,error,errors,639,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:26,safety,error,errors,26,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:89,safety,error,errors,89,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:215,safety,updat,updating,215,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:272,safety,error,errors,272,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:307,safety,compl,complains,307,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:639,safety,error,errors,639,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:215,security,updat,updating,215,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:307,security,compl,complains,307,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:26,usability,error,errors,26,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:89,usability,error,errors,89,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:272,usability,error,errors,272,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:639,usability,error,errors,639,Back-port a fix for build errors with clang-tblgen in Debug mode; . Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107). After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode. It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args. VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5. A workaround was implemented for that and everything works until v16.5 comes. The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6126:119,energy efficiency,load,loaded,119,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:45,integrability,inject,injected,45,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:66,interoperability,platform,platforms,66,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:507,interoperability,platform,platforms,507,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:119,performance,load,loaded,119,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:45,security,inject,injected,45,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:215,security,expos,exposed,215,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:245,security,Expos,ExposeHiddenSharedLibrarySymbols,245,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:434,usability,document,documented,434,"[cling] Explicitly resolve symbols also from injected libs:; Some platforms respect RTLD_LOCAL: symbols from libraries loaded with. this flag cannot be resolved by dlsym through the process. They should. instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols(). But then the JIT needs to actually make use of these libraries from. symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as. nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,. Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6127:287,availability,failur,failures,287,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:69,deployability,observ,observed,69,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:171,deployability,fail,fails,171,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:287,deployability,fail,failures,287,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:287,performance,failur,failures,287,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:171,reliability,fail,fails,171,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:287,reliability,fail,failures,287,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:16,safety,test,tests,16,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:86,safety,test,test,86,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:181,safety,test,test,181,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:256,safety,test,test,256,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:274,safety,prevent,prevent,274,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:9,security,Harden,Harden,9,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:274,security,preven,prevent,274,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:16,testability,test,tests,16,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:69,testability,observ,observed,69,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:86,testability,test,test,86,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:181,testability,test,test,181,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:256,testability,test,test,256,"[PyROOT] Harden tests of refcounts by invoking GC manually; Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6128:201,availability,failur,failure,201,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:271,availability,Error,Error,271,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2151,availability,error,errors,2151,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:19,deployability,build,building,19,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:92,deployability,fail,failing,92,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:162,deployability,fail,failed,162,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:201,deployability,fail,failure,201,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:453,deployability,depend,depends,453,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:692,deployability,build,build,692,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:730,deployability,build,build,730,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:859,deployability,build,build,859,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:927,deployability,build,build,927,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:958,deployability,build,build,958,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1091,deployability,build,build,1091,"iling on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1128,deployability,build,build,1128,"etXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1159,deployability,build,build,1159,"failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1264,deployability,build,build,1264,"`. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1295,deployability,build,build,1295," pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is stil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1465,deployability,build,build,1465,"r libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load comma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1567,deployability,build,build,1567,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1646,deployability,build,building,1646,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1688,deployability,instal,installing,1688,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1736,deployability,instal,install,1736,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1932,deployability,build,build,1932,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2041,deployability,build,build,2041,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2177,deployability,build,build,2177,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2343,deployability,instal,install,2343,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2391,deployability,build,build,2391,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2420,deployability,instal,install,2420,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2531,deployability,build,build,2531,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:212,energy efficiency,load,loading,212,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:303,energy efficiency,load,load,303,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:342,energy efficiency,load,load,342,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1320,energy efficiency,Load,Load,1320,"o: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1348,energy efficiency,Load,Load,1348,"XrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1494,energy efficiency,Load,Load,1494," `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1968,energy efficiency,Load,Load,1968,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2458,energy efficiency,Load,Load,2458,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:453,integrability,depend,depends,453,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:571,integrability,sub,substituted,571,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:325,interoperability,Plug,Plugin,325,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:453,modifiability,depend,depends,453,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:784,modifiability,variab,variable,784,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1391,modifiability,variab,variable,1391,"): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:201,performance,failur,failure,201,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:212,performance,load,loading,212,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:271,performance,Error,Error,271,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:303,performance,load,load,303,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:342,performance,load,load,342,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1320,performance,Load,Load,1320,"o: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1348,performance,Load,Load,1348,"XrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1494,performance,Load,Load,1494," `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1968,performance,Load,Load,1968,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2151,performance,error,errors,2151,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2165,performance,time,time,2165,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2458,performance,Load,Load,2458,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:92,reliability,fail,failing,92,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:162,reliability,fail,failed,162,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:201,reliability,fail,failure,201,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:271,safety,Error,Error,271,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:453,safety,depend,depends,453,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2151,safety,error,errors,2151,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:157,security,Auth,Auth,157,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:232,security,secur,security,232,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:453,testability,depend,depends,453,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:271,usability,Error,Error,271,"Set LC_RPATH while building builtin_xrootd; The original issue is with some python tutorial failing on macOS nodes due to. ```. <TNetXNGFile::Open>: [FATAL] Auth failed. ```. Which in turn is due to a failure in loading some xrootd security libraries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1240,usability,User,Users,1240,"braries, among which. ```. [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1325,usability,command,command,1325,"in unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1353,usability,command,command,1353,"wd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found. ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1499,usability,command,command,1499,"dUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1543,usability,User,Users,1543,"path` palceholder is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1973,usability,command,command,1973,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2017,usability,User,Users,2017,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2151,usability,error,errors,2151,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2250,usability,user,user,2250,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2463,usability,command,command,2463,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2507,usability,User,Users,2507,"older is not substituted with the correct path to the libraries directory at runtime. While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`. ```. $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt. $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt. $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt. < build/lib/libXrdSecpwd-4.so:. ---. > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:. 307a308,311. > cmd LC_RPATH. > cmdsize 80. > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12). > Load command 14. 312c316. < Load command 14. ---. ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`. ```. $ otool -l build/lib/libHtml.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:. ```. $ otool -l build/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```. This solves the initial problem with the python tutorial that now can run without errors. ```. $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s. user 0m18.505s. sys 0m0.733s. ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:. ```. $ otool -l install/lib/libXrdSecpwd-4.so. [...]. Load command 15. cmd LC_RPATH. cmdsize 80. path /Users/sftnight/vpadulan/build/lib (offset 12). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6131:5,availability,Sli,Slightly,5,"[DF] Slightly improve compile-times of generated code; make_unique<ConcreteFilterType> requires many different type. instantiations, but we actually always upcast to unique_ptr<FilterBase>,. so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6131:177,integrability,Filter,FilterBase,177,"[DF] Slightly improve compile-times of generated code; make_unique<ConcreteFilterType> requires many different type. instantiations, but we actually always upcast to unique_ptr<FilterBase>,. so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6131:30,performance,time,times,30,"[DF] Slightly improve compile-times of generated code; make_unique<ConcreteFilterType> requires many different type. instantiations, but we actually always upcast to unique_ptr<FilterBase>,. so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6131:261,performance,time,times,261,"[DF] Slightly improve compile-times of generated code; make_unique<ConcreteFilterType> requires many different type. instantiations, but we actually always upcast to unique_ptr<FilterBase>,. so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6131:5,reliability,Sli,Slightly,5,"[DF] Slightly improve compile-times of generated code; make_unique<ConcreteFilterType> requires many different type. instantiations, but we actually always upcast to unique_ptr<FilterBase>,. so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6132:57,deployability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:122,deployability,version,versions,122,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:164,deployability,contain,contains,164,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:57,integrability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:122,integrability,version,versions,122,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:57,modifiability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:122,modifiability,version,versions,122,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:143,safety,test,testing,143,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6132:143,testability,test,testing,143,"[DF] Fix inclusion of certain arrow headers in new arrow versions; arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6133:34,usability,behavi,behavior,34,[skip-ci][DOCS] Mention change of behavior of `df.GetColumnNames()` in relnotes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6133
https://github.com/root-project/root/pull/6134:34,usability,behavi,behavior,34,[skip-ci][DOCS] Mention change of behavior of `df.GetColumnNames()` in relnotes (6.22);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6134
https://github.com/root-project/root/pull/6135:34,usability,behavi,behavior,34,[skip-ci][DOCS] Mention change of behavior of `df.GetColumnNames()` in relnotes (6.20);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6135
https://github.com/root-project/root/pull/6136:57,deployability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:129,deployability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:171,deployability,contain,contains,171,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:57,integrability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:129,integrability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:57,modifiability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:129,modifiability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:150,safety,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6136:150,testability,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.20); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6137:57,deployability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:129,deployability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:171,deployability,contain,contains,171,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:57,integrability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:129,integrability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:57,modifiability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:129,modifiability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:150,safety,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6137:150,testability,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.22); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6138:57,deployability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:129,deployability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:171,deployability,contain,contains,171,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:57,integrability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:129,integrability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:57,modifiability,version,versions,57,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:129,modifiability,version,versions,129,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:150,safety,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6138:150,testability,test,testing,150,"[DF] Fix inclusion of certain arrow headers in new arrow versions (6.18); arrow/compute/test_util.h has been removed from recent versions,. but arrow/testing/gtest_util.h contains what we need and is present. both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6139:522,deployability,updat,updated,522,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:58,modifiability,exten,extends,58,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:505,reliability,doe,does,505,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:172,safety,compl,complete,172,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:444,safety,Compl,CompleteRedeclChain,444,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:522,safety,updat,updated,522,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:713,safety,test,test,713,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:172,security,compl,complete,172,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:444,security,Compl,CompleteRedeclChain,444,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:522,security,updat,updated,522,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:35,testability,assert,assert,35,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:108,testability,assert,assert,108,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:304,testability,assert,assert,304,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:713,testability,test,test,713,"[cling] Fix next clang::CodeGen EH assert on MacOS:; This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"". Just as for BeginEH, EndEH might not see the complete picture of an already. evaluated EST from a different Decl in the redecl chain. Teach it to look. at the most recent. This assert hits when:. - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;. - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get. an updated EST. In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked. at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6140:75,interoperability,specif,specifying,75,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6140:98,reliability,doe,does,98,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6140:107,safety,prevent,prevent,107,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6140:107,security,preven,prevent,107,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6140:8,usability,help,help,8,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6140:13,usability,user,users,13,"[cmake] help users get rid of ""pyroot_experimental is a deprecated"":; Just specifying -Dpyroot=ON does not prevent pyroot_experimental from being set. And the ""deprecated"" warning will be issues as long as pyroot_experimental is set. So tell people to set it to OFF, which will get rid of the warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6140
https://github.com/root-project/root/pull/6141:32,deployability,depend,depending,32,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:352,deployability,automat,automatically,352,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:32,integrability,depend,depending,32,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:25,interoperability,format,format,25,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:32,modifiability,depend,depending,32,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:45,performance,content,content,45,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:32,safety,depend,depending,32,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:32,testability,depend,depending,32,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6141:352,testability,automat,automatically,352,"[json] adjust char* JSON format depending on content; Before char* was always converted to JSON string, which was not correct. Some special symbols can not be represented correctly by string. Also #0 symbol used as string terminator. Therefore if such special. usecase appears, JSON array is used. If there are more than 1000. elements - base64 coding automatically applied. . Requied to correctly stream TASImage data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6141
https://github.com/root-project/root/pull/6142:55,availability,error,errors,55,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""; This revert is in favor of ROOT-10974 and ROOT-10975. This reverts commit 64844bc46d1ab06d9df0309c001046367d1cfa33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6142
https://github.com/root-project/root/pull/6142:55,performance,error,errors,55,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""; This revert is in favor of ROOT-10974 and ROOT-10975. This reverts commit 64844bc46d1ab06d9df0309c001046367d1cfa33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6142
https://github.com/root-project/root/pull/6142:55,safety,error,errors,55,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""; This revert is in favor of ROOT-10974 and ROOT-10975. This reverts commit 64844bc46d1ab06d9df0309c001046367d1cfa33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6142
https://github.com/root-project/root/pull/6142:55,usability,error,errors,55,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""; This revert is in favor of ROOT-10974 and ROOT-10975. This reverts commit 64844bc46d1ab06d9df0309c001046367d1cfa33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6142
https://github.com/root-project/root/pull/6143:1157,availability,error,error,1157,"ion 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1512,availability,error,error,1512,"file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1874,availability,error,error,1874,".27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2244,availability,error,error,2244,"ht\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3370,availability,error,error,3370,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3703,availability,error,error,3703,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3711,availability,Error,Error,3711,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:125,deployability,updat,update,125,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:156,deployability,version,version,156,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:305,deployability,build,build,305,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:311,deployability,releas,release,311,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:382,deployability,build,build,382,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:388,deployability,releas,release,388,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:469,deployability,build,build,469,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:475,deployability,releas,release,475,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1250,deployability,build,build,1250,"_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1256,deployability,releas,release,1256,":1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1561,deployability,build,build,1561,"ft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1567,deployability,releas,release,1567,"al Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1967,deployability,build,build,1967,"l Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1973,deployability,releas,release,1973,"o\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2293,deployability,build,build,2293,"icitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2299,deployability,releas,release,2299,"default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2654,deployability,build,build,2654,"ty\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. templa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2660,deployability,releas,release,2660,"ools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2731,deployability,build,build,2731,". constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2737,deployability,releas,release,2737,"expr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default head",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2818,deployability,build,build,2818,"\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2824,deployability,releas,release,2824,"ls\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3438,deployability,build,build,3438,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3444,deployability,releas,release,3444,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3770,deployability,build,build,3770,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3776,deployability,releas,release,3776,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3844,deployability,upgrad,upgrade,3844,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1264,energy efficiency,core,core,1264,"n file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1575,energy efficiency,core,core,1575,"dio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1981,energy efficiency,core,core,1981,"\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\str",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2307,energy efficiency,core,core,2307,"t_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3452,energy efficiency,core,core,3452,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3717,energy efficiency,load,loading,3717,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3784,energy efficiency,core,core,3784,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:156,integrability,version,version,156,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1220,interoperability,specif,specifiers,1220," In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1937,interoperability,specif,specifiers,1937," Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Communi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:156,modifiability,version,version,156,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3844,modifiability,upgrad,upgrade,3844,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1157,performance,error,error,1157,"ion 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1512,performance,error,error,1512,"file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1874,performance,error,error,1874,".27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2244,performance,error,error,2244,"ht\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3370,performance,error,error,3370,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3703,performance,error,error,3703,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3711,performance,Error,Error,3711,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3717,performance,load,loading,3717,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3393,reliability,doe,does,3393,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:125,safety,updat,update,125,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1157,safety,error,error,1157,"ion 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1512,safety,error,error,1512,"file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1874,safety,error,error,1874,".27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2244,safety,error,error,2244,"ht\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3370,safety,error,error,3370,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3703,safety,error,error,3703,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3711,safety,Error,Error,3711,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:125,security,updat,update,125,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:8,usability,Visual,Visual,8,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:135,usability,Visual,Visual,135,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:290,usability,User,Users,290,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:367,usability,User,Users,367,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:454,usability,User,Users,454,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:567,usability,Visual,Visual,567,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:599,usability,Tool,Tools,599,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:699,usability,Visual,Visual,699,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:731,usability,Tool,Tools,731,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:832,usability,Visual,Visual,832,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:864,usability,Tool,Tools,864,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:965,usability,Visual,Visual,965,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:997,usability,Tool,Tools,997,"Fix for Visual Studio 2019 v16.7.0; Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1077,usability,Visual,Visual,1077,"e to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1109,usability,Tool,Tools,1109,"re after the update of Visual Studio to the version 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1157,usability,error,error,1157,"ion 16.7.0:. ```. Generating G__Core.cxx, ../bin/libCore.rootmap. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1235,usability,User,Users,1235,"uded from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1432,usability,Visual,Visual,1432,"e included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1464,usability,Tool,Tools,1464,"t/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1512,usability,error,error,1512,"file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1546,usability,User,Users,1546,"s (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1631,usability,Visual,Visual,1631,"ring:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1663,usability,Tool,Tools,1663,"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/releas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1793,usability,Visual,Visual,1793,"om C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1825,usability,Tool,Tools,1825,"oft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1874,usability,error,error,1874,".27.291 10\\include\xmemory:16:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1952,usability,User,Users,1952,"Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2163,usability,Visual,Visual,2163,"EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2195,usability,Tool,Tools,2195,"';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2244,usability,error,error,2244,"ht\build\release\core\G__Core.vcxproj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2278,usability,User,Users,2278,"roj]. !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2363,usability,Visual,Visual,2363,"constructible<_Uty2>::value). ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2395,usability,Tool,Tools,2395," C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2639,usability,User,Users,2639,"io\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2716,usability,User,Users,2716," match this '('. constexpr explicit(. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2803,usability,User,Users,2803,"\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2916,usability,Visual,Visual,2916,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2948,usability,Tool,Tools,2948,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3047,usability,Visual,Visual,3047,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3079,usability,Tool,Tools,3079,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3179,usability,Visual,Visual,3179,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3211,usability,Tool,Tools,3211,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3289,usability,Visual,Visual,3289,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3321,usability,Tool,Tools,3321,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3370,usability,error,error,3370,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3423,usability,User,Users,3423,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3550,usability,Visual,Visual,3550,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3582,usability,Tool,Tools,3582,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3689,usability,CUSTOM,CUSTOMBUILD,3689,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3703,usability,error,error,3703,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3711,usability,Error,Error,3711,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3755,usability,User,Users,3755,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ~~~~~~~~~~~~~~~~~~ ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('. constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>). ^. In file included from input_line_5:1:. In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:. In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:. In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. return __builtin_bit_cast(_To, _Val);. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here. template <class _To, class _From,. ^. CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]. ```. To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6144:0,deployability,Build,Build,0,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:28,energy efficiency,optim,optimization,28,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:101,integrability,configur,configure,101,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:101,modifiability,configur,configure,101,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:28,performance,optimiz,optimization,28,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:101,security,configur,configure,101,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6144:111,usability,command,command,111,"Build built-in LZMA with O3 optimization level; @bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6145:25,deployability,updat,updates,25,[RF][Docs] Documentation updates.; [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6145
https://github.com/root-project/root/pull/6145:25,safety,updat,updates,25,[RF][Docs] Documentation updates.; [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6145
https://github.com/root-project/root/pull/6145:25,security,updat,updates,25,[RF][Docs] Documentation updates.; [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6145
https://github.com/root-project/root/pull/6145:11,usability,Document,Documentation,11,[RF][Docs] Documentation updates.; [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6145
https://github.com/root-project/root/pull/6146:0,deployability,Build,Build,0,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6146
https://github.com/root-project/root/pull/6146:28,energy efficiency,optim,optimization,28,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6146
https://github.com/root-project/root/pull/6146:28,performance,optimiz,optimization,28,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6146
https://github.com/root-project/root/pull/6147:0,deployability,Build,Build,0,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6147
https://github.com/root-project/root/pull/6147:28,energy efficiency,optim,optimization,28,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6147
https://github.com/root-project/root/pull/6147:28,performance,optimiz,optimization,28,Build built-in LZMA with O3 optimization level;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6147
https://github.com/root-project/root/pull/6148:173,availability,error,error,173,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:325,availability,error,error,325,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:333,availability,error,error,333,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:423,availability,error,error,423,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:818,availability,error,error,818,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:79,deployability,build,build,79,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:232,deployability,build,build,232,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:532,deployability,build,build,532,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:724,deployability,build,build,724,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:386,energy efficiency,CPU,CPU,386,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:476,energy efficiency,CPU,CPU,476,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:173,performance,error,error,173,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:325,performance,error,error,325,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:333,performance,error,error,333,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:386,performance,CPU,CPU,386,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:423,performance,error,error,423,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:476,performance,CPU,CPU,476,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:818,performance,error,error,818,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:9,safety,test,tests,9,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:122,safety,test,test,122,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:134,safety,Test,TestMethodDNNValidationSize,134,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:173,safety,error,error,173,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:275,safety,test,test,275,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:287,safety,Test,TestMethodDNNValidationSize,287,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:325,safety,error,error,325,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:333,safety,error,error,333,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:423,safety,error,error,423,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:575,safety,test,test,575,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:587,safety,Test,TestMethodDNNValidationSize,587,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:653,safety,Test,TestMethodDNNValidationSize,653,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:767,safety,test,test,767,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:779,safety,Test,TestMethodDNNValidationSize,779,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:818,safety,error,error,818,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:9,testability,test,tests,9,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:122,testability,test,test,122,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:134,testability,Test,TestMethodDNNValidationSize,134,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:275,testability,test,test,275,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:287,testability,Test,TestMethodDNNValidationSize,287,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:575,testability,test,test,575,"Fix TMVA tests: #elif without expression and typo; fixes the following:. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression. 48 | #elif DNNCUDA. | ^. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations."". 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations."". | ^~~~~. ```. and. ```. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:. /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope. 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);. | ^~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
