id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/7247:11,deployability,build,build,11,@phsft-bot build with flags -Dvdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:68,deployability,build,builds,68,@hageboeck iow it would be nice to have at least one of the nightly builds with vdt=OFF (assuming we don't already)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:11,deployability,build,build,11,@phsft-bot build with flags -Dvdt=OFF.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:79,deployability,build,build,79,"Yes, I mentioned this a while ago, but somebody said that it would enlarge the build matrix. You can surely push this, though, because it's enough to just *convert* one of the builds. Note, though, that `-Dvdt=OFF` doesn't work !!! You probably have to switch off `builtin_vdt` as well, because everything gets activated by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:176,deployability,build,builds,176,"Yes, I mentioned this a while ago, but somebody said that it would enlarge the build matrix. You can surely push this, though, because it's enough to just *convert* one of the builds. Note, though, that `-Dvdt=OFF` doesn't work !!! You probably have to switch off `builtin_vdt` as well, because everything gets activated by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:215,reliability,doe,doesn,215,"Yes, I mentioned this a while ago, but somebody said that it would enlarge the build matrix. You can surely push this, though, because it's enough to just *convert* one of the builds. Note, though, that `-Dvdt=OFF` doesn't work !!! You probably have to switch off `builtin_vdt` as well, because everything gets activated by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dvdt=OFF -Dbuiltin_vdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dvdt=OFF -Dbuiltin_vdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dvdt=OFF -Dbuiltin_vdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:11,deployability,build,build,11,@phsft-bot build with flags -Dvdt=OFF -Dbuiltin_vdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/issues/7249:103,availability,error,error,103,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:171,availability,error,error,171,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:556,availability,error,error,556,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:938,deployability,releas,release,938,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:970,deployability,version,version,970,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:349,energy efficiency,load,loads,349,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:604,energy efficiency,load,load,604,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:970,integrability,version,version,970,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:970,modifiability,version,version,970,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:103,performance,error,error,103,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:171,performance,error,error,171,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:349,performance,load,loads,349,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:556,performance,error,error,556,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:604,performance,load,load,604,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:103,safety,error,error,103,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:171,safety,error,error,171,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:556,safety,error,error,556,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:103,usability,error,error,103,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:171,usability,error,error,171,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:556,usability,error,error,556,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:805,usability,custom,custom,805,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1075,usability,custom,custom-classes,1075,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:. ```Python. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). ```. This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:. ```Python. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). ```. Could you please let me know if this also works for you? On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:78,availability,error,error,78,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1055,availability,Down,Downloads,1055,", I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1102,availability,Down,Downloads,1102,"s you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocatio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1909,availability,Down,Downloads,1909,"rge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2037,availability,error,error,2037,"/Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2111,availability,Error,Error,2111,"oSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2159,availability,Down,Downloads,2159,"space::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3372,availability,Down,Downloads,3372,"stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3529,availability,Down,Downloads,3529,"rge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6387,availability,Down,Downloads,6387,"libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6481,availability,ERROR,ERROR,6481,"sers/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I sub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6546,availability,ERROR,ERROR,6546,"tions3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2059,deployability,fail,failed,2059,"ds/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/an",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6468,deployability,fail,failed,6468,".7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6912,deployability,UPDAT,UPDATE,6912,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7177,deployability,updat,updated,7177,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7367,deployability,depend,dependencies,7367,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7559,deployability,releas,released,7559,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6954,energy efficiency,load,loading,6954,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7367,integrability,depend,dependencies,7367,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7481,integrability,sub,submitted,7481,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1879,interoperability,share,shared,1879,"ease read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2904,interoperability,convers,conversion,2904,"Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/ana",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7367,modifiability,depend,dependencies,7367,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:78,performance,error,error,78,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2037,performance,error,error,2037,"/Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2111,performance,Error,Error,2111,"oSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6481,performance,ERROR,ERROR,6481,"sers/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I sub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6546,performance,ERROR,ERROR,6546,"tions3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6954,performance,load,loading,6954,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2059,reliability,fail,failed,2059,"ds/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/an",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6468,reliability,fail,failed,6468,".7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:78,safety,error,error,78,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:589,safety,test,test,589,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:660,safety,test,test,660,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2037,safety,error,error,2037,"/Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2111,safety,Error,Error,2111,"oSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6481,safety,ERROR,ERROR,6481,"sers/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I sub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6546,safety,ERROR,ERROR,6546,"tions3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6912,safety,UPDAT,UPDATE,6912,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7177,safety,updat,updated,7177,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7367,safety,depend,dependencies,7367,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6738,security,session,session,6738,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6912,security,UPDAT,UPDATE,6912,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6925,security,Access,Access,6925,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7177,security,updat,updated,7177,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7248,security,session,session,7248,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:589,testability,test,test,589,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:660,testability,test,test,660,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1788,testability,unit,unit,1788,"C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7367,testability,depend,dependencies,7367,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:78,usability,error,error,78,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1041,usability,User,Users,1041,"s. Unfortunately, I have the same error after making the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1088,usability,User,Users,1088,"aking the changes you suggest. ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. results in. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1895,usability,User,Users,1895,"/roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2037,usability,error,error,2037,"/Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2051,usability,command,command,2051,"Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2111,usability,Error,Error,2111,"oSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2145,usability,User,Users,2145,"dling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2441,usability,User,Users,2441,"wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2515,usability,User,Users,2515,"ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2631,usability,User,Users,2631,"le .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3042,usability,User,Users,3042,"inker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michae",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3098,usability,User,Users,3098,"ocation). Error in <ACLiC>: Executing 'cd ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3160,usability,User,Users,3160,"loads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3220,usability,User,Users,3220,"_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMob",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3279,usability,User,Users,3279,"=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchiv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3358,usability,User,Users,3358,"rong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3515,usability,User,Users,3515,"rs/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anacond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3748,usability,User,Users,3748,"sometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3819,usability,User,Users,3819,"ray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3888,usability,User,Users,3888,"lysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3961,usability,User,Users,3961,"-fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anacond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4033,usability,User,Users,4033,"e -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anacond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4493,usability,User,Users,4493,"g++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4569,usability,User,Users,4569,"001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4653,usability,User,Users,4653,"l_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michae",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4725,usability,User,Users,4725,"okup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4795,usability,User,Users,4795,"libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michae",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4864,usability,User,Users,4864,"b/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4939,usability,User,Users,4939,"rypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michae",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5011,usability,User,Users,5011,"sqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/mich",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5197,usability,User,Users,5197,"ace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5268,usability,User,Users,5268,""" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5342,usability,User,Users,5342,""" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5415,usability,User,Users,5415,"hineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5483,usability,User,Users,5483,"t.1"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5572,usability,User,Users,5572,"michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcppyy_backend3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5644,usability,User,Users,5644,"so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5715,usability,User,Users,5715,".so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libc++.1.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5786,usability,User,Users,5786,"ib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libpcre.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5852,usability,User,Users,5852,"dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libxxhash.0.8.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:5930,usability,User,Users,5930,"ib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblz4.1.9.2.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6004,usability,User,Users,6004,""" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libzstd.1.4.5.dylib"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6076,usability,User,Users,6076,"b"" ""-lspindump"" ""-late"" ""-lexpat.1"" ""-lIOReport"" ""-lSMC"" ""-lmis"" ""-lheimdal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6148,usability,User,Users,6148,"dal-asn1"" ""-lAudioStatistics"" ""-lperfcheck"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6220,usability,User,Users,6220,"3/envs/aslsRun2_ana/lib/libRIO.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6294,usability,User,Users,6294,"nvs/aslsRun2_ana/lib/libThread.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6373,usability,User,Users,6373,"slsRun2_ana/lib/libCling.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6481,usability,ERROR,ERROR,6481,"sers/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I sub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6546,usability,ERROR,ERROR,6546,"tions3_9.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7207,usability,close,close,7207,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7259,usability,confirm,confirm,7259,"/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. I make my conda environment using. ```yaml. channels:. - conda-forge. dependencies:. - ipython. - pandas=1.2.0. - particle=0.14.0. - root=6.22.6. - root_pandas=0.7.0. ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:294,availability,error,error,294,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:240,deployability,releas,release,240,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:205,energy efficiency,core,core,205,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:300,integrability,messag,message,300,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:300,interoperability,messag,message,300,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:121,modifiability,exten,extended,121,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:256,performance,time,time,256,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:294,performance,error,error,294,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:294,safety,error,error,294,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:294,usability,error,error,294,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:401,usability,custom,custom,401,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:. ```. ld: library not found for -lCheckFix. ```. What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:70,availability,error,error,70,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1853,availability,ERROR,ERROR,1853,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1918,availability,ERROR,ERROR,1918,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1514,deployability,build,build,1514,"andling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1529,deployability,build,build,1529,"orkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1575,deployability,build,build,1575,"g declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1590,deployability,build,build,1590,"ode of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1840,deployability,fail,failed,1840,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2284,deployability,UPDAT,UPDATE,2284,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2549,deployability,updat,updated,2549,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2326,energy efficiency,load,loading,2326,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1060,interoperability,share,shared,1060,"is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:70,performance,error,error,70,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1853,performance,ERROR,ERROR,1853,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1918,performance,ERROR,ERROR,1918,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2326,performance,load,loading,2326,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1840,reliability,fail,failed,1840,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:70,safety,error,error,70,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1853,safety,ERROR,ERROR,1853,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1918,safety,ERROR,ERROR,1918,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2284,safety,UPDAT,UPDATE,2284,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2549,safety,updat,updated,2549,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2110,security,session,session,2110,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2284,security,UPDAT,UPDATE,2284,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2297,security,Access,Access,2297,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2549,security,updat,updated,2549,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2620,security,session,session,2620,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:971,testability,unit,unit,971,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:17,usability,document,documentation,17,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:70,usability,error,error,70,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:. ```. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1853,usability,ERROR,ERROR,1853,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1918,usability,ERROR,ERROR,1918,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2579,usability,close,close,2579,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2631,usability,confirm,confirm,2631,"eef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so. ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:83,interoperability,specif,specific,83,I can confirm that I don't have this problem on a Linux x86_64 machine. It appears specific to Mac. I don't know what `CheckFix` is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:6,usability,confirm,confirm,6,I can confirm that I don't have this problem on a Linux x86_64 machine. It appears specific to Mac. I don't know what `CheckFix` is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:12,deployability,updat,update,12,you need to update or install xcode. it worked for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:22,deployability,instal,install,22,you need to update or install xcode. it worked for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:12,safety,updat,update,12,you need to update or install xcode. it worked for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:12,security,updat,update,12,you need to update or install xcode. it worked for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:253,deployability,releas,release,253,"That's very good that it worked for you! That's one reason to close this issue. Another reason is that with ROOT 6.24, there is now the [RooCrystalBall class](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCrystalBall.cxx) in the release. So importing the custom `RooSDSCBShape` into a workspace should not be necessary. Let me know if you have any other issue; feel free to reopen this or open a new one! But since I don't have a Mac, it might get a bit difficult :). Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:62,usability,close,close,62,"That's very good that it worked for you! That's one reason to close this issue. Another reason is that with ROOT 6.24, there is now the [RooCrystalBall class](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCrystalBall.cxx) in the release. So importing the custom `RooSDSCBShape` into a workspace should not be necessary. Let me know if you have any other issue; feel free to reopen this or open a new one! But since I don't have a Mac, it might get a bit difficult :). Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:279,usability,custom,custom,279,"That's very good that it worked for you! That's one reason to close this issue. Another reason is that with ROOT 6.24, there is now the [RooCrystalBall class](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCrystalBall.cxx) in the release. So importing the custom `RooSDSCBShape` into a workspace should not be necessary. Let me know if you have any other issue; feel free to reopen this or open a new one! But since I don't have a Mac, it might get a bit difficult :). Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/pull/7251:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/issues/7252:148,deployability,releas,release,148,"Hi @tmombaecher, thanks for reporting this and sorry that this was addressed so late! I have opened a PR to fix this issue, so in the upcoming ROOT release 6.28 nobody will run into this problem anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/pull/7253:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:12,availability,failur,failures,12,The Windows failures on the climate tutorials is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:12,deployability,fail,failures,12,The Windows failures on the climate tutorials is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:12,performance,failur,failures,12,The Windows failures on the climate tutorials is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:12,reliability,fail,failures,12,The Windows failures on the climate tutorials is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/issues/7254:58,deployability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:165,deployability,log,logics,165,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:123,energy efficiency,current,current,123,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,integrability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,interoperability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,modifiability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:179,modifiability,paramet,parameter,179,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,reliability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:165,safety,log,logics,165,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,security,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:165,security,log,logics,165,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:58,testability,integr,integral,58,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:165,testability,log,logics,165,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```. In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1110,availability,consist,consistent,1110,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,deployability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:162,deployability,log,logics,162,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,deployability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:650,deployability,version,version,650,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:767,deployability,version,version,767,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,deployability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1067,deployability,updat,update,1067,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,deployability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:120,energy efficiency,current,current,120,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:325,energy efficiency,current,currently,325,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:642,energy efficiency,current,current,642,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:759,energy efficiency,current,current,759,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,integrability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,integrability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:650,integrability,version,version,650,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:767,integrability,version,version,767,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,integrability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,integrability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,interoperability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,interoperability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,interoperability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1197,interoperability,standard,standard,1197,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1291,interoperability,standard,standard,1291,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,interoperability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,modifiability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:176,modifiability,paramet,parameter,176,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,modifiability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:364,modifiability,paramet,parameter,364,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:650,modifiability,version,version,650,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:767,modifiability,version,version,767,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,modifiability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,modifiability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,reliability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,reliability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:584,reliability,doe,does,584,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,reliability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,reliability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:162,safety,log,logics,162,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1067,safety,updat,update,1067,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1383,safety,compl,complicated,1383,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,security,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:162,security,log,logics,162,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,security,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,security,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1067,security,updat,update,1067,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1383,security,compl,complicated,1383,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,security,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:60,testability,integr,integral,60,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:162,testability,log,logics,162,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:284,testability,integr,integral,284,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:916,testability,integr,integral,916,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1614,testability,integr,integral,1614,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:618,usability,behavi,behavior,618,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1039,usability,document,documentation,1039,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1110,usability,consist,consistent,1110,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:1479,usability,user,user,1479,"> The function here seems to well behave for the analytical integral only when `z=0,beta=0, lambda <-1 strictly` In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented. Hi, I'm also trying to use the analytical integral and I think the problem is that currently the RMS is used as the sigma parameter, but for `z=0, beta=0, 0>lambda >-1` the RMS is infinity. In `Ipatia2`, the definition of `sigma` changes when `lambda` moves from (-oo,-1] to (-1,0). This actually could cause problems in the fit as the shape does not change smoothly. Similar behavior happens in the current version due to the definition change of `sigma` for `zeta->0` and `zeta=0`. The definition of `sigma` in the current version is inconsistent in the `evaluate()` function and `analyticalIntegral` function (though commented out). When `beta=0, zeta=0`, the analytical integral could work for `-1<lambda<0`, but the `sigma` is not the RMS. This need to be fixed either in the code, or in the documentation. I suggest to update the `analyticalIntegral` code to be consistent with `evaluate()`. So the RMS will be:. 1. `beta=0, zeta=0, lambda<-1`: non-standard student t pdf, RMS = sigma/sqrt(-2(lambda+1)). 2. `beta=0, zeta=0, 0>lambda>-1`: non-standard student t pdf, RMS is infinity. 3. `beta=0, zeta>0`: RMS = sigma. 4. other: RMS is complicated, as given in https://en.wikipedia.org/wiki/Generalised_hyperbolic_distribution. The user should use the pdf in two modes as the definition of `sigma` is different: 1) `zeta=0, lambda<0`; and 2) `zeta>0`. The analytical integral is provided for mode 1) when `beta=0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,deployability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:378,deployability,version,version,378,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,deployability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,integrability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:378,integrability,version,version,378,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,integrability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,interoperability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,interoperability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,modifiability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:378,modifiability,version,version,378,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,modifiability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,reliability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,reliability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:47,security,modif,modify,47,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,security,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:203,security,modif,modified,203,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:291,security,modif,modified,291,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:528,security,modif,modified,528,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,security,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:100,testability,integr,integral,100,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:579,testability,integr,integral,579,"Hi @guitargeek , this is Dongliang. I tried to modify the `RooHypatia2` code to make the analytical integral work. In the attached code, `local_pdf/RooHypatia2.cxx` and `local_pdf/RooHypatia2.h` are the modified code. And, `local_pdf/RooHypatia2b.cxx` and `local_pdf/RooHypatia2b.h` are the modified code with the class name also changed to enable a comparison with the default version. The script `comparePdf.py` is used to make the comparison and you should find the two curves (blue for the default one, and red dash for the modified) agree. I guess this means the analytical integral works? . [Hypatia2_test.zip](https://github.com/root-project/root/files/9137314/Hypatia2_test.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:22,deployability,contain,containing,22,Could you submit a PR containing the fix and the test so that we can treat this useful contribution according to the usual workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:10,integrability,sub,submit,10,Could you submit a PR containing the fix and the test so that we can treat this useful contribution according to the usual workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:49,safety,test,test,49,Could you submit a PR containing the fix and the test so that we can treat this useful contribution according to the usual workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:49,testability,test,test,49,Could you submit a PR containing the fix and the test so that we can treat this useful contribution according to the usual workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:123,usability,workflow,workflow,123,Could you submit a PR containing the fix and the test so that we can treat this useful contribution according to the usual workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/pull/7255:9,availability,Ping,Ping,9,@lmoneta Ping :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:15,safety,review,reviewing,15,"Np, thanks for reviewing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:15,testability,review,reviewing,15,"Np, thanks for reviewing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/issues/7256:162,deployability,stack,stack,162,"@meena382 could you please add a proper issue description and title? When you open an issue, there's a template that you can follow. Here we just see partially a stack trace.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/issues/7256:168,testability,trace,trace,168,"@meena382 could you please add a proper issue description and title? When you open an issue, there's a template that you can follow. Here we just see partially a stack trace.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/pull/7257:239,security,auth,author,239,"Hi @goi42! Since you have originally contributed the `RooDSCBShape` and `RooSDSCBShape`, I wanted to kindly ask you if it's okay for you if I generalized both classes in the new `RooCrystalBall` class. Of course you are still listed as an author in the new class :). With this PR, creating a symmetric double-sided crystal ball would change from:. ```C++. RooSDSCBShape{""cb"", ""cb"", x, x0, sigma, alpha, n};. ```. to. ```C++. RooCrystalBall{""cb"", ""cb"", x, x0, sigma, alpha, n, true};. ```. There is just an additional flag to indicate that the tail is on both sides. Replacing the `RooDSCBShape` with the `RooCrystalBall` is even easier because there is a constructor with the same signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:681,security,sign,signature,681,"Hi @goi42! Since you have originally contributed the `RooDSCBShape` and `RooSDSCBShape`, I wanted to kindly ask you if it's okay for you if I generalized both classes in the new `RooCrystalBall` class. Of course you are still listed as an author in the new class :). With this PR, creating a symmetric double-sided crystal ball would change from:. ```C++. RooSDSCBShape{""cb"", ""cb"", x, x0, sigma, alpha, n};. ```. to. ```C++. RooCrystalBall{""cb"", ""cb"", x, x0, sigma, alpha, n, true};. ```. There is just an additional flag to indicate that the tail is on both sides. Replacing the `RooDSCBShape` with the `RooCrystalBall` is even easier because there is a constructor with the same signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:525,usability,indicat,indicate,525,"Hi @goi42! Since you have originally contributed the `RooDSCBShape` and `RooSDSCBShape`, I wanted to kindly ask you if it's okay for you if I generalized both classes in the new `RooCrystalBall` class. Of course you are still listed as an author in the new class :). With this PR, creating a symmetric double-sided crystal ball would change from:. ```C++. RooSDSCBShape{""cb"", ""cb"", x, x0, sigma, alpha, n};. ```. to. ```C++. RooCrystalBall{""cb"", ""cb"", x, x0, sigma, alpha, n, true};. ```. There is just an additional flag to indicate that the tail is on both sides. Replacing the `RooDSCBShape` with the `RooCrystalBall` is even easier because there is a constructor with the same signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:436,deployability,version,version,436,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:212,energy efficiency,model,model,212,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:436,integrability,version,version,436,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:436,modifiability,version,version,436,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:111,reliability,doe,doesn,111,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:212,security,model,model,212,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:457,testability,plan,plan,457,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:135,usability,user,users,135,"> Hi, @guitargeek, sounds good to me! Thanks for doing this. Only conditionally sounds good to me. If old code doesn't work, any more, users will be really angry that you broke their code. Therefore, an existing model in a file, a script or a framework needs to be able to run with the old definitions. It's totally fine, though, to write in the docs of the old implementations that for a *new* analysis, one should use the generalised version. Is that the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:180,deployability,releas,release,180,"@hageboeck . > If old code doesn't work, any more, users will be really angry that you broke their code. It looks like this PR only removes functions that were never included in a release, though they were included in the master branch. The longstanding `RooCBShape` will continue to exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:272,deployability,continu,continue,272,"@hageboeck . > If old code doesn't work, any more, users will be really angry that you broke their code. It looks like this PR only removes functions that were never included in a release, though they were included in the master branch. The longstanding `RooCBShape` will continue to exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:27,reliability,doe,doesn,27,"@hageboeck . > If old code doesn't work, any more, users will be really angry that you broke their code. It looks like this PR only removes functions that were never included in a release, though they were included in the master branch. The longstanding `RooCBShape` will continue to exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:51,usability,user,users,51,"@hageboeck . > If old code doesn't work, any more, users will be really angry that you broke their code. It looks like this PR only removes functions that were never included in a release, though they were included in the master branch. The longstanding `RooCBShape` will continue to exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:40,deployability,releas,release,40,"The new class, RooDSShape, has not been release yet, so I think it is still fine to change and mention in the doc. . Of course we cannot break code using RooCBShape.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:43,deployability,releas,release,43,I had to rebase because of a change in the release notes from https://github.com/root-project/root/pull/7271. This will be merged once the tests have succeeded in a few hours.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:139,safety,test,tests,139,I had to rebase because of a change in the release notes from https://github.com/root-project/root/pull/7271. This will be merged once the tests have succeeded in a few hours.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:139,testability,test,tests,139,I had to rebase because of a change in the release notes from https://github.com/root-project/root/pull/7271. This will be merged once the tests have succeeded in a few hours.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7260:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:738,availability,error,error,738,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:995,availability,error,error,995,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1102,availability,error,error,1102,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1197,availability,failur,failure,1197,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2018,availability,Error,Error,2018,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2070,availability,error,errors,2070,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:98,deployability,build,build,98,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:132,deployability,build,build,132,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:138,deployability,build,build,138,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:217,deployability,build,build,217,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:251,deployability,build,build,251,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:257,deployability,build,build,257,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:343,deployability,build,build,343,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:377,deployability,build,build,377,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:383,deployability,build,build,383,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:449,deployability,build,build,449,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:483,deployability,build,build,483,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:489,deployability,build,build,489,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:561,deployability,build,build,561,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:595,deployability,build,build,595,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:601,deployability,build,build,601,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:650,deployability,build,build,650,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:684,deployability,build,build,684,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:690,deployability,build,build,690,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:907,deployability,build,build,907,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:941,deployability,build,build,941,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:947,deployability,build,build,947,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1113,deployability,build,build,1113,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1147,deployability,build,build,1147,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1153,deployability,build,build,1153,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1197,deployability,fail,failure,1197,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1209,deployability,build,build,1209,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1243,deployability,build,build,1243,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1249,deployability,build,build,1249,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1299,deployability,build,build,1299,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1333,deployability,build,build,1333,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1339,deployability,build,build,1339,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1417,deployability,build,build,1417,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1451,deployability,build,build,1451,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1457,deployability,build,build,1457,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1500,deployability,Releas,Release,1500,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1574,deployability,build,build,1574,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1608,deployability,build,build,1608,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1614,deployability,build,build,1614,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1661,deployability,Releas,Release,1661,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1738,deployability,build,build,1738,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1772,deployability,build,build,1772,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1778,deployability,build,build,1778,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1824,deployability,Releas,Release,1824,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1962,deployability,build,build,1962,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1980,deployability,Releas,Release,1980,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2032,deployability,build,building,2032,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:953,energy efficiency,core,core,953,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1345,energy efficiency,core,core,1345,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1463,energy efficiency,core,core,1463,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1620,energy efficiency,core,core,1620,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1784,energy efficiency,core,core,1784,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:738,performance,error,error,738,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:995,performance,error,error,995,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1102,performance,error,error,1102,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1197,performance,failur,failure,1197,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2018,performance,Error,Error,2018,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2070,performance,error,errors,2070,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1197,reliability,fail,failure,1197,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:738,safety,error,error,738,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:995,safety,error,error,995,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1102,safety,error,error,1102,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2018,safety,Error,Error,2018,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2070,safety,error,errors,2070,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:738,usability,error,error,738,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:995,usability,error,error,995,"@bendavid. ```. 2:09:55 In file included from input_line_7:20:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpuc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1088,usability,CUSTOM,CUSTOMBUILD,1088,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1102,usability,error,error,1102,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:1866,usability,Command,Command,1866,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2018,usability,Error,Error,2018,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:2070,usability,error,errors,2070,"included from C:/build/workspace/root-pullrequests-build/build/include\ROOT/TReentrantRWLock.hxx:26:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/enumerable_thread_specific.h:23:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/atomic.h:42:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_machine.h:113:. 12:09:55 In file included from C:/build/workspace/root-pullrequests-build/build/include\tbb/tbb_stddef.h:119:. 12:09:55 C:/build/workspace/root-pullrequests-build/build/include\tbb/internal/_tbb_windef.h(28,2): error GAAAB8493: TBB requires linkage with multithreaded C/C++ runtime library. Choose multithreaded DLL runtime in project settings, or use /MD[d] compiler switch. [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:55 #error TBB requires linkage with multithreaded C/C++ runtime library. \. 12:09:55 ^. 12:09:56 CUSTOMBUILD : error : C:/build/workspace/root-pullrequests-build/build/bin/rootcling_stage1.exe: compilation failure (C:/build/workspace/root-pullrequests-build/build/bin/libThreada1d22a0ca9_dictUmbrella.h) [C:\build\workspace\root-pullrequests-build\build\core\thread\G__Thread.vcxproj]. 12:09:56 G__multimap2Dict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__multimap2Dict.dir\Release\G__multimap2Dict.lib. 12:09:56 G__unordered_mapDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__unordered_mapDict.dir\Release\G__unordered_mapDict.lib. 12:09:57 G__forward_listDict.vcxproj -> C:\build\workspace\root-pullrequests-build\build\core\clingutils\G__forward_listDict.dir\Release\G__forward_listDict.lib. 12:09:57 Command exited with the value: 1. 12:09:57 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount:16. 12:09:57 Error(s) when building project. 12:09:57 2 Compiler errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:62,availability,avail,availability,62,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:89,deployability,build,build,89,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:253,deployability,build,build,253,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:0,energy efficiency,Current,Currently,0,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:30,energy efficiency,core,core,30,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:62,reliability,availab,availability,62,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:62,safety,avail,availability,62,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:62,security,availab,availability,62,Currently the usage of TBB in core/thread is triggered by the availability of tbb in the build (standalone or builtin). Should the criteria be something different/more selective? (or is there some other switch which needs to be triggered in the windows build for this case?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:137,availability,avail,availability,137,"Alternatively this could be steered by whether the build is done with implicit multithreading enabled, rather than directly checking the availability of TBB (since this seems to not be sufficient in the windows case) Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:51,deployability,build,build,51,"Alternatively this could be steered by whether the build is done with implicit multithreading enabled, rather than directly checking the availability of TBB (since this seems to not be sufficient in the windows case) Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:137,reliability,availab,availability,137,"Alternatively this could be steered by whether the build is done with implicit multithreading enabled, rather than directly checking the availability of TBB (since this seems to not be sufficient in the windows case) Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:137,safety,avail,availability,137,"Alternatively this could be steered by whether the build is done with implicit multithreading enabled, rather than directly checking the availability of TBB (since this seems to not be sufficient in the windows case) Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:137,security,availab,availability,137,"Alternatively this could be steered by whether the build is done with implicit multithreading enabled, rather than directly checking the availability of TBB (since this seems to not be sufficient in the windows case) Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:61,availability,avail,availability,61,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:61,reliability,availab,availability,61,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:47,safety,detect,detecting,47,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:61,safety,avail,availability,61,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:47,security,detect,detecting,47,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:61,security,availab,availability,61,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:0,deployability,Updat,Updated,0,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:0,safety,Updat,Updated,0,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:67,safety,test,tests,67,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:0,security,Updat,Updated,0,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:67,testability,test,tests,67,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:127,deployability,releas,release,127,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:73,integrability,repositor,repository,73,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:73,interoperability,repositor,repository,73,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:149,performance,perform,performance,149,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:37,safety,except,except,37,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:60,testability,trace,trace,60,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:149,usability,perform,performance,149,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:57,deployability,releas,release,57,"Thanks, I propose to add the relevant information to the release notes in a separate PR (mainly to avoid an otherwise unnecessary rebase before merging)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:99,safety,avoid,avoid,99,"Thanks, I propose to add the relevant information to the release notes in a separate PR (mainly to avoid an otherwise unnecessary rebase before merging)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:7,integrability,sub,subsequent,7,"In the subsequent PR, consider also applying the formatting recommendation at: https://travis-ci.org/github/root-project/root/jobs/763450064",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:49,interoperability,format,formatting,49,"In the subsequent PR, consider also applying the formatting recommendation at: https://travis-ci.org/github/root-project/root/jobs/763450064",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7262:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7269:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7269
https://github.com/root-project/root/pull/7270:22,usability,user,user-images,22,![Screenshot](https://user-images.githubusercontent.com/2516492/108766539-2244f780-750a-11eb-9372-eb511616b935.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:57,deployability,automat,automatically,57,"@alja, I rebase your branch while it was not possible to automatically merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:57,testability,automat,automatically,57,"@alja, I rebase your branch while it was not possible to automatically merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7272:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:241,availability,state,statements,241,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:241,integrability,state,statements,241,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,reliability,doe,doesn,33,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:76,reliability,doe,doesn,76,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:188,reliability,doe,does,188,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:64,usability,mous,mouse,64,"> I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). Hmm weird! It works great on Linux. Maybe in Windows it does not like to have multiple gVirtualX grab button statements? . Would it work if you change those to a single line?:. `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. As done in https://lappweb.in2p3.fr/LC/Doxygen/pro/classTileFrame.html#17f37f28e4bc9496003dcb8036224b83",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:255,availability,state,statements,255,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:255,integrability,state,statements,255,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:35,reliability,doe,doesn,35,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:78,reliability,doe,doesn,78,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:202,reliability,doe,does,202,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:66,usability,mous,mouse,66,"> > I tried it (on Windows) and it doesn't work. Even the regular mouse click doesn't work anymore (i.e. I'm not able to change tab). > . > Hmm weird! It works great on Linux. > . > Maybe in Windows it does not like to have multiple gVirtualX grab button statements? > . > Would it work if you change those to a single line?:. > . > `gVirtualX->GrabButton(..., kAnyButton, kAnyModifier, kButtonPressMask | kPointerMotionMask, kNone, kNone);`. I'll try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:84,reliability,doe,doesn,84,"So it's better, I can select tabs with the mouse buttons, but the mouse wheel still doesn't work. I'll try to debug it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:43,usability,mous,mouse,43,"So it's better, I can select tabs with the mouse buttons, but the mouse wheel still doesn't work. I'll try to debug it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:66,usability,mous,mouse,66,"So it's better, I can select tabs with the mouse buttons, but the mouse wheel still doesn't work. I'll try to debug it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:60,availability,mask,masks,60,"Oh, I see. Maybe something is different in Windows with the masks. What if you change to:. `kButtonPressMask | kButtonReleaseMask | kPointerMotionMask` ? thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:243,availability,mask,mask,243,"The TGVSlider class supports mouse wheel scroll on Linux. Does it also work on Windows? If yes, then I guess the differences are here:. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L141. --> they use the different mask of my previous post. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L213. --> Here they do not check for button-press type (which is ok for Linux, but maybe not for Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:58,reliability,Doe,Does,58,"The TGVSlider class supports mouse wheel scroll on Linux. Does it also work on Windows? If yes, then I guess the differences are here:. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L141. --> they use the different mask of my previous post. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L213. --> Here they do not check for button-press type (which is ok for Linux, but maybe not for Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:20,usability,support,supports,20,"The TGVSlider class supports mouse wheel scroll on Linux. Does it also work on Windows? If yes, then I guess the differences are here:. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L141. --> they use the different mask of my previous post. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L213. --> Here they do not check for button-press type (which is ok for Linux, but maybe not for Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:29,usability,mous,mouse,29,"The TGVSlider class supports mouse wheel scroll on Linux. Does it also work on Windows? If yes, then I guess the differences are here:. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L141. --> they use the different mask of my previous post. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L213. --> Here they do not check for button-press type (which is ok for Linux, but maybe not for Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:24,deployability,version,version,24,"OK, so I have a working version, but I don't really like the behavior, and I'm not sure if it's really useful... Anyway, I'll post the diff whenever I find some time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:24,integrability,version,version,24,"OK, so I have a working version, but I don't really like the behavior, and I'm not sure if it's really useful... Anyway, I'll post the diff whenever I find some time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:24,modifiability,version,version,24,"OK, so I have a working version, but I don't really like the behavior, and I'm not sure if it's really useful... Anyway, I'll post the diff whenever I find some time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:161,performance,time,time,161,"OK, so I have a working version, but I don't really like the behavior, and I'm not sure if it's really useful... Anyway, I'll post the diff whenever I find some time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:61,usability,behavi,behavior,61,"OK, so I have a working version, but I don't really like the behavior, and I'm not sure if it's really useful... Anyway, I'll post the diff whenever I find some time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1534,availability,down,down,1534,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:750,energy efficiency,Draw,DrawBorder,750,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:864,integrability,event,event,864,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:927,integrability,event,events,927,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:976,integrability,event,events,976,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1045,integrability,event,event,1045,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1062,integrability,event,event,1062,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1101,integrability,event,event,1101,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1129,integrability,event,event,1129,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1172,integrability,event,events,1172,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1241,integrability,event,event,1241,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1437,integrability,event,event,1437,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1497,integrability,event,event,1497,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1717,integrability,event,event,1717,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1787,integrability,event,event,1787,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1841,integrability,event,events,1841,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:1912,integrability,event,event,1912,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:881,usability,widget,widget,881,"Here is the diff vs master:. ```. diff --git a/gui/gui/src/TGTab.cxx b/gui/gui/src/TGTab.cxx. index 06f142624d..56ab4695a9 100644. --- a/gui/gui/src/TGTab.cxx. +++ b/gui/gui/src/TGTab.cxx. @@ -81,7 +81,8 @@ TGTabElement::TGTabElement(const TGWindow *p, TGString *text, UInt_t w, UInt_t h. fTHeight = max_ascent + max_descent;. Resize(TMath::Max(fTWidth+12, (UInt_t)45), fTHeight+6);. fEnabled = kTRUE;. - gVirtualX->GrabButton(fId, kButton1, kAnyModifier, kButtonPressMask, kNone, kNone);. + gVirtualX->GrabButton(fId, kAnyButton, kAnyModifier, kButtonPressMask | kButtonReleaseMask |. + kPointerMotionMask, kNone, kNone);. }. ////////////////////////////////////////////////////////////////////////////////. @@ -129,11 +130,33 @@ void TGTabElement::DrawBorder(). ////////////////////////////////////////////////////////////////////////////////. /// Handle button event in the tab widget. Basically we only handle. -/// button events in the small tabs. +/// button and scroll events in the small tabs. Bool_t TGTabElement::HandleButton(Event_t *event). {. - if (event->fType == kButtonPress) {. + if (event->fCode == kButton4 || event->fCode == kButton5) { //scroll wheel events. + if (fParent) {. + TGTab* main = (TGTab*)fParent;. +. + if (event->fCode == kButton4) { //scroll up = move left, as in Firefox. + for (Int_t c = main->GetCurrent() - 1; c >= 0; --c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + } else if (event->fCode == kButton5) { //scroll down = move right, as in Firefox. + for (Int_t c = main->GetCurrent() + 1; c < main->GetNumberOfTabs(); ++c) {. + if (main->GetTabTab(c)->IsEnabled()) {. + // change tab and generate event. + main->SetTab(c);. + break;. + }. + }. + }. + }. + } else if (event->fType == kButtonPress) { //normal button press events. TGTab* main = (TGTab*)fParent;. if (main) {. if (fShowClose && event->fWindow == GetId() &&. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:31,deployability,depend,depends,31,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:31,integrability,depend,depends,31,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:31,modifiability,depend,depends,31,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:31,safety,depend,depends,31,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:10,testability,understand,understand,10,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:31,testability,depend,depends,31,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,deployability,depend,depends,33,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,integrability,depend,depends,33,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,modifiability,depend,depends,33,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,safety,depend,depends,33,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:12,testability,understand,understand,12,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:33,testability,depend,depends,33,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:256,usability,user,users,256,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:263,usability,experien,experience,263,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default? Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:156,interoperability,platform,platforms,156,"Thanks, I checked your changes. In Linux, it now 'jumps' in steps of two tabs, so I added an extra ""ifdef"" for Windows and hopefully it should work on both platforms now. Enable function has been added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/issues/7273:628,deployability,version,version,628,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:691,deployability,version,version,691,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:794,energy efficiency,optim,optimizations,794,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:128,integrability,event,event,128,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:177,integrability,filter,filters,177,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:388,integrability,event,event,388,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:628,integrability,version,version,628,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:691,integrability,version,version,691,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1505,integrability,Filter,Filter,1505,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:628,modifiability,version,version,628,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:691,modifiability,version,version,691,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:48,performance,time,time,48,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:67,performance,time,time,67,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:227,performance,time,time,227,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:375,performance,time,time,375,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:399,performance,time,time,399,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:794,performance,optimiz,optimizations,794,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:923,performance,time,time,923,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1121,performance,time,time,1121,"Hi @dcervenkov , I believe you are counting the time spent just-in-time compiling (""jitting"") the cuts as if it was part of the event loop: RDataFrame, when strings are used as filters or defines, has a non-negligible start-up time because it's actually compiling those strings into C++ code. With ROOT master branch (and in v6.24, coming soon), you can retrieve the jitting time and the event loop time separately by adding the following line at the beginning of `main`:. ```cpp. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);. ```. Here is a version without jitting that should run faster than the python version (make sure to add `-O2` to the compilation flags though -- C++ code needs those sweet compiler optimizations):. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. counts[time_bin] = df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. For larger datasets, with `RDataFrame` you can also easily run on multiple threads by adding `ROOT::EnableImplicitMT()` which will provide further speed-ups. For these few datapoints it won't really be beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:117,deployability,scale,scale,117,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:380,deployability,scale,scale,380,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:117,energy efficiency,scale,scale,117,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:380,energy efficiency,scale,scale,380,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:142,integrability,event,events,142,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:405,integrability,event,events,405,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:117,modifiability,scal,scale,117,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:380,modifiability,scal,scale,380,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:117,performance,scale,scale,117,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:283,performance,perform,perform,283,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:336,performance,time,time,336,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:380,performance,scale,scale,380,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:371,reliability,doe,does,371,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:283,usability,perform,perform,283,"On my workstation:. ```. original C++: ~1.6s. original Python: ~0.54s. C++ without jitting: ~0.38s. ```. As runtimes scale with the number of events, the absolute difference between C++ and Python will be much larger for larger datasets. The original C++ code with jitting will also perform well on larger datasets, because the jitting time is just a constant offset but does not scale with the number of events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:46,integrability,filter,filter,46,"Hi @eguiraud, awesome! It would be great if a filter example similar to `df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();` could be added to the docs (or is it already there and I missed it?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:76,integrability,Filter,Filter,76,"Hi @eguiraud, awesome! It would be great if a filter example similar to `df.Filter([=](int tb) { return tb == time_bin; }, {""time_bin""}).Count();` could be added to the docs (or is it already there and I missed it?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/pull/7274:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7275:4,availability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7275
https://github.com/root-project/root/pull/7275:4,performance,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7275
https://github.com/root-project/root/pull/7275:4,safety,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7275
https://github.com/root-project/root/pull/7275:4,usability,error,errors,4,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7275
https://github.com/root-project/root/issues/7276:120,deployability,version,version,120,"Thanks for opening the issue, indeed I was able to reproduce the crash just like you described! When I use a newer ROOT version, like ROOT 6.24/06, I can open the workspaces again. So the issue somehow got fixed in the 6.24 dev cycle and can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:120,integrability,version,version,120,"Thanks for opening the issue, indeed I was able to reproduce the crash just like you described! When I use a newer ROOT version, like ROOT 6.24/06, I can open the workspaces again. So the issue somehow got fixed in the 6.24 dev cycle and can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:120,modifiability,version,version,120,"Thanks for opening the issue, indeed I was able to reproduce the crash just like you described! When I use a newer ROOT version, like ROOT 6.24/06, I can open the workspaces again. So the issue somehow got fixed in the 6.24 dev cycle and can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:245,usability,close,closed,245,"Thanks for opening the issue, indeed I was able to reproduce the crash just like you described! When I use a newer ROOT version, like ROOT 6.24/06, I can open the workspaces again. So the issue somehow got fixed in the 6.24 dev cycle and can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/pull/7278:11,deployability,build,build,11,@phsft-bot build also on ROOT-centos7/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:42,safety,test,test,42,"PS: Explanation why nobody saw this:. The test only run if IMT is on. Presumably, centos7, gcc4.8 runs with IMT off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:42,testability,test,test,42,"PS: Explanation why nobody saw this:. The test only run if IMT is on. Presumably, centos7, gcc4.8 runs with IMT off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/issues/7279:72,availability,down,download,72,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:39,deployability,contain,contain,39,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:56,deployability,version,version,56,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:56,integrability,version,version,56,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:110,interoperability,format,format,110,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:56,modifiability,version,version,56,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:82,safety,Compl,Complete,82,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:82,security,Compl,Complete,82,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:91,usability,User,User,91,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:98,usability,Guid,Guide,98,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:156,usability,guid,guides,156,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:163,usability,user,users-guide,163,"Could you please make the file name to contain the ROOT version? When I download ""Complete User's Guide in A4 format"" from http://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuideA4.pdf, I've no idea whether it was changed in 2018 or in 2021.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:9,usability,user,user,9,"The ROOT user guide is consider as frozen and the ""d"" URL should not be considered. This ia a copy of the old web site. The new web site is: https://root.cern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:14,usability,guid,guide,14,"The ROOT user guide is consider as frozen and the ""d"" URL should not be considered. This ia a copy of the old web site. The new web site is: https://root.cern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:32,deployability,version,version,32,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:49,deployability,updat,updated,49,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:32,integrability,version,version,32,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:32,modifiability,version,version,32,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:49,safety,updat,updated,49,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:49,security,updat,updated,49,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:130,testability,plan,plan,130,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:88,usability,user,user,88,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:93,usability,guid,guide,93,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:138,usability,stop,stop,138,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:143,usability,support,supporting,143,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:183,usability,document,documentation,183,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:263,usability,document,documentation,263,"@couet - it seems that the html version is still updated. What do you mean by ""The ROOT user guide is consider as frozen""? Do you plan to stop supporting it? I still find it the best documentation about ROOT. This is pretty detailed and written better than class documentation would be (this is a manual for reading, not a technical reference of existing functions).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:16,deployability,updat,updated,16,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:278,deployability,updat,updated,278,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:351,integrability,repositor,repository,351,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:351,interoperability,repositor,repository,351,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:37,performance,time,time,37,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:16,safety,updat,updated,16,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:278,safety,updat,updated,278,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:16,security,updat,updated,16,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:278,security,updat,updated,278,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:203,usability,document,documentation,203,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:246,usability,guid,guide,246,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:26,usability,User,User,26,See explanation about the User's Guide here: https://github.com/root-project/root/issues/7284,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:33,usability,Guid,Guide,33,See explanation about the User's Guide here: https://github.com/root-project/root/issues/7284,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:185,deployability,updat,update,185,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:2,integrability,sub,submitted,2,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:185,safety,updat,update,185,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:185,security,updat,update,185,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:39,usability,Guid,Guide,39,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:111,usability,close,closed,111,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:151,usability,close,closed,151,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:196,usability,User,User,196,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:203,usability,Guid,Guide,203,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:6,usability,close,close,6,Yes I close it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7281:104,deployability,version,version,104,"A a side note, the ""fixed in"" is a bit misleading here ... because the bug does not exist in any tagged version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7281:104,integrability,version,version,104,"A a side note, the ""fixed in"" is a bit misleading here ... because the bug does not exist in any tagged version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7281:104,modifiability,version,version,104,"A a side note, the ""fixed in"" is a bit misleading here ... because the bug does not exist in any tagged version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7281:75,reliability,doe,does,75,"A a side note, the ""fixed in"" is a bit misleading here ... because the bug does not exist in any tagged version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7282:31,usability,guid,guides,31,https://root.cern/root/htmldoc/guides/users-guide/Trees.html. \- probably should be in the documentation hierarchy. https://root.cern/root/. \- an absolutely empty page (check other pages on that path though).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:38,usability,user,users-guide,38,https://root.cern/root/htmldoc/guides/users-guide/Trees.html. \- probably should be in the documentation hierarchy. https://root.cern/root/. \- an absolutely empty page (check other pages on that path though).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:91,usability,document,documentation,91,https://root.cern/root/htmldoc/guides/users-guide/Trees.html. \- probably should be in the documentation hierarchy. https://root.cern/root/. \- an absolutely empty page (check other pages on that path though).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:135,availability,consist,consistent,135,https://root.cern/d/ is the old web site and should not be taken into account. You are mixing the old and the new web site. That's not consistent. Therefore I do not think you comments are valid. Comments should apply on the new web site only. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:308,integrability,repositor,repository,308,https://root.cern/d/ is the old web site and should not be taken into account. You are mixing the old and the new web site. That's not consistent. Therefore I do not think you comments are valid. Comments should apply on the new web site only. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:308,interoperability,repositor,repository,308,https://root.cern/d/ is the old web site and should not be taken into account. You are mixing the old and the new web site. That's not consistent. Therefore I do not think you comments are valid. Comments should apply on the new web site only. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:189,safety,valid,valid,189,https://root.cern/d/ is the old web site and should not be taken into account. You are mixing the old and the new web site. That's not consistent. Therefore I do not think you comments are valid. Comments should apply on the new web site only. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:135,usability,consist,consistent,135,https://root.cern/d/ is the old web site and should not be taken into account. You are mixing the old and the new web site. That's not consistent. Therefore I do not think you comments are valid. Comments should apply on the new web site only. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:230,integrability,repositor,repository,230,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:230,interoperability,repositor,repository,230,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:155,reliability,doe,does,155,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:94,safety,valid,valid,94,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:31,usability,support,support,31,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:131,usability,person,person,131,"I think that since you own and support these two sites, and they can be found, this report is valid. I can see that you assigned a person for this issue - does it mean you accept that? Or should I move this issue to the ROOT site repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:113,integrability,repositor,repository,113,Johannes is the person who initiate the new Manual structure. Yes this issue would better apply on the ROOT site repository. May be we can close it here in that case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:113,interoperability,repositor,repository,113,Johannes is the person who initiate the new Manual structure. Yes this issue would better apply on the ROOT site repository. May be we can close it here in that case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:16,usability,person,person,16,Johannes is the person who initiate the new Manual structure. Yes this issue would better apply on the ROOT site repository. May be we can close it here in that case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:139,usability,close,close,139,Johannes is the person who initiate the new Manual structure. Yes this issue would better apply on the ROOT site repository. May be we can close it here in that case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:212,integrability,repositor,repository,212,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:370,integrability,repositor,repository,370,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:212,interoperability,repositor,repository,212,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:370,interoperability,repositor,repository,370,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:16,performance,time,time,16,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:272,security,sign,signal,272,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:65,usability,user,users,65,"1) I spent some time to show that your site structure is bad for users and wrote that in details and with links. 2) When I made an issue, it was not suggested on the site or here that I should make it in another repository. I think that to show some respect to people who signal issues and to your project would be for you to at least copy this issue to the appropriate repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:41,safety,reme,remember,41,Ok I will. Yesterday we made an issue to remember to check the TTree User's Guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:69,usability,User,User,69,Ok I will. Yesterday we made an issue to remember to check the TTree User's Guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:76,usability,Guid,Guide,76,Ok I will. Yesterday we made an issue to remember to check the TTree User's Guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:55,security,auth,authorship,55,I asked you to make it yourself because if I do it the authorship will be my ... you will lost the authorship. Is it ok for you ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:99,security,auth,authorship,99,I asked you to make it yourself because if I do it the authorship will be my ... you will lost the authorship. Is it ok for you ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:117,energy efficiency,current,current,117,"I see. Thank you! I subscribed to notifications there. I don't care much about the authorship. I was confused by the current sites structure, and if when I visit the site next year all is clear, I will be glad! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:20,integrability,sub,subscribed,20,"I see. Thank you! I subscribed to notifications there. I don't care much about the authorship. I was confused by the current sites structure, and if when I visit the site next year all is clear, I will be glad! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:83,security,auth,authorship,83,"I see. Thank you! I subscribed to notifications there. I don't care much about the authorship. I was confused by the current sites structure, and if when I visit the site next year all is clear, I will be glad! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:188,usability,clear,clear,188,"I see. Thank you! I subscribed to notifications there. I don't care much about the authorship. I was confused by the current sites structure, and if when I visit the site next year all is clear, I will be glad! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:25,availability,error,error,25,"Sure thing - but the Mac error is real, so I need to fix that first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:25,performance,error,error,25,"Sure thing - but the Mac error is real, so I need to fix that first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:25,safety,error,error,25,"Sure thing - but the Mac error is real, so I need to fix that first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:25,usability,error,error,25,"Sure thing - but the Mac error is real, so I need to fix that first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build just on mac11.0/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build just on mac11.0/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:83,safety,review,review,83,"@vgvassilev could you have a look at the last two commits? They arrived after your review, to fix Windows and `stressInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:83,testability,review,review,83,"@vgvassilev could you have a look at the last two commits? They arrived after your review, to fix Windows and `stressInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/issues/7284:463,deployability,stack,stackexchange,463,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1704,deployability,resourc,resources,1704,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1767,deployability,stack,stackexchange,1767,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2148,deployability,build,build,2148,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1704,energy efficiency,resourc,resources,1704,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2117,energy efficiency,Draw,Drawmethod,2117,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:70,integrability,event,event,70,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1108,integrability,topic,topics,1108,"bject. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:974,interoperability,Coordinat,Coordinates,974,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1432,interoperability,Specif,Specific,1432,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1972,interoperability,specif,specific,1972,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2013,interoperability,specif,specify,2013,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1392,modifiability,variab,variable,1392,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1421,modifiability,variab,variables,1421,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1441,modifiability,variab,variables,1441,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:965,performance,Parallel,Parallel,965,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1296,performance,content,content,1296,". \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the origin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1704,performance,resourc,resources,1704,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1704,safety,resourc,resources,1704,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1704,testability,resourc,resources,1704,"a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the table:. \- to specify. all the column. If this options is not. \- all columns. If this option... 14.20.10. The TTree::Drawmethod can also be used to build a list of the entries. \- of entries. 14.24.1. The number of entries in the friend must be equal or greater to the number of entries of the original chain. \- equal to or greater than the number...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:903,usability,navigat,navigate,903,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:931,usability,navigat,navigate,931,"Several new corrections since last evening. 14.14.3.1. // the objrect event has been filled at this point. \- object. We want to keep the generated. // histograms we open a browser and the TreeViewer. \- when we open. 14.15.2. In this analysis, we do not read the entire entry we only read one branch. \- entry,. (see Trees in Analysis). \- should be a link. // we are only interested by the destep branch. \- ""interested in"" is much more common, https://english.stackexchange.com/a/226731/116650. 14.20.7.1. 46. an histogram. \- a histogram. This word is normally pronounced with a consonant 'h' in the beginning. 47. You can plot plot objects of any class which. \- plot... that. 14.20.8.1. They use the human ability to spot un-symmetry. \- asymmetry (a distinction that produces such a lack of symmetry, see Wiktionary). Example of spider plot. \- of a. with the spider plots’ output. \- plot's. to navigate in the tree. \- to navigate the tree. 14.20.8.2. The Parallel Coordinates representation of the six dimensional point. \- of a six-dimensional (https://www.chicagomanualofstyle.org/qanda/data/faq/topics/HyphensEnDashesEmDashes/faq0117.html, https://forum.wordreference.com/threads/spelling-three-dimensional-vs-multidimensional.695071/). 14.20.9. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection. \- , optionally. will print all the variable of the tree. \- all variables. Specific variables of the tree can be explicit selected by list them in column separated list:. \- explicitly ... by listing them ... in a column-separated (this is a compound word, cf. https://en.wikipedia.org/wiki/Comma-separated_values, https://www.ef.com/wwen/english-resources/english-grammar/hyphens-and-dashes/, https://english.stackexchange.com/questions/889/when-should-com-pound-words-be-writ-ten-as-one-word-with-hy-phens-or-with-spac). will results in a printing similar to:. \- will result in output similar to:. can be use to specific the layout of the t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:46,availability,redund,redundant,46,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:46,deployability,redundan,redundant,46,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:233,interoperability,specif,specify,233,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:446,interoperability,specif,specify,446,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:701,interoperability,format,formatting,701,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:755,modifiability,Variab,Variable,755,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:777,modifiability,variab,variable,777,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:18,performance,Perform,Performance,18,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:46,reliability,redundan,redundant,46,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:46,safety,redund,redundant,46,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:18,usability,Perform,Performance,18,"14.10.1.2. See "". Performance Benchmarks"". \- redundant newline. 14.10.2. If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:. \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:. 14.12. the entry in the collection becomes in turn top level branches, etc. \- a top level branch. IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:. \- reconsider formatting. 14.14.1.1 Creating Branches with A single Variable. \- a single variable. 14.14.1.2. the number of existing entries is null. \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:141,usability,document,documentation,141,"May I suggest that, instead of creating an issue, you do a Pull Request on the source file: https://github.com/root-project/root/blob/master/documentation/users-guide/Trees.md ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:155,usability,user,users-guide,155,"May I suggest that, instead of creating an issue, you do a Pull Request on the source file: https://github.com/root-project/root/blob/master/documentation/users-guide/Trees.md ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:52,deployability,version,version,52,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:52,integrability,version,version,52,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:52,modifiability,version,version,52,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:102,reliability,doe,doesn,102,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:75,usability,User,User,75,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:82,usability,Guid,Guide,82,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:211,usability,document,documentation,211,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:18,performance,time,time,18,"@couet - ok, next time I'll try to make a Pull Request! An issue seems a bit more interactive though (I don't do PRs often).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:82,usability,interact,interactive,82,"@couet - ok, next time I'll try to make a Pull Request! An issue seems a bit more interactive though (I don't do PRs often).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:12,usability,Interact,Interactives,12,PR are very Interactives too. But we discuss over the mods and once finalise we commit. I suggest that you do a PR with all the list of mods you suggest here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:23,deployability,updat,update,23,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:23,safety,updat,update,23,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:23,security,updat,update,23,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:4,usability,User,User,4,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:126,usability,Guid,Guide,126,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:166,usability,help,helping,166,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:177,usability,navigat,navigate,177,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:243,deployability,version,version,243,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:59,integrability,pub,published,59,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:243,integrability,version,version,243,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:243,modifiability,version,version,243,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:28,performance,time,time,28,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:158,usability,User,User,158,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:165,usability,Guid,Guide,165,"1) Fine, I'll try a PR next time. However, since I already published in issue here, maybe someone will fix that (there is an assignee chosen). 2) I found the User's Guide more comprehensive, but I'll try the Manual as well. I can't find a pdf version of the manual on its page, is there any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:285,deployability,updat,updated,285,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:312,deployability,updat,update,312,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:26,performance,time,time,26,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:863,reliability,doe,does,863,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:126,safety,valid,valid,126,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:285,safety,updat,updated,285,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:312,safety,updat,update,312,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:608,safety,risk,risk,608,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:285,security,updat,updated,285,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:312,security,updat,update,312,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:608,security,risk,risk,608,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:38,usability,user,users,38,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:44,usability,guid,guide,44,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:250,usability,User,User,250,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:257,usability,guid,guide,257,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:517,usability,guid,guide,517,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:543,usability,User,User,543,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:550,usability,Guid,Guide,550,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:819,usability,Guid,Guide,819,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:829,usability,help,helps,829,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:838,usability,navigat,navigate,838,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:221,availability,down,downloading,221,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:659,availability,state,stated,659,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:511,deployability,version,versions,511,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:814,deployability,API,API,814,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:481,integrability,repositor,repository,481,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:511,integrability,version,versions,511,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:659,integrability,state,stated,659,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:814,integrability,API,API,814,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:210,interoperability,format,format,210,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:481,interoperability,repositor,repository,481,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:814,interoperability,API,API,814,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:511,modifiability,version,versions,511,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:88,usability,User,User,88,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:95,usability,Guid,Guide,95,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:400,usability,User,User,400,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:407,usability,Guid,Guide,407,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:676,usability,User,User,676,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:683,usability,Guid,Guide,683,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:765,usability,User,User,765,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:772,usability,Guid,Guide,772,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:242,availability,consist,consistent,242,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:313,deployability,scale,scale,313,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:313,energy efficiency,scale,scale,313,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:455,integrability,repositor,repository,455,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:455,interoperability,repositor,repository,455,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:313,modifiability,scal,scale,313,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:313,performance,scale,scale,313,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:187,usability,navigat,navigation,187,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:242,usability,consist,consistent,242,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:373,usability,close,close,373,We are in a development phase and some information still need to be moved form the old structure to the new one. That's why we keep for now the old information. But hopefully if you do a navigation starting from the new web site it should be consistent. We made this changes mainly because the old scheme did not scale with the fast growing of ROOT. So if you agree we can close this issue. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:227,availability,avail,available,227,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:534,deployability,updat,updates,534,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:576,deployability,version,version,576,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:576,integrability,version,version,576,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:576,modifiability,version,version,576,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:227,reliability,availab,available,227,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:227,safety,avail,available,227,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:534,safety,updat,updates,534,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:227,security,availab,available,227,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:534,security,updat,updates,534,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:98,usability,document,document,98,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:116,usability,User,User,116,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:123,usability,guid,guide,123,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:468,usability,User,User,468,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:475,usability,Guid,Guide,475,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:678,usability,guid,guide,678,"You probably mean ""are now in development phase"". As of today, I see that . 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual). 2) it is still available from the site, people may use that. . 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:115,deployability,updat,update,115,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:281,deployability,updat,update,281,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:115,safety,updat,update,115,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:281,safety,updat,update,281,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:115,security,updat,update,115,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:281,security,updat,update,281,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:96,usability,Guid,Guide,96,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:126,usability,User,User,126,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:133,usability,guid,guide,133,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:203,usability,User,User,203,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:210,usability,Guid,Guide,210,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:270,usability,help,help,270,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:352,usability,user,user,352,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:359,usability,Guid,Guide,359,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:121,deployability,contain,container,121,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:310,deployability,updat,update,310,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:383,deployability,Releas,Releases,383,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:75,integrability,topic,topic,75,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:310,safety,updat,update,310,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:310,security,updat,update,310,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:302,testability,plan,plan,302,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:398,testability,understand,understand,398,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:59,usability,learn,learn,59,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:321,usability,User,User,321,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:328,usability,guid,guide,328,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:104,usability,guid,guide,104,"Yes we are working on the manual. And please if you see something missing in Manual or in the reference guide which is no where else but in the Old User's Guide, let us know and we will make sure it appears somewhere. . I guess we can close this issue now ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:148,usability,User,User,148,"Yes we are working on the manual. And please if you see something missing in Manual or in the reference guide which is no where else but in the Old User's Guide, let us know and we will make sure it appears somewhere. . I guess we can close this issue now ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:155,usability,Guid,Guide,155,"Yes we are working on the manual. And please if you see something missing in Manual or in the reference guide which is no where else but in the Old User's Guide, let us know and we will make sure it appears somewhere. . I guess we can close this issue now ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:235,usability,close,close,235,"Yes we are working on the manual. And please if you see something missing in Manual or in the reference guide which is no where else but in the Old User's Guide, let us know and we will make sure it appears somewhere. . I guess we can close this issue now ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:155,availability,state,state,155,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:155,integrability,state,state,155,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:187,testability,simpl,simply,187,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:52,usability,User,User,52,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:59,usability,Guid,Guide,59,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:105,usability,guid,guide,105,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:187,usability,simpl,simply,187,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:221,usability,workflow,workflow,221,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:248,usability,close,close,248,"Fine, I'll open a ticket if I find something in the User's Guide missing in the Manual (or the reference guide). For me this issue is not resolved in this state of things. I would rather simply fix that. However, if your workflow says that you can close that, you can do that - it's your project and your decisions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:8,testability,understand,understand,8,"I don't understand what would be the use of corrections if no one is going to compile a new PDF, and it is to be removed from the site?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/pull/7285:11,deployability,build,build,11,@phsft-bot build also on ROOT-centos7/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7285
https://github.com/root-project/root/pull/7285:11,deployability,build,build,11,@phsft-bot build also on ROOT-centos7/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7285
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:18,availability,failur,failure,18,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:123,availability,Error,Error,123,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:260,availability,Error,Error,260,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:18,deployability,fail,failure,18,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:109,deployability,updat,update,109,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:18,performance,failur,failure,18,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:123,performance,Error,Error,123,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:260,performance,Error,Error,260,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:18,reliability,fail,failure,18,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:109,safety,updat,update,109,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:123,safety,Error,Error,123,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:210,safety,test,testobject,210,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:251,safety,Test,TestObj,251,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:260,safety,Error,Error,260,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:347,safety,test,testobjectderived,347,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:395,safety,Test,TestObjDerived,395,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:109,security,updat,update,109,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:210,testability,test,testobject,210,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:251,testability,Test,TestObj,251,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:347,testability,test,testobjectderived,347,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:395,testability,Test,TestObjDerived,395,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:123,usability,Error,Error,123,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:260,usability,Error,Error,260,@Axel-Naumann The failure on ROOT-ubuntu16/nortcxxmod don't seem related to this PR but rather to the llvm 9 update:. ```. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobject.h. requested to autoload type TestObj. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for testobjectderived.h. requested to autoload type TestObjDerived. ```. and similar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:76,availability,down,down,76,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:134,safety,test,test,134,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:139,safety,review,review,139,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:324,safety,review,reviewing,324,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:134,testability,test,test,134,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:139,testability,review,review,139,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:324,testability,review,reviewing,324,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:78,availability,down,down,78,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:825,deployability,build,build,825,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:754,performance,time,time,754,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:793,performance,time,time,793,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:136,safety,test,test,136,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:141,safety,review,review,141,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:326,safety,review,reviewing,326,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:568,safety,reme,remember,568,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:777,safety,test,test,777,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:940,safety,test,tested,940,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:136,testability,test,test,136,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:141,testability,review,review,141,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:326,testability,review,reviewing,326,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:777,testability,test,test,777,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:940,testability,test,tested,940,"> Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits. For white, github's `Hide whitespace changes` usually works well :). I had kept the ""revert"" commit intentionally to remember (for posterity) that this avenue was looked into. I have no remove it. Technically this could indeed be split in several (4 or 5) PRs ... which the consequent delay in merging (time to do and locally test the split, time to run the PRs through the build) ... given that we are branching soon .. this would also either delay the branching or require the PRs to be tested twice each ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:191,deployability,updat,updating,191,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:321,integrability,sub,subsequent,321,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:262,performance,lock,lock,262,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:33,safety,compl,complete,33,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:184,safety,unsaf,unsafe,184,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:191,safety,updat,updating,191,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:33,security,compl,complete,33,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:191,security,updat,updating,191,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:262,security,lock,lock,262,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:229,usability,Document,Document,229,There is 3 tasks still needed to complete this work:. * Migrate flushing from TObject::Write to *::Merger. * Investigate cost of false sharing of atomic in TIsAProxy. * Resolve thread-unsafe updating of fMother (pre-existing). * Document or change the atomic vs lock of TBufferMerge::GetBuffered. They will be address in subsequent PRs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7287:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7287:11,deployability,build,build,11,@phsft-bot build just on mac11arm/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/issues/7289:116,deployability,build,build,116,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:181,deployability,instal,install,181,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:288,deployability,instal,installation,288,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:353,deployability,version,versions,353,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:353,integrability,version,versions,353,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:353,modifiability,version,versions,353,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:. https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:100,availability,error,errors,100,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2620,availability,error,error,2620,"2.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:43,deployability,build,build,43,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:94,deployability,build,build,94,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:168,deployability,fail,fails,168,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:177,deployability,build,build,177,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:196,deployability,FAIL,FAILED,196,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:285,deployability,build,build,285,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:368,deployability,build,build,368,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:384,deployability,BUILD,BUILD,384,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:461,deployability,build,build,461,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:547,deployability,build,build,547,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:563,deployability,BUILD,BUILD,563,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:655,deployability,build,build,655,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:671,deployability,BUILD,BUILD,671,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:776,deployability,build,build,776,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:792,deployability,BUILD,BUILD,792,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:863,deployability,build,build,863,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:879,deployability,BUILD,BUILD,879,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:952,deployability,build,build,952,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:968,deployability,BUILD,BUILD,968,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1038,deployability,build,build,1038,o build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1054,deployability,BUILD,BUILD,1054,oot 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1126,deployability,build,build,1126,ed to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1142,deployability,BUILD,BUILD,1142,2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1213,deployability,build,build,1213,oot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1229,deployability,BUILD,BUILD,1229,yy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/B,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1300,deployability,build,build,1300,c7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1318,deployability,BUILD,BUILD,1318,ternal/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1388,deployability,build,build,1388,lc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_am,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1404,deployability,BUILD,BUILD,1404,/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1477,deployability,build,build,1477,7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1493,deployability,BUILD,BUILD,1493,/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1571,deployability,build,build,1571,amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1587,deployability,BUILD,BUILD,1587,/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1661,deployability,build,build,1661,/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelVi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1677,deployability,BUILD,BUILD,1677,7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2215,deployability,build,build,2215,"/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2231,deployability,BUILD,BUILD,2231,"/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2362,deployability,build,build,2362,".22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2378,deployability,BUILD,BUILD,2378,"inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2492,deployability,build,build,2492,"ILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2508,deployability,BUILD,BUILD,2508,"cc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CRE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2751,deployability,build,build,2751,"FIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Developme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2767,deployability,BUILD,BUILD,2767,"d=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3011,deployability,build,build,3011,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3027,deployability,BUILD,BUILD,3027,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3310,deployability,build,build,3310,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3326,deployability,BUILD,BUILD,3326,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3616,deployability,build,build,3616,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3697,deployability,version,version,3697,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3837,deployability,version,version,3837,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:438,energy efficiency,core,core,438,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:846,energy efficiency,core,core,846,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:935,energy efficiency,core,core,935,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1022,energy efficiency,core,core,1022,"ue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1109,energy efficiency,core,core,1109, cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1196,energy efficiency,core,core,1196,ILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPData,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1283,energy efficiency,core,core,1283,build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1372,energy efficiency,core,core,1372,muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1458,energy efficiency,core,core,1458,/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1549,energy efficiency,core,core,1549,d/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1641,energy efficiency,core,core,1641,ppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1733,energy efficiency,core,core,1733,/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:121,integrability,configur,configured,121,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3697,integrability,version,version,3697,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3721,integrability,compon,components,3721,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3837,integrability,version,version,3837,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:204,interoperability,bind,bindings,204,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:617,interoperability,bind,bindings,617,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:727,interoperability,bind,bindings,727,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1963,interoperability,bind,bindings,1963,/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(typ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2046,interoperability,bind,bindings,2046,"m/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2285,interoperability,bind,bindings,2285,"int/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2432,interoperability,bind,bindings,2432,"/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2562,interoperability,bind,bindings,2562,"c -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2821,interoperability,bind,bindings,2821,"signed-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3081,interoperability,bind,bindings,3081,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3380,interoperability,bind,bindings,3380,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3721,interoperability,compon,components,3721,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:121,modifiability,configur,configured,121,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:204,modifiability,bind,bindings,204,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:617,modifiability,bind,bindings,617,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:727,modifiability,bind,bindings,727,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1918,modifiability,paramet,paramet,1918,root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1963,modifiability,bind,bindings,1963,/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(typ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2046,modifiability,bind,bindings,2046,"m/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2285,modifiability,bind,bindings,2285,"int/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2432,modifiability,bind,bindings,2432,"/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2562,modifiability,bind,bindings,2562,"c -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2821,modifiability,bind,bindings,2821,"signed-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3081,modifiability,bind,bindings,3081,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3380,modifiability,bind,bindings,3380,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3697,modifiability,version,version,3697,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3721,modifiability,compon,components,3721,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:3837,modifiability,version,version,3837,"UG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/muz/dqm/w/slc7_amd64_gcc630/external/python/2.7.13-comp2/bin/python (found version ""2.7.13"") found components: Interpreter Development NumPy. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 2.7.13. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:100,performance,error,errors,100,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2620,performance,error,error,2620,"2.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:168,reliability,fail,fails,168,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:196,reliability,FAIL,FAILED,196,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:100,safety,error,errors,100,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2620,safety,error,error,2620,"2.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:121,security,configur,configured,121,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:100,usability,error,errors,100,"sorry to hijack this issue, I am trying to build latest root 6.22 with python2 only but I get build errors [a]. cmake is configured to use python2 [b]. Any idea why it fails to build? . [a]. ```. FAILED: bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o. /build/muz/dqm/w/slc7_amd64_gcc630/external/gcc/6.3.0/bin/g++ -Dcppyy2_7_EXPORTS -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/foundation/inc -I/build/muz/dqm/w/slc7_amd64. _gcc630/external/python/2.7.13-comp2/include/python2.7 -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc63. 0/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src -Iginclude -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc. 630/lcg/root/6.22.07/root-6.22.07/core/cont/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/gui/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22. 07/core/meta/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/clib/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/rint/inc -I/build/muz/. dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/zip/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/thread/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630. /lcg/root/6.22.07/root-6.22.07/core/textinput/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:2620,usability,error,error,2620,"2.07/root-6.22.07/core/base/v7/inc -I/build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root. -6.22.07/core/unix/inc -D__ROOFIT_NOBANNER -std=c++1z -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-paramet. er -Wno-register -std=c++1z -MD -MT bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -MF bindings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o.d -o b. indings/pyroot/cppyy/CPyCppyy/CMakeFiles/cppyy2_7.dir/src/CPPDataMember.cxx.o -c /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx. In file included from /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:6:0:. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:36:30: error: 'PyObject* CPyCppyy::CreateLowLevelView' redeclared as different kin. d of symbol. CPPYY_DECL_VIEW_CREATOR(std::byte);. ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:29:34: note: in definition of macro 'CPPYY_DECL_VIEW_CREATOR'. PyObject* CreateLowLevelView(type*, Py_ssize_t* shape = nullptr); \. ^~~~. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:30:15: note: previous declaration 'PyObject* CPyCppyy::CreateLowLevelView(unsigned. char**, Py_ssize_t*)'. PyObject* CreateLowLevelView(type**, Py_ssize_t* shape = nullptr). ^. /build/muz/dqm/w/BUILD/slc7_amd64_gcc630/lcg/root/6.22.07/root-6.22.07/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.h:34:1: note: in expansion of macro 'CPPYY_DECL_VIEW_CREATOR'. CPPYY_DECL_VIEW_CREATOR(unsigned char);. ^~~~~~~~~~~~~~~~~~~~~~~. ``` . [b]. ```. -- Looking for Python. -- Found Python2: /build/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:35,deployability,version,version,35,looks like issue is with gcc 6.3.0 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:35,integrability,version,version,35,looks like issue is with gcc 6.3.0 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:35,modifiability,version,version,35,looks like issue is with gcc 6.3.0 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:77,deployability,build,build,77,"Hi @smuzaffar sorry for the late reply. I believe the issue here is that the build is compiled with C++17 (-std=c++1z), which enables some code that uses `std::byte` in cppyy, but gcc 6.3.0 did not have support for it, it was only introduced in gcc 7:. https://gcc.gnu.org/gcc-7/changes.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:203,usability,support,support,203,"Hi @smuzaffar sorry for the late reply. I believe the issue here is that the build is compiled with C++17 (-std=c++1z), which enables some code that uses `std::byte` in cppyy, but gcc 6.3.0 did not have support for it, it was only introduced in gcc 7:. https://gcc.gnu.org/gcc-7/changes.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/pull/7290:601,deployability,releas,released,601,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:185,integrability,interfac,interfaces,185,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:185,interoperability,interfac,interfaces,185,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:185,modifiability,interfac,interfaces,185,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:373,modifiability,paramet,parameter,373,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:129,safety,reme,remember,129,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:169,security,expos,expose,169,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:60,usability,clear,clear,60,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:424,usability,behavi,behavior,424,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:20,usability,clear,clear,20,"> Actually, it *is* clear. I'm an experimentalist. ;-) Thanks for the info, Wim! I'll implement something along those lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/issues/7291:39,deployability,build,build,39,@mrodozov I am not sure it is a 'pure' build system issue (I started a discussion in https://github.com/cms-sw/cmssw/issues/32977#issuecomment-786503374). Adding in CC: @eguiraud @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7292:236,deployability,releas,release,236,"I see same problem. It is connected with libc changes:. https://github.com/bminor/glibc/commit/8ed005daf0ab03e142500324a34087ce179ae78e. Unfortunately, latest 4.x XROOTD 4.12.6 does not solve the problem. I guess, it is blocker for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:177,reliability,doe,does,177,"I see same problem. It is connected with libc changes:. https://github.com/bminor/glibc/commit/8ed005daf0ab03e142500324a34087ce179ae78e. Unfortunately, latest 4.x XROOTD 4.12.6 does not solve the problem. I guess, it is blocker for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:250,reliability,diagno,diagnosis,250,IIUC that should have been addressed by https://github.com/xrootd/xrootd/commit/1f2d48fa23ba220ce92bf8ec6c15305ebbf19564 part of Xrootd 5.0.3 https://github.com/xrootd/xrootd/issues/1321. I don't see that commit in the 5.1 branch. @simonmichal is my diagnosis ccorrect?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:250,testability,diagno,diagnosis,250,IIUC that should have been addressed by https://github.com/xrootd/xrootd/commit/1f2d48fa23ba220ce92bf8ec6c15305ebbf19564 part of Xrootd 5.0.3 https://github.com/xrootd/xrootd/issues/1321. I don't see that commit in the 5.1 branch. @simonmichal is my diagnosis ccorrect?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:68,deployability,build,build,68,@Axel-Naumann . Seems to be xrootd 5.1 fine in this respect - I can build it normally. After small adjustments we need to apply https://github.com/root-project/root/pull/7335 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:9,deployability,patch,patch,9,"Yes, the patch is included in 5.1.x series: https://github.com/xrootd/xrootd/commit/5298c732c394d7ac3c24abc7d01a4631f573e692, I has been also bckported to XRootD4 in 4.12.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:9,safety,patch,patch,9,"Yes, the patch is included in 5.1.x series: https://github.com/xrootd/xrootd/commit/5298c732c394d7ac3c24abc7d01a4631f573e692, I has been also bckported to XRootD4 in 4.12.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:9,security,patch,patch,9,"Yes, the patch is included in 5.1.x series: https://github.com/xrootd/xrootd/commit/5298c732c394d7ac3c24abc7d01a4631f573e692, I has been also bckported to XRootD4 in 4.12.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:91,availability,sla,slac,91,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:36,deployability,releas,released,36,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:65,deployability,releas,release,65,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:221,deployability,releas,release,221,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:13,reliability,Doe,Does,13,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:91,reliability,sla,slac,91,@simonmichal Does xrootd 4.12.8 was released? I cannot find such release on https://xrootd.slac.stanford.edu/. And also not on https://lcgpackages.web.cern.ch. @oshadura May be 4.12.8 would be better choice for ROOT 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:66,deployability,releas,releases,66,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:233,deployability,patch,patches,233,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:210,energy efficiency,current,currently,210,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:233,safety,patch,patches,233,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:233,security,patch,patches,233,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:280,usability,user,user,280,"@linev : yes it has been tagged: https://github.com/xrootd/xrootd/releases/tag/v4.12.8 (it seems I must have forgotten to send an announcement, my apologies), I would recommend though going for XRootD5, we are currently backporiting patches to XRootD4 not proactively but only on user request",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:94,deployability,Upgrad,Upgrade,94,"Latest xrood 4.12.8 merged into master, 6.24 and 6.22 branches and fixes compilation problem. Upgrade to xroot 5.1 needs more investigation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:94,modifiability,Upgrad,Upgrade,94,"Latest xrood 4.12.8 merged into master, 6.24 and 6.22 branches and fixes compilation problem. Upgrade to xroot 5.1 needs more investigation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7293:29,deployability,instal,installed,29,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:61,deployability,manag,manager,61,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:61,energy efficiency,manag,manager,61,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:53,modifiability,pac,package,53,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:61,safety,manag,manager,61,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:16,deployability,instal,install,16,"I just tried to install root5 and encountered the same problem. Since this issue is from 2021, is there a known solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:208,deployability,instal,installations,208,I am closing this issue. ROOT5 is not supported any more: we are happy to give a hand to migrate to ROOT 6 where necessary. Moreover it seems the original issue was due to a misconfiguration somewhere in the installations on the machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:38,usability,support,supported,38,I am closing this issue. ROOT5 is not supported any more: we are happy to give a hand to migrate to ROOT 6 where necessary. Moreover it seems the original issue was due to a misconfiguration somewhere in the installations on the machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/pull/7294:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7294
https://github.com/root-project/root/issues/7295:28,usability,document,documentation,28,"It also turns out that some documentation is not created. For example, I have a TFile.html (note that on the site it's [classTFile.html](https://root.cern/doc/master/classTFile.html)). I have empty documentation for. > TFile(). virtual ~TFile(). even though for other methods documentation is created. I can also see documentation comments in the source file from that generated html file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:198,usability,document,documentation,198,"It also turns out that some documentation is not created. For example, I have a TFile.html (note that on the site it's [classTFile.html](https://root.cern/doc/master/classTFile.html)). I have empty documentation for. > TFile(). virtual ~TFile(). even though for other methods documentation is created. I can also see documentation comments in the source file from that generated html file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:276,usability,document,documentation,276,"It also turns out that some documentation is not created. For example, I have a TFile.html (note that on the site it's [classTFile.html](https://root.cern/doc/master/classTFile.html)). I have empty documentation for. > TFile(). virtual ~TFile(). even though for other methods documentation is created. I can also see documentation comments in the source file from that generated html file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:317,usability,document,documentation,317,"It also turns out that some documentation is not created. For example, I have a TFile.html (note that on the site it's [classTFile.html](https://root.cern/doc/master/classTFile.html)). I have empty documentation for. > TFile(). virtual ~TFile(). even though for other methods documentation is created. I can also see documentation comments in the source file from that generated html file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:381,availability,down,download,381,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:428,deployability,version,version,428,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:428,integrability,version,version,428,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:419,interoperability,specif,specific,419,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:428,modifiability,version,version,428,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:202,reliability,doe,does,202,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:132,usability,document,documentation,132,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:399,usability,document,documentation,399,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`? @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:505,integrability,repositor,repository,505,"Hi @Axel-Naumann ! Thanks for the information. I think I read about that several years ago, but forgot. Now I'll fix that in my notes. This is perfect, thank you! Maybe it's good that ROOT relies more on existing developed software instead of its own domestic tools. But it's still a pity that functionality decreases (though this is not essential for the main task, of course). I know why I couldn't find that: the link from https://root.cern/doc/master/ is broken (which is already reported on the site repository).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:505,interoperability,repositor,repository,505,"Hi @Axel-Naumann ! Thanks for the information. I think I read about that several years ago, but forgot. Now I'll fix that in my notes. This is perfect, thank you! Maybe it's good that ROOT relies more on existing developed software instead of its own domestic tools. But it's still a pity that functionality decreases (though this is not essential for the main task, of course). I know why I couldn't find that: the link from https://root.cern/doc/master/ is broken (which is already reported on the site repository).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:260,usability,tool,tools,260,"Hi @Axel-Naumann ! Thanks for the information. I think I read about that several years ago, but forgot. Now I'll fix that in my notes. This is perfect, thank you! Maybe it's good that ROOT relies more on existing developed software instead of its own domestic tools. But it's still a pity that functionality decreases (though this is not essential for the main task, of course). I know why I couldn't find that: the link from https://root.cern/doc/master/ is broken (which is already reported on the site repository).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:41,usability,user,users,41,"And one more thing: if it's not hard for users, maybe a recipe could be added to THtml (or to the page with all reference guides) on how to generate ROOT documentation using `doxygen`? UPD: found the recipe https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:122,usability,guid,guides,122,"And one more thing: if it's not hard for users, maybe a recipe could be added to THtml (or to the page with all reference guides) on how to generate ROOT documentation using `doxygen`? UPD: found the recipe https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:154,usability,document,documentation,154,"And one more thing: if it's not hard for users, maybe a recipe could be added to THtml (or to the page with all reference guides) on how to generate ROOT documentation using `doxygen`? UPD: found the recipe https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:277,usability,document,documentation,277,"And one more thing: if it's not hard for users, maybe a recipe could be added to THtml (or to the page with all reference guides) on how to generate ROOT documentation using `doxygen`? UPD: found the recipe https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:177,availability,down,download,177,"The documentation is pretty large (774 Mb) vs 166MB for the whole source (which, as I understand, includes all docs in docstrings, and more), though both are tar.gz. Maybe I'll download it another time. . Maybe it could use a better compression, like .xz or .bz2? Open a feature request or I could do that if you find it reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:197,performance,time,time,197,"The documentation is pretty large (774 Mb) vs 166MB for the whole source (which, as I understand, includes all docs in docstrings, and more), though both are tar.gz. Maybe I'll download it another time. . Maybe it could use a better compression, like .xz or .bz2? Open a feature request or I could do that if you find it reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:86,testability,understand,understand,86,"The documentation is pretty large (774 Mb) vs 166MB for the whole source (which, as I understand, includes all docs in docstrings, and more), though both are tar.gz. Maybe I'll download it another time. . Maybe it could use a better compression, like .xz or .bz2? Open a feature request or I could do that if you find it reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:4,usability,document,documentation,4,"The documentation is pretty large (774 Mb) vs 166MB for the whole source (which, as I understand, includes all docs in docstrings, and more), though both are tar.gz. Maybe I'll download it another time. . Maybe it could use a better compression, like .xz or .bz2? Open a feature request or I could do that if you find it reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:95,integrability,repositor,repository,95,> the link from https://root.cern/doc/master/ is broken (which is already reported on the site repository). Which bug report is that? Which link is broken exactly? I found one that we can *improve* - https://github.com/root-project/root/pull/7307,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:95,interoperability,repositor,repository,95,> the link from https://root.cern/doc/master/ is broken (which is already reported on the site repository). Which bug report is that? Which link is broken exactly? I found one that we can *improve* - https://github.com/root-project/root/pull/7307,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:123,energy efficiency,reduc,reduce,123,"> Maybe it could use a better compression, like .xz or .bz2? That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:167,reliability,doe,doesn,167,"> Maybe it could use a better compression, like .xz or .bz2? That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:84,security,access,accessible,84,"> Maybe it could use a better compression, like .xz or .bz2? That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:104,usability,user,users,104,"> Maybe it could use a better compression, like .xz or .bz2? That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:310,usability,document,documentation,310,"> Maybe it could use a better compression, like .xz or .bz2? That will make it less accessible for some users, and it will reduce the file size by ~10%, not 50%. That doesn't seem like a worthwhile investment. The large size stems from the large amount of html-ified sources, mostly, as well as lots of actual documentation, and pictures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:251,deployability,version,versions,251,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:251,integrability,version,versions,251,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:251,modifiability,version,versions,251,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:189,usability,document,documentation,189,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:282,usability,guid,guides,282,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:299,usability,guid,guide,299,"> Which bug report is that? Which link is broken exactly? I found one that we can _improve_ - #7307. https://github.com/root-project/web/issues/510. The link ""You can find in the reference documentation page pointers to reference manuals for all ROOT versions."" is http://root.cern/guides/reference-guide, and it redirects to that same page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:285,availability,slo,slow,285,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:390,availability,slo,slow,390,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:258,energy efficiency,current,currently,258,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:138,interoperability,format,format,138,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:285,reliability,slo,slow,285,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:390,reliability,slo,slow,390,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:25,security,access,accessible,25,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:45,usability,user,users,45,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:366,usability,document,documentation,366,"> That will make it less accessible for some users. Maybe you are right that the benefit in size would be small. However, .xz is a modern format, and it offers a rather good compression. Maybe it could be offered together with .gz files. For example, for me currently the bandwidth is slow and precious, but it turns out that the generation of many notebooks in the documentation is pretty slow (already takes more than an hour, though I forgot about *-j* key to `make`). I see that there are many pictures generated, so probably you are right that it's not easy to compress these docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:68,deployability,version,version,68,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:619,deployability,contain,contained,619,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:95,energy efficiency,Current,Currently,95,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:68,integrability,version,version,68,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:68,modifiability,version,version,68,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:815,usability,user,user,815,"There is another possibility to decrease the size of file: create a version without tutorials. Currently during my incomplete generation I see that there are. > 399M	html. 6,6M	macros. 561M	notebooks. I don't use Jupyter notebooks, and I read ROOT tutorials directly from the source directory. I found how to disable their generation in the *Doxyfile*, but the archive size could be lowered as well. UPD: finally (it took 5 hours and 10 minutes on my laptop!) I produced all docs. Surprisingly, notebooks took less place than in the middle of the production before. > 3,7G	html. 7,7M	macros. 145M	notebooks. Maybe they contained some root files, which were deleted later. I can say that generation of tutorials was probably the longest, and in this case they may be better produced by developers rather than by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:22,availability,slo,slow,22,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:88,deployability,stack,stackoverflow,88,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:39,energy efficiency,optim,optimize,39,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:39,performance,optimiz,optimize,39,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:22,reliability,slo,slow,22,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:129,reliability,doe,does-doxygen-always-reprocess-every-file,129,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:68,safety,compl,complaints,68,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:68,security,compl,complaints,68,"I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still *could* be useful, at least partially. UPD: I opened a feature request for `doxygen`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:289,availability,down,download,289,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz. 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:346,interoperability,distribut,distributions,346,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz. 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:477,modifiability,paramet,parameter,477,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz. 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:18,usability,document,documentation,18,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz. 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:440,usability,usab,usability,440,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz. 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:23,usability,clear,clear,23,The following PR makes clear THTML is legacy code:. https://github.com/root-project/root/pull/7312,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:227,deployability,instal,installed,227,"> the latter is 240Mb (35%) less than the former. Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:127,modifiability,deco,decompressed,127,"> the latter is 240Mb (35%) less than the former. Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:168,reliability,doe,does,168,"> the latter is 240Mb (35%) less than the former. Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:216,usability,tool,tool,216,"> the latter is 240Mb (35%) less than the former. Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:24,availability,slo,slow,24,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:90,deployability,stack,stackoverflow,90,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:392,deployability,build,build,392,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:586,deployability,build,build,586,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:41,energy efficiency,optim,optimize,41,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:41,performance,optimiz,optimize,41,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:293,performance,time,time,293,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:24,reliability,slo,slow,24,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:131,reliability,doe,does-doxygen-always-reprocess-every-file,131,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:70,safety,compl,complaints,70,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:401,safety,compl,completely,401,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:70,security,compl,complaints,70,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:401,security,compl,completely,401,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:637,security,modif,modify,637,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:319,usability,document,documentation,319,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:532,usability,document,documentation,532,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:606,usability,guid,guide,606,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:655,usability,document,documentation,655,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially. > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:326,deployability,instal,install,326,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:992,energy efficiency,CPU,CPU,992,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:404,interoperability,format,format,404,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:882,interoperability,format,format,882,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:957,interoperability,format,formats,957,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1130,interoperability,format,formats,1130,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:58,modifiability,deco,decompressed,58,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:992,performance,CPU,CPU,992,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:996,performance,time,time,996,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:590,reliability,doe,does,590,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:759,safety,except,exceptions,759,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:316,usability,user,users,316,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:643,usability,user,users,643,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:979,usability,prefer,prefer,979,"Thanks for your work, @Axel-Naumann . . > can xz files be decompressed without pain on Windows. I also tried `gzip --best ` compression option, but the benefit is negligible (692 Mb vs 702 Mb, though `--best` still runs rather quickly). . When I used Windows years ago, there was no tar or gzip. So probably Windows users can install xz in the same way as them. In this article they say that the [native format on Windows is zip](https://itsfoss.com/tar-vs-zip-vs-gz/). In the table of comparison it's shown that zip + compression archive occupies almost the same space as tar + gz. . BTW: does anyone know what OS are most popular among ROOT users? During my work in collaborations in Italy and France, we almost exclusively used UNIX-like systems (the only exceptions could be some LabView programs, but I didn't use them and not sure). . However, I would not search for a ""best"" format for everyone; I think the best option would be just to have several formats for those who prefer them (CPU time vs bandwidth and other considerations). Ideally it could be written how large is each corresponding file (but those who know the formats would be able to guess anyway).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:150,deployability,build,build,150,"> I looked at your push request, which fixes this issue, this is rather nice, thank you. Thanks ! It uses the ""deprecated"" doxygen keyword which also build the list of all deprecated features. Does the PR I just pushed (7312) allows us to close this issue ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:193,reliability,Doe,Does,193,"> I looked at your push request, which fixes this issue, this is rather nice, thank you. Thanks ! It uses the ""deprecated"" doxygen keyword which also build the list of all deprecated features. Does the PR I just pushed (7312) allows us to close this issue ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:239,usability,close,close,239,"> I looked at your push request, which fixes this issue, this is rather nice, thank you. Thanks ! It uses the ""deprecated"" doxygen keyword which also build the list of all deprecated features. Does the PR I just pushed (7312) allows us to close this issue ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:104,usability,close,close,104,"If you're asking me, then I don't care about closing: this is how your internal accounting goes. Do you close it when you create a PR, or do you close it after that is accepted? I don't know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:145,usability,close,close,145,"If you're asking me, then I don't care about closing: this is how your internal accounting goes. Do you close it when you create a PR, or do you close it after that is accepted? I don't know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:46,usability,close,close,46,"If a PR seems to answers the question, yes we close...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:48,usability,close,close,48,"> If a PR seems to answers the question, yes we close... There was a question above to @bellenot . Maybe that should be copied to a separate issue now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:235,deployability,instal,installed,235,"> > the latter is 240Mb (35%) less than the former. > . > Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed? No idea, will have to try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:135,modifiability,deco,decompressed,135,"> > the latter is 240Mb (35%) less than the former. > . > Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed? No idea, will have to try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:176,reliability,doe,does,176,"> > the latter is 240Mb (35%) less than the former. > . > Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed? No idea, will have to try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:224,usability,tool,tool,224,"> > the latter is 240Mb (35%) less than the former. > . > Thanks for trying, @ynikitenko , much appreciated! @bellenot can xz files be decompressed without pain on Windows, or does tar.gz work out of the box, but xz needs a tool to be installed? No idea, will have to try",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:39,interoperability,format,format,39,It looks like 7-Zip supports the `.xz` format.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:20,usability,support,supports,20,It looks like 7-Zip supports the `.xz` format.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:49,usability,document,documentation,49,"Since THtml is now deprecated, as written in its documentation, I created a new issue for .xz archives. It seems no other issues were discussed here, so I close this one. Thanks to @couet and @Axel-Naumann for the fix and to everyone for the discussion!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:155,usability,close,close,155,"Since THtml is now deprecated, as written in its documentation, I created a new issue for .xz archives. It seems no other issues were discussed here, so I close this one. Thanks to @couet and @Axel-Naumann for the fix and to everyone for the discussion!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/pull/7297:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7301:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:53,safety,accid,accidentally,53,"@JohnYoon13, thank for working on this. Maybe the PR accidentally deleted files from `interpreter/llvm`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:208,deployability,build,build,208,"> @JohnYoon13, thank for working on this. Maybe the PR accidentally deleted files from `interpreter/llvm`? @vgvassilev I resubmitted a new PR #7306 that includes the llvm files, but still seem to come across build issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:55,safety,accid,accidentally,55,"> @JohnYoon13, thank for working on this. Maybe the PR accidentally deleted files from `interpreter/llvm`? @vgvassilev I resubmitted a new PR #7306 that includes the llvm files, but still seem to come across build issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/issues/7302:36,availability,operat,operator,36,Similar problem is in TGraph assign operator. I will provide a fix for both problems,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:25,usability,close,closed,25,@linev I guess it can be closed ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:11,deployability,automat,automatically,11,It will be automatically closed when PR is merged. I just waiting for Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:11,testability,automat,automatically,11,It will be automatically closed when PR is merged. I just waiting for Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:25,usability,close,closed,25,It will be automatically closed when PR is merged. I just waiting for Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7304:219,security,session,sessionviewer,219,"Indeed the whole ""gui"" documentation is not structured properly. Doxyfile has:. ../../gui/fitpanel/ \. ../../gui/ged/ \. ../../gui/gui/ \. ../../gui/guibuilder/ \. ../../gui/guihtml/ \. ../../gui/recorder/ \. ../../gui/sessionviewer/ \. ../../gui/webdisplay . May the be ""7"" part is missing .. I can restructure and propose a PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/issues/7304:23,usability,document,documentation,23,"Indeed the whole ""gui"" documentation is not structured properly. Doxyfile has:. ../../gui/fitpanel/ \. ../../gui/ged/ \. ../../gui/gui/ \. ../../gui/guibuilder/ \. ../../gui/guihtml/ \. ../../gui/recorder/ \. ../../gui/sessionviewer/ \. ../../gui/webdisplay . May the be ""7"" part is missing .. I can restructure and propose a PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/pull/7305:2261,availability,state,state,2261,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1745,energy efficiency,alloc,allocate,1745,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2488,energy efficiency,alloc,allocating,2488,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:200,integrability,Sub,Subroutines,200,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:336,integrability,rout,routine,336,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:351,integrability,sub,subroutine,351,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1085,integrability,translat,translation,1085,"jects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1269,integrability,pub,public,1269,"uld be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1473,integrability,rout,routine,1473,"C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1734,integrability,sub,subroutine,1734,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2261,integrability,state,state,2261,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2407,integrability,sub,subtroutine,2407,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2477,integrability,sub,subroutine,2477,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1085,interoperability,translat,translation,1085,"jects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1826,interoperability,standard,standard,1826,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2630,performance,memor,memory,2630,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:844,reliability,doe,doesn,844,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1069,reliability,doe,doesn,1069,"ext of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:118,security,session,sessions,118,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2619,security,access,access,2619,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:68,testability,context,context,68,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1097,testability,unit,unit,1097,"d interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1934,testability,understand,understand,1934,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:101,usability,interact,interactive,101,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:157,usability,learn,learning,157,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```. // my_subroutines.C. void my_subroutine(unique_ptr<TCanvas> &x) {. x.reset() // TCanvas requires the extra step, see note below. x.reset(new TCanvas());. // .. do something with it. }. ```. ```. //make_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1916,usability,learn,learn,1916,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2630,usability,memor,memory,2630,"_canvas.C. namespace root_global { . unique_ptr<TCanvas> c1;. }. void make_canvas() {. // we decide at the top level to use a global here:. my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice. unique_ptr<TCanvas> local_canvas;. my_subroutine(local_canvas);. }. ```. or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```. //display.h. class display {. private:. unique_ptr<TCanvas> c1;. public:. void make_canvas() {. c1.reset(); . c1.reset(new TCanvas());. }. };. ```. And use it like:. ```. //make_display.C. #include ""display.h"". namespace root_global { . display my_display;. }. // main routine:. void make_display() { . // This one will stick around. root_global::my_display.make_canvas();. // This one wont. . display local_display;. local_display.make_canvas();. }. ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:892,deployability,Build,Building,892,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:923,interoperability,standard,standard,923,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:249,reliability,doe,doesn,249,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:453,reliability,doe,does,453,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:43,safety,test,test,43,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:60,safety,test,test,60,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:75,safety,test,test,75,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:110,safety,test,test,110,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:150,safety,test,test,150,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:158,safety,test,test,158,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:173,safety,test,test,173,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:320,safety,test,test,320,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:360,safety,test,test,360,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:368,safety,test,test,368,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:383,safety,test,test,383,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:481,safety,test,test,481,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:518,safety,test,test,518,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:777,security,loss,loss,777,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:43,testability,test,test,43,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:60,testability,test,test,60,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:75,testability,test,test,75,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:110,testability,test,test,110,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:150,testability,test,test,150,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:158,testability,test,test,158,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:173,testability,test,test,173,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:320,testability,test,test,320,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:360,testability,test,test,360,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:368,testability,test,test,368,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:383,testability,test,test,383,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:481,testability,test,test,481,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:518,testability,test,test,518,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:261,usability,clarit,clarity,261,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:590,usability,document,documented,590,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:691,usability,clear,clear,691,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:950,usability,help,helpful,950,"Another minor related point:. ```. - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);. + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. I guess this gives us what, a TH1F*? (auto doesn't add clarity). Isn't it better to use the base class? ```. TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);. ```. assuming that works, or if not, this does:. ```. unique_ptr<TH1> test; . void the_routine () {. //... test.reset(new TH1F());. }. ```. This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:21,interoperability,compatib,compatible,21,"TCanvas is not fully compatible with unique_ptr reset in root 6 though. If you reset it to a TCanvas of the same name, garbage collection causes it to be double deleted. The solution is to first do an empty reset. I will edit the code snippet above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1001,availability,state,state,1001,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1297,availability,state,state,1297,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1799,deployability,scale,scale,1799,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:515,energy efficiency,alloc,allocate,515,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:855,energy efficiency,core,core,855,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1799,energy efficiency,scale,scale,1799,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:231,integrability,Sub,Subroutines,231,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:504,integrability,sub,subroutine,504,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1001,integrability,state,state,1001,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1297,integrability,state,state,1297,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1401,integrability,translat,translation,1401,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1472,integrability,translat,translation,1472,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:646,interoperability,standard,standard,646,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1401,interoperability,translat,translation,1401,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1472,interoperability,translat,translation,1472,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1799,modifiability,scal,scale,1799,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1799,performance,scale,scale,1799,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:588,reliability,doe,does,588,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1088,reliability,doe,does,1088,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1385,reliability,doe,doesn,1385,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1631,reliability,doe,does,1631,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1791,reliability,doe,doesn,1791,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:329,safety,test,test,329,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1446,safety,input,input,1446,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:202,testability,understand,understand,202,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:329,testability,test,test,329,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:470,testability,understand,understand,470,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:917,testability,understand,understand,917,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1413,testability,unit,unit,1413,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1484,testability,unit,unit,1484,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1446,usability,input,input,1446,"Thanks for your comments! See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain? I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean? > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case? > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how. ```. root [0] int i = 23l. root [1] int j = ++i;. ```. works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code. ```. namespace root_global { . display my_display;. }. ```. anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:572,availability,sli,sliced,572,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2051,availability,state,statement,2051,"my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5134,availability,state,statements,5134,"ead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6383,availability,down,downside,6383,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:854,deployability,version,version,854,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:873,deployability,version,version,873,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2341,deployability,version,version,2341,"_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2379,deployability,version,version,2379,".. #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3821,deployability,scale,scaled,3821,"got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as reques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4423,deployability,depend,depending,4423,"s better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4742,deployability,version,version,4742,"or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4858,deployability,contain,container,4858,"R. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't kno",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5189,deployability,version,version,5189,"you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1958,energy efficiency,model,model,1958," can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3286,energy efficiency,model,model,3286,"ntation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: mig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3821,energy efficiency,scale,scaled,3821,"got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as reques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4659,energy efficiency,model,models,4659,"nilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:519,integrability,interfac,interfaces,519,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:843,integrability,sub,subroutine,843,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:854,integrability,version,version,854,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:873,integrability,version,version,873,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2051,integrability,state,statement,2051,"my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2098,integrability,batch,batch,2098,"); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2341,integrability,version,version,2341,"_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2379,integrability,version,version,2379,".. #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3262,integrability,interfac,interface,3262,"the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4070,integrability,interfac,interface,4070,"outine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4376,integrability,batch,batch,4376,".5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4423,integrability,depend,depending,4423,"s better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4742,integrability,version,version,4742,"or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5134,integrability,state,statements,5134,"ead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5189,integrability,version,version,5189,"you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5491,integrability,rout,routine,5491,"ly happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5589,integrability,rout,routine,5589,"a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. exa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6173,integrability,rout,routine,6173," C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6613,integrability,sub,subroutine,6613,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:7077,integrability,sub,subroutine,7077,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:519,interoperability,interfac,interfaces,519,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3262,interoperability,interfac,interface,3262,"the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4070,interoperability,interfac,interface,4070,"outine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5789,interoperability,share,shared,5789,"are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:519,modifiability,interfac,interfaces,519,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:854,modifiability,version,version,854,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:873,modifiability,version,version,873,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2341,modifiability,version,version,2341,"_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2379,modifiability,version,version,2379,".. #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3262,modifiability,interfac,interface,3262,"the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3801,modifiability,scal,scalable,3801,"at's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped on",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3821,modifiability,scal,scaled,3821,"got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as reques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3987,modifiability,scal,scalable,3987,"pp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only bec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4070,modifiability,interfac,interface,4070,"outine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4106,modifiability,maintain,maintain,4106,"w TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4423,modifiability,depend,depending,4423,"s better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4742,modifiability,version,version,4742,"or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5189,modifiability,version,version,5189,"you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2098,performance,batch,batch,2098,"); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2133,performance,time,times,2133,"r in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do somet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2184,performance,time,time,2184,"hing with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick tempo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3801,performance,scalab,scalable,3801,"at's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped on",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3821,performance,scale,scaled,3821,"got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as reques",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3987,performance,scalab,scalable,3987,"pp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only bec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4376,performance,batch,batch,4376,".5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4709,performance,memor,memory,4709,"nt is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5241,performance,parallel,parallel,5241,"assed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5816,performance,perform,perform,5816,"quested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:572,reliability,sli,sliced,572,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5941,reliability,doe,does,5941,"all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1132,safety,safe,safer,1132," the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 ti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3158,safety,except,except,3158,"displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4106,safety,maintain,maintain,4106,"w TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4423,safety,depend,depending,4423,"s better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5760,safety,reme,remember,5760,"tance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6481,safety,compl,complied,6481,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6729,safety,safe,safer,6729,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:534,security,ident,identical,534,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1740,security,control,control,1740," cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things vis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1958,security,model,model,1958," can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2257,security,modif,modifying,2257,"/ one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2873,security,access,access,2873,"dif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3286,security,model,model,3286,"ntation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: mig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4030,security,modif,modify,4030,"> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4659,security,model,models,4659,"nilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:6481,security,compl,complied,6481,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1740,testability,control,control,1740," cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things vis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4423,testability,depend,depending,4423,"s better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:79,usability,learn,learn,79,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:272,usability,learn,learned,272,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:463,usability,learn,learned,463,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:635,usability,prefer,prefer,635,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters. . Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super! b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1549,usability,interact,interactive,1549,"ruction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1561,usability,user,user,1561,"(nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: . ```cpp. //my_subtrounes.C. // my_subroutines.C. void my_subroutine(shared_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the exte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:2140,usability,paus,pauses,2140,"neral. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. #include <ROOT/RDirectory.hxx> // one extra line ;). #ifdef __CINT__. // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here... #endif. void make_th1() {. shared_ptr<TH1> x,y,z;. my_subroutine(x);. my_subroutine(y);. my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:. #ifdef __CINT__ // I wouldn't leave the globals in compiled code. . RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control. RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;). RDirectory::Heap().Add(""test3"",z); // . #endif. }. ```. I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3245,usability,command,command,3245,"ut even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3543,usability,document,documenting,3543,"needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:3599,usability,document,documenting,3599,"nd in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this . example2: . ```cpp. {. // my_subroutines.C. unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {. x.reset(); . x.reset(new TH1F());. // .. do something with it. }. ```. except for maybe quick temporary scripts. So we have about 2.5 issues. . 1) The global command,. 2) the interface and ownership model, and. 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:4709,usability,memor,memory,4709,"nt is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:5816,usability,perform,perform,5816,"quested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:7049,usability,user,user,7049,"l loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: . ```cpp. //subroutine.C. // my_subroutines.C. void my_subroutine(unique_ptr<TH1> &x) {. x.reset(); // not needed for TH1F, but safer in general. x.reset(new TH1F());. // .. do something with it. }. ```. ```cpp. //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here. vector<unique_ptr<TH1>> retvec(3); // and here, as intended. for (int i=0; i<3; i++) {. my_subroutine(retvec[i]);. }. return retvec;. }. ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:54,safety,safe,safe,54,"As a bonus I think my code is more potentially thread safe. It's not something I'm real expert on, but it looks pretty thread safe. It's dealing with whatever it's handed, not overwriting the same global.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:126,safety,safe,safe,126,"As a bonus I think my code is more potentially thread safe. It's not something I'm real expert on, but it looks pretty thread safe. It's dealing with whatever it's handed, not overwriting the same global.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:30,deployability,depend,depending,30,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:30,integrability,depend,depending,30,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:30,modifiability,depend,depending,30,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:30,safety,depend,depending,30,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:30,testability,depend,depending,30,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:338,usability,user,user,338,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:628,availability,down,down,628,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:559,deployability,stack,stack-based,559,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:580,deployability,manag,management,580,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:649,deployability,configurat,configuration,649,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:885,deployability,contain,contain,885,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1377,deployability,contain,contained,1377,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:580,energy efficiency,manag,management,580,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:649,integrability,configur,configuration,649,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1044,integrability,rout,routine,1044,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1089,integrability,sub,subroutine,1089,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1208,integrability,rout,routine,1208,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1140,interoperability,share,shared,1140,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:649,modifiability,configur,configuration,649,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:972,modifiability,scal,scalability,972,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:993,modifiability,variab,variable,993,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:972,performance,scalab,scalability,972,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1015,performance,time,time,1015,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:283,safety,prevent,prevents,283,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:384,safety,prevent,prevent,384,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:580,safety,manag,management,580,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:668,safety,avoid,avoids,668,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:283,security,preven,prevents,283,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:384,security,preven,prevent,384,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:649,security,configur,configuration,649,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:529,testability,understand,understand,529,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:594,testability,simpl,simple,594,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:122,usability,user,user,122,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:594,usability,simpl,simple,594,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:602,usability,intuit,intuitive,602,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7305:1290,usability,interact,interactive,1290,". > The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7305
https://github.com/root-project/root/pull/7306:0,usability,Close,Closed,0,Closed PR #7301 in favor of this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7306
https://github.com/root-project/root/pull/7307:105,usability,close,close,105,I think Enrico is doing the same here: https://github.com/root-project/root/pull/7334. So I think we can close that one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7307
https://github.com/root-project/root/pull/7307:0,usability,Close,Closed,0,Closed the other one! There were some comments that you might or might not want to address here: https://github.com/root-project/root/pull/7334#issuecomment-789011675,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7307
https://github.com/root-project/root/issues/7308:489,deployability,API,API,489,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:261,energy efficiency,current,current,261,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:658,energy efficiency,current,current,658,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:142,integrability,contract,contracts,142,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:489,integrability,API,API,489,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:666,integrability,interfac,interface,666,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:142,interoperability,contract,contracts,142,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:489,interoperability,API,API,489,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:666,interoperability,interfac,interface,666,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:714,interoperability,incompatib,incompatibility,714,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:92,modifiability,inherit,inheritance,92,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:161,modifiability,inherit,inheritance,161,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:647,modifiability,evolv,evolve,647,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:666,modifiability,interfac,interface,666,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:73,reliability,doe,doesn,73,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:122,reliability,doe,does,122,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:630,reliability,pra,practical,630,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:693,security,sign,significant,693,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:147,integrability,pub,publication,147,"I see, thanks. It's reported that ROOT 7 will come ""in following years"", https://root.cern/for_developers/root7/, but I can't see the date of that publication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:64,integrability,interfac,interfaces,64,"Anyway it would be good to add deprecation warnings to existing interfaces. Close this issue when you feel appropriate, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:64,interoperability,interfac,interfaces,64,"Anyway it would be good to add deprecation warnings to existing interfaces. Close this issue when you feel appropriate, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:64,modifiability,interfac,interfaces,64,"Anyway it would be good to add deprecation warnings to existing interfaces. Close this issue when you feel appropriate, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:76,usability,Close,Close,76,"Anyway it would be good to add deprecation warnings to existing interfaces. Close this issue when you feel appropriate, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7311:2019,availability,operat,operator,2019,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:59,deployability,configurat,configuration,59,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:114,deployability,build,build,114,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:220,deployability,build,build,220,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:326,deployability,build,build,326,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:432,deployability,build,build,432,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:538,deployability,build,build,538,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:644,deployability,build,build,644,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:750,deployability,build,build,750,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:856,deployability,build,build,856,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:962,deployability,build,build,962,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1068,deployability,build,build,1068,n time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1174,deployability,build,build,1174,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1280,deployability,build,build,1280,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1386,deployability,build,build,1386,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1492,deployability,build,build,1492,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1598,deployability,build,build,1598,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1704,deployability,build,build,1704,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1818,deployability,build,build,1818,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1887,deployability,build,build-foo,1887,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1950,deployability,build,build,1950,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:2064,deployability,build,build-foo,2064,nix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/ROOT/root: binary operator expected. mv: target 'sources/cmake-build-foo/ginclude/compiledata.h' is not a directory. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:59,integrability,configur,configuration,59,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:59,modifiability,configur,configuration,59,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:73,performance,time,time,73,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:59,security,configur,configuration,59,"This is still an issue, there are some problems already at configuration time:. ```. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect. Running /home/blue/ROOT/root sources/build/unix/compiledata.sh. Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h. /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:729,availability,Error,Error,729,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:943,availability,Error,Error,943,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1057,availability,Error,Error,1057,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:91,deployability,fail,fails,91,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:103,deployability,build,build,103,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:146,deployability,modul,module,146,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:153,deployability,modul,modulemap,153,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:217,deployability,build,build,217,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:228,deployability,modul,module,228,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:235,deployability,modul,modulemap,235,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:281,deployability,build,build-foo,281,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:299,deployability,modul,module,299,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:306,deployability,modul,modulemap,306,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:358,deployability,build,build-foo,358,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:376,deployability,modul,module,376,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:383,deployability,modul,modulemap,383,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:439,deployability,build,build-foo,439,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:457,deployability,modul,module,457,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:464,deployability,modul,modulemap,464,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:494,deployability,build,build-foo,494,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:512,deployability,modul,module,512,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:519,deployability,modul,modulemap,519,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:582,deployability,build,build-foo,582,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:600,deployability,modul,module,600,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:607,deployability,modul,modulemap,607,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:688,deployability,build,build,688,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:711,deployability,modul,module,711,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:718,deployability,modul,modulemap,718,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:774,deployability,modul,module,774,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:781,deployability,modul,modulemap,781,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:856,deployability,build,build-foo,856,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1015,deployability,build,build-foo,1015,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:146,modifiability,modul,module,146,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:153,modifiability,modul,modulemap,153,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:228,modifiability,modul,module,228,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:235,modifiability,modul,modulemap,235,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:299,modifiability,modul,module,299,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:306,modifiability,modul,modulemap,306,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:376,modifiability,modul,module,376,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:383,modifiability,modul,modulemap,383,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:457,modifiability,modul,module,457,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:464,modifiability,modul,modulemap,464,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:512,modifiability,modul,module,512,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:519,modifiability,modul,modulemap,519,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:600,modifiability,modul,module,600,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:607,modifiability,modul,modulemap,607,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:711,modifiability,modul,module,711,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:718,modifiability,modul,modulemap,718,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:774,modifiability,modul,module,774,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:781,modifiability,modul,modulemap,781,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:109,performance,time,time,109,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:729,performance,Error,Error,729,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:943,performance,Error,Error,943,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1057,performance,Error,Error,1057,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:91,reliability,fail,fails,91,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:146,safety,modul,module,146,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:153,safety,modul,modulemap,153,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:228,safety,modul,module,228,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:235,safety,modul,modulemap,235,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:299,safety,modul,module,299,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:306,safety,modul,modulemap,306,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:376,safety,modul,module,376,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:383,safety,modul,modulemap,383,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:457,safety,modul,module,457,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:464,safety,modul,modulemap,464,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:512,safety,modul,module,512,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:519,safety,modul,modulemap,519,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:600,safety,modul,module,600,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:607,safety,modul,modulemap,607,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:711,safety,modul,module,711,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:718,safety,modul,modulemap,718,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:729,safety,Error,Error,729,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:774,safety,modul,module,774,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:781,safety,modul,modulemap,781,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:943,safety,Error,Error,943,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1057,safety,Error,Error,1057,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:729,usability,Error,Error,729,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:943,usability,Error,Error,943,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:1057,usability,Error,Error,1057,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```. [ 0%] Generating include/module.modulemap. /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap. cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap. cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory. cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory. make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1. make[2]: *** Deleting file 'include/module.modulemap'. make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2. make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'. make: *** [Makefile:156: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:41,availability,error,error,41,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:41,performance,error,error,41,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:41,safety,error,error,41,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:41,usability,error,error,41,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/pull/7314:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:123,reliability,doe,does,123,"I like the approach! This can immediately be generalised to other functions that take RooFit command arguments. @etejedor, does this fit well into PyROOT like this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:93,usability,command,command,93,"I like the approach! This can immediately be generalised to other functions that take RooFit command arguments. @etejedor, does this fit well into PyROOT like this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:89,performance,time,timeout,89,@hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:81,safety,prevent,prevent,81,@hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:89,safety,timeout,timeout,89,@hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:81,security,preven,prevent,81,@hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:91,performance,time,timeout,91,"> @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! All right, did that. What's the problem with the Windows nodes, if I may ask?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:83,safety,prevent,prevent,83,"> @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! All right, did that. What's the problem with the Windows nodes, if I may ask?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:91,safety,timeout,timeout,91,"> @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! All right, did that. What's the problem with the Windows nodes, if I may ask?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:83,security,preven,prevent,83,"> @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! All right, did that. What's the problem with the Windows nodes, if I may ask?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:93,performance,time,timeout,93,"> > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > . > All right, did that. What's the problem with the Windows nodes, if I may ask? Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:85,safety,prevent,prevent,85,"> > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > . > All right, did that. What's the problem with the Windows nodes, if I may ask? Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:93,safety,timeout,timeout,93,"> > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > . > All right, did that. What's the problem with the Windows nodes, if I may ask? Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:85,security,preven,prevent,85,"> > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > . > All right, did that. What's the problem with the Windows nodes, if I may ask? Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:95,performance,time,timeout,95,"> > > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > > . > > . > > All right, did that. What's the problem with the Windows nodes, if I may ask? > . > Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins). I see, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:87,safety,prevent,prevent,87,"> > > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > > . > > . > > All right, did that. What's the problem with the Windows nodes, if I may ask? > . > Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins). I see, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:95,safety,timeout,timeout,95,"> > > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > > . > > . > > All right, did that. What's the problem with the Windows nodes, if I may ask? > . > Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins). I see, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:87,security,preven,prevent,87,"> > > @hcmidt please fork also [roottest](https://github.com/root-project/roottest) to prevent timeout on the Windows nodes. Thanks! > > . > > . > > All right, did that. What's the problem with the Windows nodes, if I may ask? > . > Git tries to checkout `roottest` and waits forever (until it gets killed by Jenkins). I see, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:352,integrability,sub,subdirectories,352,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:324,modifiability,concern,concerned,324,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:288,safety,test,tests,288,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:421,safety,test,test,421,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:288,testability,test,tests,288,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:324,testability,concern,concerned,324,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:421,testability,test,test,421,"Hi @hcmidt, thanks a lot for the PR! The approach looks good to me. @etejedor is on leave at the moment, so I don't think we can expect him to comment here. I'll try to find someone else tomorrow who can tell us if this is the good approach and what we should do with capitalization. The tests look correct for me, I'm more concerned that there are no subdirectories for RooFit in the pythonization and the pythonization test directory. Looks like it might get messy really quick! That's also something I want to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:3091,deployability,continu,continue,3091,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:786,integrability,sub,subdirectory,786,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:962,integrability,pub,public,962,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:970,integrability,interfac,interface,970,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1996,integrability,interfac,interface,1996,"eed to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2047,integrability,interfac,interface,2047,"directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:970,interoperability,interfac,interface,970,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1996,interoperability,interfac,interface,1996,"eed to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2047,interoperability,interfac,interface,2047,"directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2167,interoperability,bind,bindings,2167,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2959,interoperability,bind,bindings,2959,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:356,modifiability,paramet,parameter,356,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:468,modifiability,exten,extend,468,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:970,modifiability,interfac,interface,970,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1996,modifiability,interfac,interface,1996,"eed to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2047,modifiability,interfac,interface,2047,"directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2167,modifiability,bind,bindings,2167,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2959,modifiability,bind,bindings,2959,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1831,reliability,doe,does,1831,"on` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have su",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:480,safety,test,test,480,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:668,safety,test,test,668,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:710,safety,test,test,710,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:480,testability,test,test,480,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:668,testability,test,test,668,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:710,testability,test,test,710,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:318,usability,document,documentation,318,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:427,usability,document,documentation,427,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1253,usability,help,helper,1253,"s pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful. 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`. 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular. 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2273,usability,document,documentation,2273,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2476,usability,interact,interactive,2476,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2557,usability,document,documentation,2557,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:2690,usability,document,documentation,2690,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:3061,usability,help,helpful,3061,"hat to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rdataframe.py#L28)). I hope these ideas are helpful to you if you want to continue with these pythonizations! Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:142,deployability,continu,continue,142,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:395,deployability,stage,stage,395,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:59,performance,time,time,59,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:298,performance,time,time,298,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:234,usability,prefer,prefer,234,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:306,usability,progress,progress,306,"Hi Jonas,. I was a bit busy these days, but now I had some time to push the smaller changes 1-4. Thanks also for the many suggestions! I will continue working on #7217 and keep these things in mind to see what pattern emerges. If you prefer we can leave this pull request open until I have had the time to progress on some of these points. But probably it is best to finish this one off at this stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:29,deployability,updat,update,29,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:29,safety,updat,update,29,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:50,safety,test,tested,50,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:29,security,updat,update,29,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:50,testability,test,tested,50,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:20,availability,failur,failure,20,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:20,deployability,fail,failure,20,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:103,energy efficiency,reduc,reducing,103,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:20,performance,failur,failure,20,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:20,reliability,fail,failure,20,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:15,safety,test,test,15,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:90,safety,hot,hotfix,90,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:15,testability,test,test,15,Regarding that test failure: I think this is due to #7395. @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:67,availability,error,errors,67,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:142,interoperability,compatib,compatible,142,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:67,performance,error,errors,67,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:298,reliability,doe,doesn,298,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:67,safety,error,errors,67,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:23,usability,confirm,confirming,23,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:67,usability,error,errors,67,"Hi Stephan, thanks for confirming this! Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:. ```Python. return self._OriginalFitTo(*args, *sargs). ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this? ```Python. sargs = tuple(__getter(k, v) for k, v in kwargs.items()). return self._OriginalFitTo(*(args + sargs)). ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:166,deployability,fail,failing,166,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:40,interoperability,compatib,compatibility,40,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:166,reliability,fail,failing,166,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:174,safety,test,tests,174,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:225,safety,test,test,225,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:137,security,access,access,137,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:174,testability,test,tests,174,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:225,testability,test,test,225,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:172,deployability,fail,failing,172,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:42,interoperability,compatib,compatibility,42,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:360,performance,multi-thread,multi-threaded,360,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:172,reliability,fail,failing,172,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:180,safety,test,tests,180,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:231,safety,test,test,231,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:143,security,access,access,143,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:180,testability,test,tests,180,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:231,testability,test,test,231,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > . > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:33,deployability,fail,failed,33,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:33,reliability,fail,failed,33,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:22,safety,test,tests,22,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:142,safety,test,test,142,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:22,testability,test,tests,22,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:142,testability,test,test,142,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:172,deployability,fail,failing,172,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:44,interoperability,compatib,compatibility,44,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:366,performance,multi-thread,multi-threaded,366,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:172,reliability,fail,failing,172,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:180,safety,test,tests,180,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:231,safety,test,test,231,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:143,security,access,access,143,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:180,testability,test,tests,180,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:231,testability,test,test,231,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned? > . > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:0,energy efficiency,Cool,Cool,0,"Cool, see you for the next one then!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:214,deployability,modul,module,214,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:428,deployability,modul,module,428,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:509,deployability,modul,modular,509,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1163,deployability,modul,module,1163,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1206,deployability,modul,modules,1206,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:296,energy efficiency,current,current,296,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1133,energy efficiency,current,current,1133,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:115,integrability,sub,subdirectory,115,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:509,integrability,modular,modular,509,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:553,integrability,coupl,couple,553,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:687,interoperability,bind,bindings,687,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:842,interoperability,bind,bindings,842,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:214,modifiability,modul,module,214,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:428,modifiability,modul,module,428,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:509,modifiability,modul,modular,509,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:553,modifiability,coupl,couple,553,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:687,modifiability,bind,bindings,687,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:842,modifiability,bind,bindings,842,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1163,modifiability,modul,module,1163,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1206,modifiability,modul,modules,1206,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:214,safety,modul,module,214,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:428,safety,modul,module,428,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:509,safety,modul,modular,509,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1163,safety,modul,module,1163,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:1206,safety,modul,modules,1206,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:509,testability,modula,modular,509,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:553,testability,coupl,couple,553,"@guitargeek @hageboeck jumping in now... About the new structure of Roofit pythonizations: you created a `_roofit` subdirectory where you'll place Roofit pythonizations (this is fine), but you have a single Python module with a single pythonizor function (`pythonize_roofit`) which checks if the current class being pythonized is `RooAbsReal` or `RooAbsPdf`. This breaks the general convention of pythonizations, which says one module with one pythonizor function per class. The reason for this is to be more modular. Notice that you also left behind a couple of pythonizations for Roofit that already existed, one for [RooAbsCollection](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py) and one for [RooWorkspace](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooworkspace.py). These two belong in the new `_roofit` directory. So I'm ok with putting all the Roofit pythonizations together in `_roofit`, but the two pythonizations mentioned above need to be put there too and I would split the current generic pythonization module `_roofit/_roopythonize.py` into two modules, one with a pythonizor for `RooAbsReal` and another one for `RooAbsPdf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:96,safety,review,reviewing,96,And thanks a lot @hcmidt for contributing this pythonization and @guitargeek and @hageboeck for reviewing it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:96,testability,review,reviewing,96,And thanks a lot @hcmidt for contributing this pythonization and @guitargeek and @hageboeck for reviewing it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:219,deployability,modul,modules,219,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:696,deployability,modul,module,696,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:85,interoperability,bind,bindings,85,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:367,interoperability,bind,bindings,367,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:483,interoperability,bind,bindings,483,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:596,interoperability,bind,bindings,596,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:85,modifiability,bind,bindings,85,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:219,modifiability,modul,modules,219,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:367,modifiability,bind,bindings,367,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:483,modifiability,bind,bindings,483,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:596,modifiability,bind,bindings,596,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:696,modifiability,modul,module,696,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:22,safety,test,tests,22,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:116,safety,test,test,116,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:175,safety,test,tests,175,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:213,safety,test,tests,213,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:219,safety,modul,modules,219,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:261,safety,test,test,261,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:398,safety,test,test,398,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:514,safety,test,test,514,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:627,safety,test,test,627,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:691,safety,test,test,691,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:696,safety,modul,module,696,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:785,safety,test,test,785,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:22,testability,test,tests,22,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:116,testability,test,test,116,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:175,testability,test,tests,175,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:213,testability,test,tests,213,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:261,testability,test,test,261,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:398,testability,test,test,398,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:514,testability,test,test,514,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:627,testability,test,test,627,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:691,testability,test,test,691,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:785,testability,test,test,785,"Now had a look at the tests, [this](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test/roofit) looks perfectly fine (new `roofit` folder for tests of Roofit pythonizations, where tests modules are named `class_pythonization-to-test.py`). Good! Now, we need to bring there also [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py), [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooworkspace.py) and [this](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py). Actually, now I realize that the test module `rooworkspace.py` should be renamed to `rooworkspace_import.py` (and its internal test class `RooWorkspace_test` should be `RooWorkspaceImport`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7317:282,availability,error,errors,282,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:303,availability,consist,consistent,303,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:522,deployability,depend,depending,522,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:134,integrability,interfac,interfaces,134,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:522,integrability,depend,depending,522,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:134,interoperability,interfac,interfaces,134,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:97,modifiability,interm,intermediate,97,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:134,modifiability,interfac,interfaces,134,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:522,modifiability,depend,depending,522,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:282,performance,error,errors,282,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:361,performance,time,times,361,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:282,safety,error,errors,282,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:522,safety,depend,depending,522,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:522,testability,depend,depending,522,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:30,usability,support,support,30,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:224,usability,user,users,224,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:282,usability,error,errors,282,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:303,usability,consist,consistent,303,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:731,usability,help,helper,731,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent. - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default. - Weight errors are even less consistent. - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job. - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor. - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7322:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7324:48,integrability,messag,message,48,@bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:48,interoperability,messag,message,48,@bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:90,safety,reme,remember,90,@bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:50,integrability,messag,message,50,> @bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason). Done (the new PyROOT was not supported on Windows). Thanks @oshadura .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:50,interoperability,messag,message,50,> @bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason). Done (the new PyROOT was not supported on Windows). Thanks @oshadura .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:92,safety,reme,remember,92,> @bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason). Done (the new PyROOT was not supported on Windows). Thanks @oshadura .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7324:139,usability,support,supported,139,> @bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason). Done (the new PyROOT was not supported on Windows). Thanks @oshadura .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7324
https://github.com/root-project/root/pull/7325:271,interoperability,prox,proxies,271,"Hi @hageboeck, thank you very much for taking the time to write up what's going on with the (non-)type-safety in RooFit! This will be a helpful reference and I see that it was naive to think I could assume that ""if it compiles it is correct"". I will migrate the relevant proxies to this PR when I have time to do that. Until then I put this PR in WIP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:50,performance,time,time,50,"Hi @hageboeck, thank you very much for taking the time to write up what's going on with the (non-)type-safety in RooFit! This will be a helpful reference and I see that it was naive to think I could assume that ""if it compiles it is correct"". I will migrate the relevant proxies to this PR when I have time to do that. Until then I put this PR in WIP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:302,performance,time,time,302,"Hi @hageboeck, thank you very much for taking the time to write up what's going on with the (non-)type-safety in RooFit! This will be a helpful reference and I see that it was naive to think I could assume that ""if it compiles it is correct"". I will migrate the relevant proxies to this PR when I have time to do that. Until then I put this PR in WIP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:103,safety,safe,safety,103,"Hi @hageboeck, thank you very much for taking the time to write up what's going on with the (non-)type-safety in RooFit! This will be a helpful reference and I see that it was naive to think I could assume that ""if it compiles it is correct"". I will migrate the relevant proxies to this PR when I have time to do that. Until then I put this PR in WIP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:136,usability,help,helpful,136,"Hi @hageboeck, thank you very much for taking the time to write up what's going on with the (non-)type-safety in RooFit! This will be a helpful reference and I see that it was naive to think I could assume that ""if it compiles it is correct"". I will migrate the relevant proxies to this PR when I have time to do that. Until then I put this PR in WIP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:73,performance,time,time,73,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:100,performance,time,time,100,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:116,performance,time,time,116,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:164,performance,time,time,164,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:121,safety,safe,safety,121,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:51,usability,close,close,51,"Thanks again Stephan for your explanations! I will close this PR for the time being since I have no time to work on time safety at the moment, but I hope I'll have time to come back to this and reopen the PR in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7328:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/issues/7332:494,safety,except,exception,494,"@lmoneta It would also be nice to use `_chg_truncated` functions to change the range of the sampled numbers without reinitializing the generator. Since there is separate function for each method (fortunately with the same argument list), it seems reasonable to have a function pointer stored in TUnuran, that would be initialized to appropriate function based on the method chosen. For ""auto"" or methods that have no such capability it would have to be initialized to a function that throws an exception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:85,deployability,API,API,85,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:567,deployability,build,build,567,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:605,deployability,API,API,605,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:85,integrability,API,API,85,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:605,integrability,API,API,605,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:85,interoperability,API,API,85,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:605,interoperability,API,API,605,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:30,modifiability,paramet,parameters,30,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:422,modifiability,paramet,parameters,422,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:123,usability,clear,clearly,123,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:131,usability,document,documented,131,"@lmoneta Regarding the method parameters, it is fine to pass them through the string API. The point is that this should be clearly documented in `TUnuran` doxygen and for the `TUnuranSampler` doxy it should be mentioned and redirected to `TUnuran` doxy. Right now the information is hidden in tutorials and the code. I am not sure if there is an elegant way to add methods to `TUnuranSampler`/`TUnuran` that would set the parameters. Maybe something like. ```. SetParameter(const TString& name). SetParameter(const TString& name, const double value). ```. that would build the string passed to the string API when `Init()` is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:587,deployability,API,API,587,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:639,deployability,build,build,639,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:587,integrability,API,API,587,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:609,integrability,interfac,interface,609,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:552,interoperability,specif,specific,552,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:587,interoperability,API,API,587,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:609,interoperability,interfac,interface,609,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:561,modifiability,paramet,parameters,561,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:609,modifiability,interfac,interface,609,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:765,modifiability,paramet,parameters,765,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:354,usability,Support,Support,354,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:473,usability,support,support,473,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:520,usability,Document,Documentation,520,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf. 2. Set multidimensional mode `SetMode(const double* mode)`. 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler). 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:517,safety,review,review,517,"@lmoneta Actually out of the above the most pressing is `SetMode(const double* mode)`, because this is the only one for which I don't have a workaround (I need to use `DistSampler` not `TUnuran` in the respective code). I can provide a pull request with mode data member being a `std::vector<double>` and `SetMode(const double mode)` setting a single entry and both 1D and ND setters clearing any previous entries. Should I provide the PR or do you prefer to implement it yourself (I guess this is faster than actual review of the PR and merging)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:517,testability,review,review,517,"@lmoneta Actually out of the above the most pressing is `SetMode(const double* mode)`, because this is the only one for which I don't have a workaround (I need to use `DistSampler` not `TUnuran` in the respective code). I can provide a pull request with mode data member being a `std::vector<double>` and `SetMode(const double mode)` setting a single entry and both 1D and ND setters clearing any previous entries. Should I provide the PR or do you prefer to implement it yourself (I guess this is faster than actual review of the PR and merging)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:384,usability,clear,clearing,384,"@lmoneta Actually out of the above the most pressing is `SetMode(const double* mode)`, because this is the only one for which I don't have a workaround (I need to use `DistSampler` not `TUnuran` in the respective code). I can provide a pull request with mode data member being a `std::vector<double>` and `SetMode(const double mode)` setting a single entry and both 1D and ND setters clearing any previous entries. Should I provide the PR or do you prefer to implement it yourself (I guess this is faster than actual review of the PR and merging)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:449,usability,prefer,prefer,449,"@lmoneta Actually out of the above the most pressing is `SetMode(const double* mode)`, because this is the only one for which I don't have a workaround (I need to use `DistSampler` not `TUnuran` in the respective code). I can provide a pull request with mode data member being a `std::vector<double>` and `SetMode(const double mode)` setting a single entry and both 1D and ND setters clearing any previous entries. Should I provide the PR or do you prefer to implement it yourself (I guess this is faster than actual review of the PR and merging)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:18,usability,feedback,feedback,18,Thank you for the feedback. I 'll try to implement something in the next days and open a PR. If you then could have a look will be great. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:90,usability,support,support,90,"@AntoniMarcinek I have made a PR implementing the functionality you requested. . Only the support for `_chg_truncated`, but it is not clear to me exactly what is it and what is your use case for this . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:134,usability,clear,clear,134,"@AntoniMarcinek I have made a PR implementing the functionality you requested. . Only the support for `_chg_truncated`, but it is not clear to me exactly what is it and what is your use case for this . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:43,deployability,modul,modulo,43,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:43,modifiability,modul,modulo,43,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:142,reliability,doe,does,142,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:11,safety,review,reviewed,11,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:43,safety,modul,modulo,43,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:11,testability,review,reviewed,11,"@lmoneta I reviewed the PR, it looks great modulo some issues I mentioned in comments. Thank you! One thing which is not important to me, but does come to my mind is that dPDF and CDF seem to be settable only in 1D case. I think the multivariate methods of Unuran do accept gradients (dPDF?). So maybe you can consider adding this as well, but this is not my use case. I will write about `_chg_truncated` later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:640,deployability,depend,depends,640,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:381,integrability,sub,sub-range,381,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:640,integrability,depend,depends,640,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:682,integrability,event,event,682,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:128,modifiability,variab,variables,128,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:640,modifiability,depend,depends,640,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:791,performance,perform,performance,791,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:706,reliability,doe,does,706,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:640,safety,depend,depends,640,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:640,testability,depend,depends,640,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:433,usability,support,support,433,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:791,usability,perform,performance,791,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:117,interoperability,specif,specific,117,"@AntoniMarcinek : Thanks for the explanations of the _chg_truncated functions. I will see if I can use them for some specific methods. I need to investigate what will be the best way of doing it, since these functions do not exist at a general level, but only at the specific method level.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:267,interoperability,specif,specific,267,"@AntoniMarcinek : Thanks for the explanations of the _chg_truncated functions. I will see if I can use them for some specific methods. I need to investigate what will be the best way of doing it, since these functions do not exist at a general level, but only at the specific method level.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/pull/7334:251,safety,compl,complaints,251,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:251,security,compl,complaints,251,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:63,usability,feedback,feedback,63,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:198,usability,close,closed,198,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:292,usability,clear,clear,292,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:323,usability,close,closed,323,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,deployability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:274,deployability,releas,releases,274,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:115,integrability,sub,submit,115,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,integrability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,interoperability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,modifiability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,reliability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,security,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:85,testability,simpl,simply,85,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:244,testability,integr,integrated,244,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:85,usability,simpl,simply,85,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:103,usability,user,users,103,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:207,usability,feedback,feedback,207,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7334:360,usability,close,closed,360,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github. - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7334
https://github.com/root-project/root/pull/7335:23,deployability,build,build,23,I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. Maybe latest 4.x XROOTD can solve the problem - I will try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:42,interoperability,platform,platform,42,I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. Maybe latest 4.x XROOTD can solve the problem - I will try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:193,availability,error,error,193,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:25,deployability,build,build,25,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:44,interoperability,platform,platform,44,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:193,performance,error,error,193,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:193,safety,error,error,193,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:193,usability,error,error,193,> I am facing problem to build xrootd on my platform - latest OpenSUSE Tumblweed. > Maybe latest 4.x XROOTD can solve the problem - I will try. @linev can you post please what do you see as an error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:44,availability,error,error,44,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:70,availability,error,error,70,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:44,performance,error,error,44,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:70,performance,error,error,70,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:44,safety,error,error,44,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:70,safety,error,error,70,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:44,usability,error,error,44,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:70,usability,error,error,70,"> can you post please what do you see as an error? It is exactly same error as with 4.12.3, which is mentioned in https://github.com/root-project/root/issues/7292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:40,availability,state,state,40,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:79,availability,servic,services,79,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:5,deployability,depend,depends,5,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:79,deployability,servic,services,79,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:131,deployability,build,build,131,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:5,integrability,depend,depends,5,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:40,integrability,state,state,40,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:79,integrability,servic,services,79,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:5,modifiability,depend,depends,5,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:79,modifiability,servic,services,79,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:5,safety,depend,depends,5,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:144,safety,test,testReport,144,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:183,safety,test,test,183,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:372,safety,test,tests,372,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:5,testability,depend,depends,5,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:144,testability,test,testReport,144,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:183,testability,test,test,183,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:372,testability,test,tests,372,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:328,usability,confirm,confirmed,328,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:34,availability,servic,services,34,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:660,availability,error,error,660,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:34,deployability,servic,services,34,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:86,deployability,build,build,86,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:380,deployability,modul,modules,380,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:476,deployability,log,logs,476,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:488,deployability,build,build,488,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:872,deployability,instal,install,872,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:293,energy efficiency,current,currently,293,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:759,energy efficiency,load,load,759,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:837,energy efficiency,load,load,837,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:34,integrability,servic,services,34,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:443,integrability,messag,messages,443,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:443,interoperability,messag,messages,443,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:34,modifiability,servic,services,34,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:380,modifiability,modul,modules,380,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:520,modifiability,variab,variable,520,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:660,performance,error,error,660,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:759,performance,load,load,759,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:837,performance,load,load,837,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:697,reliability,doe,doesn,697,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:99,safety,test,testReport,99,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:138,safety,test,test,138,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:380,safety,modul,modules,380,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:476,safety,log,logs,476,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:660,safety,error,error,660,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:476,security,log,logs,476,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:99,testability,test,testReport,99,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:138,testability,test,test,138,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:476,testability,log,logs,476,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:660,usability,error,error,660,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:120,deployability,releas,release,120,https://github.com/root-project/root/issues/7292#issuecomment-790696084. Probably 4.12.8 will be better choice for 6.24 release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:8,usability,prefer,prefer,8,I would prefer xrootd 5 with a lot of new features then xrootd 4.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:22,performance,time,time,22,But do we have enough time to test ROOT with newer xrootd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,safety,test,test,30,But do we have enough time to test ROOT with newer xrootd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,testability,test,test,30,But do we have enough time to test ROOT with newer xrootd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:110,deployability,build,builds,110,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:258,deployability,build,builds,258,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:399,deployability,fail,failed,399,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:427,performance,time,time,427,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:399,reliability,fail,failed,399,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:158,safety,test,test-stressIOPlugins-xroot,158,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:203,safety,Test,Test,203,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:277,safety,test,test-stressIOPlugins-xroot,277,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:309,safety,Test,Test,309,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:320,safety,test,test-stressIOPlugins-xroot,320,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:377,safety,test,tests,377,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:393,safety,test,tests,393,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:422,safety,Test,Test,422,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:158,testability,test,test-stressIOPlugins-xroot,158,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:203,testability,Test,Test,203,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:277,testability,test,test-stressIOPlugins-xroot,277,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:309,testability,Test,Test,309,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:320,testability,test,test-stressIOPlugins-xroot,320,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:377,testability,test,tests,377,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:393,testability,test,tests,393,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:422,testability,Test,Test,422,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:217,usability,User,Users,217,"@vepadulano I forgot if this problem was reproducible on any Mac? On my Mac:. ```.  │  ~/CERN_/root-rntuple/builds │   builtin-xrootd-5.1.0 ?1  ctest -R test-stressIOPlugins-xroot  ✔ │ 16:54:58 . Test project /Users/oshadura/CERN_sources/root-rntuple/builds. Start 216: test-stressIOPlugins-xroot. 1/1 Test #216: test-stressIOPlugins-xroot ....... Passed 7.80 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 7.92 sec. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:92,safety,test,test,92,"The problem was reproducible on any mac node with builtin_xrootd enabled. I think we didn't test if the problem was present with system xrootd, but I guess it should not be a problem in that case. The original PR with all the discussion is at https://github.com/root-project/root/pull/6128",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:92,testability,test,test,92,"The problem was reproducible on any mac node with builtin_xrootd enabled. I think we didn't test if the problem was present with system xrootd, but I guess it should not be a problem in that case. The original PR with all the discussion is at https://github.com/root-project/root/pull/6128",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:172,deployability,version,version,172,"> It is not fully correct. > `netx` and `netxng` are no longer ROOT compiler options and therefore undefined. > One should just compile or not compile them based on xrootd version. right, I didn't understand that it is not a build option! Fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:225,deployability,build,build,225,"> It is not fully correct. > `netx` and `netxng` are no longer ROOT compiler options and therefore undefined. > One should just compile or not compile them based on xrootd version. right, I didn't understand that it is not a build option! Fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:172,integrability,version,version,172,"> It is not fully correct. > `netx` and `netxng` are no longer ROOT compiler options and therefore undefined. > One should just compile or not compile them based on xrootd version. right, I didn't understand that it is not a build option! Fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:172,modifiability,version,version,172,"> It is not fully correct. > `netx` and `netxng` are no longer ROOT compiler options and therefore undefined. > One should just compile or not compile them based on xrootd version. right, I didn't understand that it is not a build option! Fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:197,testability,understand,understand,197,"> It is not fully correct. > `netx` and `netxng` are no longer ROOT compiler options and therefore undefined. > One should just compile or not compile them based on xrootd version. right, I didn't understand that it is not a build option! Fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:41,deployability,fail,failing,41,Looks like on all platforms xrootd tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:18,interoperability,platform,platforms,18,Looks like on all platforms xrootd tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:41,reliability,fail,failing,41,Looks like on all platforms xrootd tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:35,safety,test,tests,35,Looks like on all platforms xrootd tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:35,testability,test,tests,35,Looks like on all platforms xrootd tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:45,deployability,version,version,45,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:136,deployability,updat,update,136,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:45,integrability,version,version,45,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:237,interoperability,distribut,distributions,237,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:22,modifiability,interm,intermediate,22,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:45,modifiability,version,version,45,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:136,safety,updat,update,136,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:136,security,updat,update,136,"@oshadura Can we make intermediate step with version xrootd 4.12.8. . We only need to get it on the http://lcgpackages.web.cern.ch/ and update makefile. Otherwise none of 6.22, 6,24 or master can not be compiled and used on newest Linux distributions - not only OpenSUSE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:403,availability,fault,fault,403,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,deployability,depend,dependency,122,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:331,deployability,fail,fails,331,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:403,energy efficiency,fault,fault,403,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,integrability,depend,dependency,122,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,modifiability,concern,concerning,30,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,modifiability,depend,dependency,122,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:403,performance,fault,fault,403,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:65,reliability,doe,does,65,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:331,reliability,fail,fails,331,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:403,reliability,fault,fault,403,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,safety,depend,dependency,122,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:403,safety,fault,fault,403,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:374,security,sign,signal,374,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,testability,concern,concerning,30,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,testability,depend,dependency,122,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:114,usability,support,support,114,"@oshadura . I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? . I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it). So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff7567807 in TMutex::UnLock() (). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:26,deployability,version,version,26,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:190,deployability,depend,depend,190,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:234,deployability,version,version,234,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:53,energy efficiency,current,current,53,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:26,integrability,version,version,26,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:190,integrability,depend,depend,190,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:234,integrability,version,version,234,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:26,modifiability,version,version,26,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:190,modifiability,depend,depend,190,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:234,modifiability,version,version,234,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:34,reliability,doe,does,34,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:182,reliability,doe,doesn,182,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:212,reliability,doe,doesn,212,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:190,safety,depend,depend,190,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:190,testability,depend,depend,190,"> Seems to be, xrootd 5.1 version does not work with current ROOT code. > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:63,deployability,build,build,63,"Just lost in translation, the accusative got lost: ROOT cannot build with a (builtin) Xrootd 5.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:13,integrability,translat,translation,13,"Just lost in translation, the accusative got lost: ROOT cannot build with a (builtin) Xrootd 5.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:13,interoperability,translat,translation,13,"Just lost in translation, the accusative got lost: ROOT cannot build with a (builtin) Xrootd 5.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:24,deployability,build,build,24,"@Axel-Naumann . One can build ROOT with xrootd 5, by many tests are failing afterwards.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:68,deployability,fail,failing,68,"@Axel-Naumann . One can build ROOT with xrootd 5, by many tests are failing afterwards.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:68,reliability,fail,failing,68,"@Axel-Naumann . One can build ROOT with xrootd 5, by many tests are failing afterwards.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:58,safety,test,tests,58,"@Axel-Naumann . One can build ROOT with xrootd 5, by many tests are failing afterwards.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:58,testability,test,tests,58,"@Axel-Naumann . One can build ROOT with xrootd 5, by many tests are failing afterwards.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:122,deployability,build,build,122,@Axel-Naumann a wasn't sure if it has anything to do with ROOT. I'm opening another issue with what I have. > ROOT cannot build with a (builtin) Xrootd 5.1. got it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,availability,failur,failures,30,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,deployability,fail,failures,30,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:502,deployability,version,version,502,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:502,integrability,version,version,502,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:502,modifiability,version,version,502,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,performance,failur,failures,30,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:30,reliability,fail,failures,30,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:148,safety,test,test,148,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:148,testability,test,test,148,"@Axel-Naumann I can reproduce failures on my machine... Here is quick reproducer:. https://github.com/root-project/root/blob/master/tree/treeplayer/test/treeprocmt/treeprocessormt_remotefiles.cxx#L13-L15. ```. root [1] auto fname = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/ZZTo4mu.root"";. root [2] auto f = std::unique_ptr<TFile>(TFile::Open(fname));. root [3] f. (std::unique_ptr<TFile, std::default_delete<TFile> > &) std::unique_ptr -> nullptr. root [4]. ```. broken xrootd version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:0,deployability,Updat,Update,0,"Update: looks like I am missing client library, debugging...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:0,safety,Updat,Update,0,"Update: looks like I am missing client library, debugging...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:0,security,Updat,Update,0,"Update: looks like I am missing client library, debugging...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:151,deployability,fail,fails,151,"Yes, or broken config, or who knows what :-) But the latest Xrootd 5 used in production should work. Can you try that one (whatever it is) and if that fails, too, talk to Michal to see what we're doing wrong?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:151,reliability,fail,fails,151,"Yes, or broken config, or who knows what :-) But the latest Xrootd 5 used in production should work. Can you try that one (whatever it is) and if that fails, too, talk to Michal to see what we're doing wrong?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:126,deployability,build,build,126,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:160,deployability,build,build,160,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:166,deployability,build,build,166,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:283,deployability,build,build,283,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:317,deployability,build,build,317,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:323,deployability,build,build,323,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:544,deployability,build,builds,544,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:637,deployability,build,builds,637,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:88,energy efficiency,load,loadLibrary,88,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:214,energy efficiency,load,loaded,214,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:88,performance,load,loadLibrary,88,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:214,performance,load,loaded,214,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:111,usability,User,Users,111,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:268,usability,User,Users,268,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:511,usability,User,Users,511,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:604,usability,User,Users,604,"now we have an issues with rpath on two mac nodes, . ```. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so, 9): Library not loaded: @rpath/libXrdUtils.3.dylib. Referenced from: /Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libNetxNG.6.25.01.so. Reason: image not found. ```. but I can't reproduce it locally on my mac:. ```. otool -l lib/libNetxNG.so | grep RPATH -A2. cmd LC_RPATH. cmdsize 64. path /Users/oshadura/CERN_sources/root/builds/lib (offset 12). --. cmd LC_RPATH. cmdsize 88. path /Users/oshadura/CERN_sources/root/builds/builtins/xrootd/XROOTD-prefix/lib (offset 12). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:51,safety,review,reviewed,51,@bellenot @Axel-Naumann it think it is ready to be reviewed! Big thanks to @simonmichal!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:51,testability,review,reviewed,51,@bellenot @Axel-Naumann it think it is ready to be reviewed! Big thanks to @simonmichal!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build with flags -Dbuildin_xrootd=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:22,safety,test,tests,22,Now ROOT compiles and tests are running. Last question for @oshadura - was compilation tested with older 4.x xrootd?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:87,safety,test,tested,87,Now ROOT compiles and tests are running. Last question for @oshadura - was compilation tested with older 4.x xrootd?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:22,testability,test,tests,22,Now ROOT compiles and tests are running. Last question for @oshadura - was compilation tested with older 4.x xrootd?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:87,testability,test,tested,87,Now ROOT compiles and tests are running. Last question for @oshadura - was compilation tested with older 4.x xrootd?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_xrootd=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:50,deployability,instal,installed,50,Looks like compilation was ok - on platforms with installed xrood.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:35,interoperability,platform,platforms,35,Looks like compilation was ok - on platforms with installed xrood.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:128,modifiability,paramet,parameter,128,FYI there's still the warning:. ```. builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:152,modifiability,paramet,parameter,152,FYI there's still the warning:. ```. builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:226,deployability,releas,release,226,"> FYI there's still the warning:. > . > ```. > builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter]. > ```. @Axel-Naumann : I'll fix this in next xrootd release, right now there's not much I can do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:138,modifiability,paramet,parameter,138,"> FYI there's still the warning:. > . > ```. > builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter]. > ```. @Axel-Naumann : I'll fix this in next xrootd release, right now there's not much I can do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:162,modifiability,paramet,parameter,162,"> FYI there's still the warning:. > . > ```. > builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter]. > ```. @Axel-Naumann : I'll fix this in next xrootd release, right now there's not much I can do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7336:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:130,availability,Error,Error,130,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:154,deployability,build,build,154,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:188,deployability,build,build,188,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:215,deployability,build,build,215,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:359,deployability,fail,failed,359,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:56,energy efficiency,current,current,56,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:233,integrability,messag,message,233,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:100,interoperability,conflict,conflict,100,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:233,interoperability,messag,message,233,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:130,performance,Error,Error,130,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:359,reliability,fail,failed,359,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:130,safety,Error,Error,130,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:130,usability,Error,Error,130,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict. ```. 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):. 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args. 19:29:06 branch on top of master failed! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:24,deployability,patch,patch,24,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:119,deployability,patch,patch,119,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:30,reliability,doe,does,30,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:24,safety,patch,patch,24,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:71,safety,review,reviews,71,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:119,safety,patch,patch,119,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:24,security,patch,patch,24,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:119,security,patch,patch,119,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:71,testability,review,reviews,71,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:140,usability,progress,progressed,140,"Thanks, @gartung . This patch does not correspond to what's in https://reviews.llvm.org/D36368 anymore. Given that the patch to llvm hasn't progressed since ages I agree we should just merge this. I'm waiting for the CI to give us its verdict, then we're good to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:37,deployability,patch,patch,37,"@reikdas, what is the status of this patch in terms for acceptance in llvm mainline?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:37,safety,patch,patch,37,"@reikdas, what is the status of this patch in terms for acceptance in llvm mainline?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:37,security,patch,patch,37,"@reikdas, what is the status of this patch in terms for acceptance in llvm mainline?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:22,usability,statu,status,22,"@reikdas, what is the status of this patch in terms for acceptance in llvm mainline?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:4,deployability,patch,patch,4,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:39,deployability,updat,updated,39,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:4,safety,patch,patch,4,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:22,safety,review,reviewed,22,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:39,safety,updat,updated,39,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:4,security,patch,patch,4,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:39,security,updat,updated,39,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:22,testability,review,reviewed,22,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:8,availability,failur,failure,8,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:8,deployability,fail,failure,8,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:77,deployability,patch,patch,77,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:8,performance,failur,failure,8,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:8,reliability,fail,failure,8,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:77,safety,patch,patch,77,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:77,security,patch,patch,77,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7339:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7341:20,usability,help,help,20,This PR should also help with #6700,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7343:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:58,safety,valid,valid,58,> Use a unique_ptr which guarantees the reference to stay valid for as long as the referencee is alive. But it changes the cardinality ... where there was a guarantee to have only one there is no one per SectionMemoryManager. . Is that okay? If it is why wasn't that simpler pattern used (by llvm) in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:267,testability,simpl,simpler,267,> Use a unique_ptr which guarantees the reference to stay valid for as long as the referencee is alive. But it changes the cardinality ... where there was a guarantee to have only one there is no one per SectionMemoryManager. . Is that okay? If it is why wasn't that simpler pattern used (by llvm) in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:267,usability,simpl,simpler,267,> Use a unique_ptr which guarantees the reference to stay valid for as long as the referencee is alive. But it changes the cardinality ... where there was a guarantee to have only one there is no one per SectionMemoryManager. . Is that okay? If it is why wasn't that simpler pattern used (by llvm) in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:10,availability,failur,failures,10,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:10,deployability,fail,failures,10,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:46,deployability,build,build,46,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:10,performance,failur,failures,10,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:23,performance,time,time,23,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:10,reliability,fail,failures,10,"Different failures any time I run the Windows build - let's assume this is not caused by this PR (I doubt it). Even if, this fixes way more than it breaks :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7344:956,deployability,version,version,956,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:558,energy efficiency,current,currently,558,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:85,integrability,messag,message,85,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:335,integrability,batch,batched,335,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:956,integrability,version,version,956,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:85,interoperability,messag,message,85,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:254,modifiability,concern,concerns,254,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:278,modifiability,variab,variables,278,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:956,modifiability,version,version,956,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:335,performance,batch,batched,335,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:43,safety,review,review,43,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:455,safety,test,test,455,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:43,testability,review,review,43,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:254,testability,concern,concerns,254,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:455,testability,test,test,455,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1166,deployability,version,version,1166,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:572,energy efficiency,current,currently,572,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:87,integrability,messag,message,87,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:349,integrability,batch,batched,349,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1011,integrability,Batch,BatchMode,1011,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1166,integrability,version,version,1166,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1361,integrability,batch,batch,1361,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1617,integrability,schema,schema,1617,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1768,integrability,batch,batch,1768,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:87,interoperability,messag,message,87,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:268,modifiability,concern,concerns,268,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:292,modifiability,variab,variables,292,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1069,modifiability,scal,scalar,1069,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1166,modifiability,version,version,1166,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1417,modifiability,scal,scalar,1417,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:349,performance,batch,batched,349,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1011,performance,Batch,BatchMode,1011,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1361,performance,batch,batch,1361,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1768,performance,batch,batch,1768,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:45,safety,review,review,45,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:469,safety,test,test,469,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:993,safety,test,test,993,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1321,safety,test,test,1321,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:45,testability,review,review,45,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:268,testability,concern,concerns,268,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:469,testability,test,test,469,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:933,testability,simpl,simple,933,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:993,testability,test,test,993,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1321,testability,test,test,1321,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:933,usability,simpl,simple,933,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. > . > I addressed all of your comments, but for one comment I'm not sure if I made the right choice. > . > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice? The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > . > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself. Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class? NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:27,usability,close,close,27,"Ups, sorry. Didn't want to close this. 🙂",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1119,deployability,configurat,configuration,1119,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:475,energy efficiency,optim,optimization,475,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:631,energy efficiency,optim,optimization,631,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:821,energy efficiency,optim,optimization,821,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:188,integrability,batch,batchmode,188,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:538,integrability,batch,batch,538,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:937,integrability,batch,batch,937,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1119,integrability,configur,configuration,1119,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:398,modifiability,variab,variables,398,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1119,modifiability,configur,configuration,1119,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1133,modifiability,paramet,parameters,1133,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1215,modifiability,paramet,parameter,1215,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1254,modifiability,refact,refactor,1254,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:99,performance,time,time,99,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:188,performance,batch,batchmode,188,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:469,performance,cach,cache,469,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed. Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
