id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/16523:441,deployability,version,version,441,In my opinion the problem is the search order for libraries on macosx. The value of the variable CMAKE_FIND_FRAMEWORK which defines the order is LAST when checking for OpenGL such that any other OpenGL installation is found before the framework one. Since the default setting is FIRST there must be a reason why this is changed. To work around the problem for OpenGL I would propose to change the setting temporarily such that the framework version of OpenGL is taken. I will prepare a fix after I am sure that this is the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:441,integrability,version,version,441,In my opinion the problem is the search order for libraries on macosx. The value of the variable CMAKE_FIND_FRAMEWORK which defines the order is LAST when checking for OpenGL such that any other OpenGL installation is found before the framework one. Since the default setting is FIRST there must be a reason why this is changed. To work around the problem for OpenGL I would propose to change the setting temporarily such that the framework version of OpenGL is taken. I will prepare a fix after I am sure that this is the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:88,modifiability,variab,variable,88,In my opinion the problem is the search order for libraries on macosx. The value of the variable CMAKE_FIND_FRAMEWORK which defines the order is LAST when checking for OpenGL such that any other OpenGL installation is found before the framework one. Since the default setting is FIRST there must be a reason why this is changed. To work around the problem for OpenGL I would propose to change the setting temporarily such that the framework version of OpenGL is taken. I will prepare a fix after I am sure that this is the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:441,modifiability,version,version,441,In my opinion the problem is the search order for libraries on macosx. The value of the variable CMAKE_FIND_FRAMEWORK which defines the order is LAST when checking for OpenGL such that any other OpenGL installation is found before the framework one. Since the default setting is FIRST there must be a reason why this is changed. To work around the problem for OpenGL I would propose to change the setting temporarily such that the framework version of OpenGL is taken. I will prepare a fix after I am sure that this is the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:139,deployability,version,version,139,Uninstalling the brew packages mesa and mesa-glu and recompiling root from source fixed the issue. LibRGL.so is no linked to the framework version of OpenGL and the macro runs as expected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:139,integrability,version,version,139,Uninstalling the brew packages mesa and mesa-glu and recompiling root from source fixed the issue. LibRGL.so is no linked to the framework version of OpenGL and the macro runs as expected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:22,modifiability,pac,packages,22,Uninstalling the brew packages mesa and mesa-glu and recompiling root from source fixed the issue. LibRGL.so is no linked to the framework version of OpenGL and the macro runs as expected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:139,modifiability,version,version,139,Uninstalling the brew packages mesa and mesa-glu and recompiling root from source fixed the issue. LibRGL.so is no linked to the framework version of OpenGL and the macro runs as expected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:34,availability,fault,faulty,34,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:34,energy efficiency,fault,faulty,34,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:34,performance,fault,faulty,34,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:34,reliability,fault,faulty,34,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:34,safety,fault,faulty,34,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:35,availability,fault,faulty,35,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:451,availability,Error,Error,451,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:522,deployability,instal,installed,522,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:585,deployability,manag,manage,585,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:647,deployability,instal,installed,647,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:35,energy efficiency,fault,faulty,35,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:585,energy efficiency,manag,manage,585,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:35,performance,fault,faulty,35,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:451,performance,Error,Error,451,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:35,reliability,fault,faulty,35,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:35,safety,fault,faulty,35,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:451,safety,Error,Error,451,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:585,safety,manag,manage,585,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:392,usability,Stop,Stop,392,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:451,usability,Error,Error,451,"@fuhlig1 . As I said I removed the faulty OpenGL doing `rm /opt/X11/lib/libGL.dylib`. Then reinstalling from ROOT sources worked. I can see the GL output. But doing that I have another problem [here](https://github.com/root-project/root/actions/runs/10852318554/job/30697011619?pr=16348):. ```. make[2]: *** No rule to make target `/usr/X11R6/lib/libGL.dylib', needed by `lib/libGLEW.dylib'. Stop. make[1]: *** [builtins/glew/CMakeFiles/GLEW.dir/all] Error 2. ```. To cure that I had to reinstall XQuartz but then my ROOT installed from the sources points to the wrong OpenGL. Did you manage to make sure ROOT points the right OpenGL with XQuartz installed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:67,safety,test,testing,67,"@couet ,. I think I could fix the problem in CMake but I need more testing. Hope I can finish the tests today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:98,safety,test,tests,98,"@couet ,. I think I could fix the problem in CMake but I need more testing. Hope I can finish the tests today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:67,testability,test,testing,67,"@couet ,. I think I could fix the problem in CMake but I need more testing. Hope I can finish the tests today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:98,testability,test,tests,98,"@couet ,. I think I could fix the problem in CMake but I need more testing. Hope I can finish the tests today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:37,deployability,modul,modules,37,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:104,deployability,instal,installation,104,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:185,integrability,messag,message,185,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:185,interoperability,messag,message,185,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:37,modifiability,modul,modules,37,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:37,safety,modul,modules,37,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:193,usability,STATU,STATUS,193,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```. #---Check for OpenGL installation-------------------------------------------------------. if(opengl). message(STATUS ""Looking for OpenGL""). if(APPLE). set(CMAKE_FIND_FRAMEWORK FIRST). find_package(OpenGL). set(CMAKE_FIND_FRAMEWORK LAST). else(). find_package(OpenGL). endif(). ```. It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:94,deployability,log,logic,94,"@couet,. that is more or less the solution I came up with. For me a similar fix with the same logic solved the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:94,safety,log,logic,94,"@couet,. that is more or less the solution I came up with. For me a similar fix with the same logic solved the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:94,security,log,logic,94,"@couet,. that is more or less the solution I came up with. For me a similar fix with the same logic solved the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:94,testability,log,logic,94,"@couet,. that is more or less the solution I came up with. For me a similar fix with the same logic solved the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:60,testability,verif,verify,60,we ended up with the same solution. I will make a PR once I verify it is working on my laptop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/pull/16526:158,availability,failur,failure,158,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:93,deployability,automat,automatically,93,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:122,deployability,stack,stacks,122,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:158,deployability,fail,failure,158,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:337,deployability,build,build,337,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:79,interoperability,platform,platform,79,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:300,interoperability,platform,platform,300,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:158,performance,failur,failure,158,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:158,reliability,fail,failure,158,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:193,reliability,doe,does,193,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:63,safety,test,testing,63,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:153,safety,test,test,153,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:209,safety,compl,complex,209,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:209,security,compl,complex,209,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:63,testability,test,testing,63,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:93,testability,automat,automatically,93,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:153,testability,test,test,153,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:277,usability,clear,clear,277,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:283,usability,indicat,indicator,283,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:80,deployability,configurat,configuration,80,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:80,integrability,configur,configuration,80,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:70,interoperability,standard,standard,70,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:80,modifiability,configur,configuration,80,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:80,security,configur,configuration,80,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:82,deployability,configurat,configuration,82,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:185,deployability,build,build,185,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:82,integrability,configur,configuration,82,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:72,interoperability,standard,standard,72,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:82,modifiability,configur,configuration,82,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/pull/16526:82,security,configur,configuration,82,"> Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start... No particular reason. I just copied the config from the build above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16526
https://github.com/root-project/root/issues/16527:2,usability,close,closed,2,I closed issue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16527
https://github.com/root-project/root/pull/16528:101,security,modif,modify,101,"Thanks for this fix, really appreciated. Not to be bitten again by this, would it make sense to also modify TypeID2TypeName https://github.com/root-project/root/blob/master/tree/dataframe/src/RDFUtils.cxx#L99 (and its ""inverse"" https://github.com/root-project/root/blob/master/tree/dataframe/src/RDFUtils.cxx#L51) by delaying the call to the type system as much as possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16528
https://github.com/root-project/root/pull/16528:103,security,modif,modify,103,"> Thanks for this fix, really appreciated. Not to be bitten again by this, would it make sense to also modify TypeID2TypeName https://github.com/root-project/root/blob/master/tree/dataframe/src/RDFUtils.cxx#L99 (and its ""inverse"" https://github.com/root-project/root/blob/master/tree/dataframe/src/RDFUtils.cxx#L51) by delaying the call to the type system as much as possible? Yes, I agree, I will do that in a separate PR 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16528
https://github.com/root-project/root/pull/16536:129,deployability,API,API,129,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:129,integrability,API,API,129,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:129,interoperability,API,API,129,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:163,performance,time,time,163,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:314,testability,simpl,simplified,314,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:314,usability,simpl,simplified,314,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16536:398,usability,close,close,398,"Hi @Dr15Jones @makortel @siliataider, this PR aims to provide a tutorial how we (ROOT) envision frameworks could use the RNTuple API for writing. If you have some time, it would be great if you could check whether it makes sense and demonstrates the relevant use cases. The ""framework code"" is obviously very much simplified and the goal is not to code a full production framework, but I hope it's close enough to what the ""real"" experiment frameworks are doing. Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16536
https://github.com/root-project/root/pull/16538:51,interoperability,format,format,51,"> Consider applying the changes suggested by clang-format before merging. Sure but 90% of those were 'worse', so I disable clang format around the related lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16538
https://github.com/root-project/root/pull/16538:129,interoperability,format,format,129,"> Consider applying the changes suggested by clang-format before merging. Sure but 90% of those were 'worse', so I disable clang format around the related lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16538
https://github.com/root-project/root/pull/16539:214,availability,avail,available,214,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:324,availability,avail,available,324,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:61,performance,memor,memory,61,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:159,performance,memor,memory,159,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:214,reliability,availab,available,214,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:324,reliability,availab,available,324,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:214,safety,avail,available,214,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:324,safety,avail,available,324,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:214,security,availab,available,214,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:324,security,availab,available,324,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:61,usability,memor,memory,61,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16539:159,usability,memor,memory,159,it is already useable now. It will show 'right-there' the in memory element type for any `TStreamerInfo` read from file where some element differs from the in-memory layout. For regular element this information is available in two steps by retrieving the corresponding TDataMember. For enum element this information is also available in two different steps by retrieving the corresponding TEnum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16539
https://github.com/root-project/root/pull/16540:10,safety,test,test,10,Rebased & test added 🚀,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16540
https://github.com/root-project/root/pull/16540:10,testability,test,test,10,Rebased & test added 🚀,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16540
https://github.com/root-project/root/pull/16543:8,deployability,fail,failing,8,3 tests failing on mac15:. ```. 568:tutorial-dataframe-df027_SQliteDependencyOverVersion. 884:tutorial-multicore-imt001_parBranchProcessing. 1800:roottest-root-graf-tasimage_frompad. ```. They do not seem to be related to that change. I am trying to reproduce them on the machine. mac14 did not start yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:8,reliability,fail,failing,8,3 tests failing on mac15:. ```. 568:tutorial-dataframe-df027_SQliteDependencyOverVersion. 884:tutorial-multicore-imt001_parBranchProcessing. 1800:roottest-root-graf-tasimage_frompad. ```. They do not seem to be related to that change. I am trying to reproduce them on the machine. mac14 did not start yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:2,safety,test,tests,2,3 tests failing on mac15:. ```. 568:tutorial-dataframe-df027_SQliteDependencyOverVersion. 884:tutorial-multicore-imt001_parBranchProcessing. 1800:roottest-root-graf-tasimage_frompad. ```. They do not seem to be related to that change. I am trying to reproduce them on the machine. mac14 did not start yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:2,testability,test,tests,2,3 tests failing on mac15:. ```. 568:tutorial-dataframe-df027_SQliteDependencyOverVersion. 884:tutorial-multicore-imt001_parBranchProcessing. 1800:roottest-root-graf-tasimage_frompad. ```. They do not seem to be related to that change. I am trying to reproduce them on the machine. mac14 did not start yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:43,availability,failur,failures,43,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:43,deployability,fail,failures,43,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:43,performance,failur,failures,43,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:57,performance,time,timeouts,57,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:43,reliability,fail,failures,43,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:4,safety,test,tests,4,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:57,safety,timeout,timeouts,57,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16543:4,testability,test,tests,4,"all tests ran, it was probably a glitch (2 failures were timeouts)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16546:19,safety,test,test,19,Could you add some test for this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:19,testability,test,test,19,Could you add some test for this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16548:41,availability,failur,failures,41,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:342,availability,error,error,342,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:41,deployability,fail,failures,41,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:368,deployability,version,versions,368,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:382,deployability,stack,stack,382,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:368,integrability,version,versions,368,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:128,interoperability,specif,specifically,128,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:725,interoperability,platform,platform,725,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:368,modifiability,version,versions,368,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:41,performance,failur,failures,41,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:342,performance,error,error,342,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:41,reliability,fail,failures,41,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:333,reliability,doe,does,333,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:118,safety,test,test,118,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:342,safety,error,error,342,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:663,safety,test,tested,663,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:118,testability,test,test,118,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:388,testability,trace,trace,388,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:663,testability,test,tested,663,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:342,usability,error,error,342,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:639,usability,prefer,prefer,639,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:738,usability,confirm,confirm,738,"> The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:43,availability,failur,failures,43,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:350,availability,error,error,350,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:43,deployability,fail,failures,43,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:376,deployability,version,versions,376,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:510,deployability,stack,stack,510,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1001,deployability,fail,failing,1001,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1034,deployability,configurat,configuration,1034,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1116,energy efficiency,green,green,1116,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:376,integrability,version,versions,376,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1034,integrability,configur,configuration,1034,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:130,interoperability,specif,specifically,130,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:853,interoperability,platform,platform,853,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:376,modifiability,version,versions,376,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1034,modifiability,configur,configuration,1034,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:43,performance,failur,failures,43,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:350,performance,error,error,350,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:43,reliability,fail,failures,43,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:341,reliability,doe,does,341,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1001,reliability,fail,failing,1001,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:120,safety,test,test,120,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:350,safety,error,error,350,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:791,safety,test,tested,791,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:985,safety,test,tests,985,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1122,safety,test,test,1122,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1034,security,configur,configuration,1034,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:120,testability,test,test,120,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:516,testability,trace,trace,516,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:791,testability,test,tested,791,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:985,testability,test,tests,985,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1122,testability,test,test,1122,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:350,usability,error,error,350,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:767,usability,prefer,prefer,767,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:866,usability,confirm,confirm,866,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:1056,usability,confirm,confirm,1056,"> > The change looks good to me, if the CI failures are understood/unrelated. Just for clarification, is there a way to test this specifically? Or it is easily visible but we don't have a Python 3.8 runner in the CI? > . > Hi, @hahnjo was able to reproduce this on python3.8. It should be more visible if we had a python3.8 runner, but this does not error out on newer python versions. Actually I noticed on Friday that we have Python 3.8 in our `alma8` image. I don't know why it's not visible there... > The stack trace points to TCling not handling `void init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}` which is an incorrectly constructed aggregate initialization constructor. I would prefer if this could be tested before merging if @hahnjo can apply this commit on his platform and confirm that `roottest-python-basic-datatype` and `roottest-python-cpp-cpp11` start to pass. I re-checked that the two tests are still failing on `master` for my local configuration and can confirm that this PR fixes them, getting me back to a fully green test result :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16550:150,deployability,version,version,150,"@dpiparo exactly, I tested with the reproducer in the issue with 6.32.06 and the file saving function is back, this might have been fixed in previous version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:150,integrability,version,version,150,"@dpiparo exactly, I tested with the reproducer in the issue with 6.32.06 and the file saving function is back, this might have been fixed in previous version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:150,modifiability,version,version,150,"@dpiparo exactly, I tested with the reproducer in the issue with 6.32.06 and the file saving function is back, this might have been fixed in previous version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:20,safety,test,tested,20,"@dpiparo exactly, I tested with the reproducer in the issue with 6.32.06 and the file saving function is back, this might have been fixed in previous version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:20,testability,test,tested,20,"@dpiparo exactly, I tested with the reproducer in the issue with 6.32.06 and the file saving function is back, this might have been fixed in previous version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:75,energy efficiency,batter,battery,75,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:37,safety,test,test,37,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:86,safety,test,tests,86,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:37,testability,test,test,37,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:86,testability,test,tests,86,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/issues/16552:30,availability,error,errors,30,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:70,deployability,resourc,resource,70,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:127,deployability,configurat,configuration,127,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:70,energy efficiency,resourc,resource,70,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:127,integrability,configur,configuration,127,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:200,integrability,sub,subprocesses,200,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:127,modifiability,configur,configuration,127,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:30,performance,error,errors,30,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:70,performance,resourc,resource,70,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:30,safety,error,errors,30,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:70,safety,resourc,resource,70,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:127,security,configur,configuration,127,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:70,testability,resourc,resource,70,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:30,usability,error,errors,30,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:642,deployability,stack,stack,642,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:274,energy efficiency,core,core,274,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:351,energy efficiency,schedul,scheduling,351,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:672,energy efficiency,cpu,cpu,672,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:580,integrability,messag,message,580,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:588,integrability,queue,queues,588,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:580,interoperability,messag,message,580,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:221,performance,time,time,221,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:239,performance,time,time,239,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:351,performance,schedul,scheduling,351,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:447,performance,lock,locked,447,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:454,performance,memor,memory,454,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:484,performance,memor,memory,484,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:588,performance,queue,queues,588,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:620,performance,time,time,620,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:672,performance,cpu,cpu,672,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:676,performance,time,time,676,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:747,performance,memor,memory,747,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:783,performance,lock,locks,783,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:421,security,sign,signals,421,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:447,security,lock,locked,447,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:783,security,lock,locks,783,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:454,usability,memor,memory,454,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:484,usability,memor,memory,484,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:710,usability,user,user,710,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:747,usability,memor,memory,747,"It looks okay:. ```. $ cat /proc/sys/kernel/threads-max. 7897651. $ cat /proc/sys/kernel/pid_max . 4194304. $ cat /proc/sys/vm/max_map_count. 262144. ```. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a. real-time non-blocking time (microseconds, -R) unlimited. core file size (blocks, -c) unlimited. data seg size (kbytes, -d) unlimited. scheduling priority (-e) 0. file size (blocks, -f) unlimited. pending signals (-i) 3948825. max locked memory (kbytes, -l) 8192. max memory size (kbytes, -m) unlimited. open files (-n) 1048576. pipe size (512 bytes, -p) 8. POSIX message queues (bytes, -q) 819200. real-time priority (-r) 0. stack size (kbytes, -s) 8192. cpu time (seconds, -t) unlimited. max user processes (-u) 4194304. virtual memory (kbytes, -v) unlimited. file locks (-x) unlimited. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:76,availability,error,errors,76,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:421,availability,unavail,unavailable,421,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:620,availability,unavail,unavailable,620,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:400,deployability,Resourc,Resource,400,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:457,deployability,configurat,configuration,457,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:553,deployability,stack,stackexchange,553,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:599,deployability,resourc,resource-temporarily-unavailable,599,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:647,deployability,configurat,configurations,647,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:400,energy efficiency,Resourc,Resource,400,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:599,energy efficiency,resourc,resource-temporarily-unavailable,599,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:457,integrability,configur,configuration,457,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:647,integrability,configur,configurations,647,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:166,interoperability,plug,plugin,166,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:765,interoperability,platform,platform,765,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:457,modifiability,configur,configuration,457,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:647,modifiability,configur,configurations,647,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:76,performance,error,errors,76,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:400,performance,Resourc,Resource,400,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:599,performance,resourc,resource-temporarily-unavailable,599,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:76,safety,error,errors,76,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:400,safety,Resourc,Resource,400,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:599,safety,resourc,resource-temporarily-unavailable,599,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:457,security,configur,configuration,457,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:647,security,configur,configurations,647,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:400,testability,Resourc,Resource,400,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:599,testability,resourc,resource-temporarily-unavailable,599,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:76,usability,error,errors,76,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:290,usability,hint,hints,290,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:638,usability,hint,hints,638,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`. For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:54,availability,avail,available,54,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:152,deployability,configurat,configuration,152,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:152,integrability,configur,configuration,152,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:152,modifiability,configur,configuration,152,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:54,reliability,availab,available,54,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:54,safety,avail,available,54,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:139,safety,test,test,139,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:54,security,availab,available,54,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:152,security,configur,configuration,152,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:15,testability,understand,understand,15,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:139,testability,test,test,139,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16553:229,availability,error,errors,229,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:229,performance,error,errors,229,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:229,safety,error,errors,229,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:65,usability,help,help,65,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:195,usability,confirm,confirm,195,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:229,usability,error,errors,229,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. . I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:151,availability,down,down,151,> I am not sure though that the unresolved while linking is due to the high thread count. I think you might be right. The best way forward is to track down where those missing symbol are suppose to come from.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:88,deployability,depend,dependencies,88,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,deployability,depend,dependencies,560,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:88,integrability,depend,dependencies,88,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,integrability,depend,dependencies,560,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:622,interoperability,platform,platform,622,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:88,modifiability,depend,dependencies,88,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,modifiability,depend,dependencies,560,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:88,safety,depend,dependencies,88,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:111,safety,test,tests,111,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,safety,depend,dependencies,560,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:88,testability,depend,dependencies,88,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:111,testability,test,tests,111,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,testability,depend,dependencies,560,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:195,usability,confirm,confirmed,195,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:268,usability,close,closed,268,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:392,usability,clear,clear,392,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:468,usability,indicat,indication,468,"Thanks for the comment. At this point this issue seems to conflate two things: . 1. The dependencies of python tests. This should have been addressed by #16555 . 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:74,deployability,depend,dependencies,74,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:74,integrability,depend,dependencies,74,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:74,modifiability,depend,dependencies,74,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:74,safety,depend,dependencies,74,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:28,testability,understand,understanding,28,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:59,testability,understand,understand,59,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:74,testability,depend,dependencies,74,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:34,safety,input,input,34,"For the symbol, I have waiting on input on which library those symbols are meant to come from.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:34,usability,input,input,34,"For the symbol, I have waiting on input on which library those symbols are meant to come from.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:217,availability,consist,consistent,217,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:211,deployability,fail,fails,211,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:421,deployability,fail,fails,421,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:133,integrability,event,eventhough,133,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:467,performance,parallel,parallels,467,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:211,reliability,fail,fails,211,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:421,reliability,fail,fails,421,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:94,safety,test,test,94,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:205,safety,test,tests,205,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:416,safety,test,test,416,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:505,safety,test,test-TestRModelParserPyTorch,505,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:556,safety,test,test-TestRModelParserKeras,556,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:94,testability,test,test,94,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:205,testability,test,tests,205,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:416,testability,test,test,416,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:505,testability,test,test-TestRModelParserPyTorch,505,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:556,testability,test,test-TestRModelParserKeras,556,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:217,usability,consist,consistent,217,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols. ```. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. but strangely more test fails with missing `BLAS` symbols when run in parallels:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:16,availability,failur,failures,16,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:374,availability,error,error,374,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:16,deployability,fail,failures,16,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:256,deployability,fail,fails,256,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:502,deployability,fail,fails,502,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:270,interoperability,platform,platforms,270,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:560,interoperability,specif,specific,560,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:16,performance,failur,failures,16,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:374,performance,error,error,374,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:537,performance,time,timeout,537,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:16,reliability,fail,failures,16,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:256,reliability,fail,fails,256,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:502,reliability,fail,fails,502,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:151,safety,test,test,151,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:374,safety,error,error,374,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:537,safety,timeout,timeout,537,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:151,testability,test,test,151,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:374,usability,error,error,374,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:. ```. /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. #include ""encoder.hxx"". ^~~~~~~~~~~~~. ```. and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16560:121,interoperability,format,formats,121,"Yes, this is how the colors are implemented. Only the builtins colors are known at saving time in root files. This other formats save the colors (including .C).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:90,performance,time,time,90,"Yes, this is how the colors are implemented. Only the builtins colors are known at saving time in root files. This other formats save the colors (including .C).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:147,availability,restor,restored,147,One can store all colors in the canvas if call `TColor::DefinedColors(1)` before. If read such canvas back - all colors (including custom) will be restored.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:147,reliability,restor,restored,147,One can store all colors in the canvas if call `TColor::DefinedColors(1)` before. If read such canvas back - all colors (including custom) will be restored.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:131,usability,custom,custom,131,One can store all colors in the canvas if call `TColor::DefinedColors(1)` before. If read such canvas back - all colors (including custom) will be restored.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:188,availability,error,error,188,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:339,availability,error,error,339,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:353,availability,error,error,353,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:867,availability,operat,operator,867,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1244,availability,slo,sloc,1244,"t template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1316,availability,slo,sloc,1316,"st/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1388,availability,slo,sloc,1388,"""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2567,availability,slo,sloc,2567,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2664,availability,slo,sloc,2664,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:238,deployability,depend,dependent,238,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1581,deployability,depend,dependent,1581,"ue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1667,deployability,depend,dependent,1667,"Stmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1744,deployability,depend,dependent,1744,"col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1796,deployability,depend,dependent,1796,"5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the examp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1936,deployability,depend,dependent,1936,":16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2020,deployability,depend,dependent,2020," | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2190,deployability,depend,dependent,2190,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2274,deployability,depend,dependent,2274,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:113,energy efficiency,load,loaded,113,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2046,energy efficiency,Draw,Draw,2046,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2813,energy efficiency,load,load,2813,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2883,energy efficiency,load,load,2883,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:238,integrability,depend,dependent,238,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1581,integrability,depend,dependent,1581,"ue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1667,integrability,depend,dependent,1667,"Stmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1744,integrability,depend,dependent,1744,"col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1796,integrability,depend,dependent,1796,"5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the examp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1936,integrability,depend,dependent,1936,":16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2020,integrability,depend,dependent,2020," | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2190,integrability,depend,dependent,2190,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2274,integrability,depend,dependent,2274,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2924,integrability,sub,substitute,2924,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:238,modifiability,depend,dependent,238,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1581,modifiability,depend,dependent,1581,"ue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1667,modifiability,depend,dependent,1667,"Stmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1744,modifiability,depend,dependent,1744,"col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1796,modifiability,depend,dependent,1796,"5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the examp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1936,modifiability,depend,dependent,1936,":16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2020,modifiability,depend,dependent,2020," | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2190,modifiability,depend,dependent,2190,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2274,modifiability,depend,dependent,2274,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:113,performance,load,loaded,113,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:188,performance,error,error,188,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:339,performance,error,error,339,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:353,performance,error,error,353,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2813,performance,load,load,2813,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2883,performance,load,load,2883,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1244,reliability,slo,sloc,1244,"t template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1316,reliability,slo,sloc,1316,"st/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1388,reliability,slo,sloc,1388,"""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2567,reliability,slo,sloc,2567,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2664,reliability,slo,sloc,2664,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:164,safety,test,test,164,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:188,safety,error,error,188,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:238,safety,depend,dependent,238,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:316,safety,test,test,316,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:339,safety,error,error,339,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:353,safety,error,error,353,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:449,safety,test,test,449,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:639,safety,test,test,639,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1581,safety,depend,dependent,1581,"ue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1667,safety,depend,dependent,1667,"Stmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1744,safety,depend,dependent,1744,"col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1796,safety,depend,dependent,1796,"5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the examp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1936,safety,depend,dependent,1936,":16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2020,safety,depend,dependent,2020," | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2190,safety,depend,dependent,2190,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2274,safety,depend,dependent,2274,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2752,safety,compl,completeness,2752,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2752,security,compl,completeness,2752,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:164,testability,test,test,164,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:238,testability,depend,dependent,238,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:316,testability,test,test,316,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:449,testability,test,test,449,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:639,testability,test,test,639,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1581,testability,depend,dependent,1581,"ue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1667,testability,depend,dependent,1667,"Stmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1744,testability,depend,dependent,1744,"col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1796,testability,depend,dependent,1796,"5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the examp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1936,testability,depend,dependent,1936,":16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2020,testability,depend,dependent,2020," | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2190,testability,depend,dependent,2190,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:2274,testability,depend,dependent,2274,"tCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw. | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs. | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'. | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png"". | `-NullStmt 0x5af6326e1a68 <line:13:1>. |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. ```. p.s. just for completeness I made a little mistake in the example above, I load the object in the root file as an histogram, but I would have to load it as a canvas object.. anyway if I substitute `TH1F *h1 = (TH1F*)f->Get(""c1"");` with `auto cnv = f->Get<TCanvas>(""c1"");` the issue is exactly the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:188,usability,error,error,188,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:339,usability,error,error,339,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:353,usability,error,error,353,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get . ```. /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name. auto cnv = file->Get<TCanvas>(""c1"");. ^. template . /test/./load_new.C:6:1: error: Syntax error. auto cnv = file->Get<TCanvas>(""c1"");. ^. FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>. | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>. | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit. | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'. | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'. | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>. | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root"". | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'. | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'. | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'. | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>. | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit. | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'. | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get. | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'. | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1"". | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'. | | `-CXXDependentScopeMemberExpr 0x5af6326df8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:39,deployability,version,version,39,Looks like you need to use latest ROOT version to get desired functionality.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:39,integrability,version,version,39,Looks like you need to use latest ROOT version to get desired functionality.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:39,modifiability,version,version,39,Looks like you need to use latest ROOT version to get desired functionality.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/pull/16564:60,usability,hint,hint,60,Too late for this PR but I would recommend to always give a hint (easiest is copy/paste of the compiler output) of the kind of warning that are being fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16564
https://github.com/root-project/root/pull/16564:94,integrability,wrap,wrapped,94,@pcanal FYI:. ```. warning C4858: discarding return value: This function constructs an object wrapped by a smart pointer and has no other effects; it is not useful to call this function and discard the return value. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16564
https://github.com/root-project/root/pull/16568:186,deployability,contain,contained,186,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:371,interoperability,share,shared,371,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:392,interoperability,platform,platform,392,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:339,modifiability,concern,concern,339,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:238,safety,Test,TestSupport,238,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:238,testability,Test,TestSupport,238,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:339,testability,concern,concern,339,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:. ```. For static libraries, the linker can decide to skip it and not include. the contained object files. This defeats the purpose of TestSupport. which registers a global. ```. (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:56,deployability,log,log,56,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:225,deployability,build,build,225,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:56,safety,log,log,56,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:56,security,log,log,56,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:56,testability,log,log,56,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:106,deployability,artifact,artifacts,106,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:388,deployability,depend,dependent,388,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:428,deployability,build,build,428,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:483,deployability,build,build,483,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:492,deployability,depend,depended,492,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:513,deployability,Releas,Release,513,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:298,integrability,sub,subdirectory,298,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:388,integrability,depend,dependent,388,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:492,integrability,depend,depended,492,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:388,modifiability,depend,dependent,388,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:492,modifiability,depend,depended,492,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:147,safety,Test,TestSupport,147,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:207,safety,Test,TestSupport,207,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:247,safety,Test,TestSupport,247,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:388,safety,depend,dependent,388,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:492,safety,depend,depended,492,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:594,safety,test,test,594,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:147,testability,Test,TestSupport,147,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:207,testability,Test,TestSupport,207,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:247,testability,Test,TestSupport,247,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:388,testability,depend,dependent,388,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:492,testability,depend,depended,492,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:594,testability,test,test,594,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:599,usability,support,support,599,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:. ```. [4.0K] root_install/lib/TestSupport/. └── [4.0K] objects-RelWithDebInfo. └── [4.0K] TestSupport. └── [4.0K] src. └── [435K] TestSupport.cxx.o. 4 directories, 1 file. ```. The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16570:24,availability,failur,failure,24,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:24,deployability,fail,failure,24,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:24,performance,failur,failure,24,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:24,reliability,fail,failure,24,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:19,safety,test,test,19,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:19,testability,test,test,19,"@ferdymercury, the test failure on alma8 is real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:26,availability,failur,failure,26,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:26,deployability,fail,failure,26,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:26,performance,failur,failure,26,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:26,reliability,fail,failure,26,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:21,safety,test,test,21,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16570:21,testability,test,test,21,"> @ferdymercury, the test failure on alma8 is real. Good catch. Solved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16570
https://github.com/root-project/root/pull/16579:69,reliability,doe,does,69,Why change stressGraphics ? It is meant to test the old graphics and does it for years the proper way. It is a standalone program ... I don't understand the point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:43,safety,test,test,43,Why change stressGraphics ? It is meant to test the old graphics and does it for years the proper way. It is a standalone program ... I don't understand the point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:43,testability,test,test,43,Why change stressGraphics ? It is meant to test the old graphics and does it for years the proper way. It is a standalone program ... I don't understand the point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:142,testability,understand,understand,142,Why change stressGraphics ? It is meant to test the old graphics and does it for years the proper way. It is a standalone program ... I don't understand the point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:97,safety,test,tests,97,We discussing usage of web graphics by default in ROOT. Means all kind of graphics tutorials and tests should be possible to use in web mode. And I want to change structure of the code. After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:231,safety,test,testing,231,We discussing usage of web graphics by default in ROOT. Means all kind of graphics tutorials and tests should be possible to use in web mode. And I want to change structure of the code. After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:97,testability,test,tests,97,We discussing usage of web graphics by default in ROOT. Means all kind of graphics tutorials and tests should be possible to use in web mode. And I want to change structure of the code. After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:231,testability,test,testing,231,We discussing usage of web graphics by default in ROOT. Means all kind of graphics tutorials and tests should be possible to use in web mode. And I want to change structure of the code. After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:223,usability,support,support,223,We discussing usage of web graphics by default in ROOT. Means all kind of graphics tutorials and tests should be possible to use in web mode. And I want to change structure of the code. After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:4,safety,test,tests,4,All tests remain exactly the same - just invocation order at the end little bit changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:4,testability,test,tests,4,All tests remain exactly the same - just invocation order at the end little bit changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:41,energy efficiency,current,current,41,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:49,interoperability,format,formats,49,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:32,safety,test,test,32,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:71,safety,test,test,71,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:32,testability,test,test,32,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:71,testability,test,test,71,But this program is intended to test the current formats. I need ti to test TPDF TPpostScript TSVG *.C TImageDump etc etc ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:0,reliability,Doe,Does,0,Does it run as before ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:2,reliability,Doe,Does,2,> Does it run as before ? Exactly the same. No single change in refs are required.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16584:15,safety,review,review,15,Thanks for the review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:15,testability,review,review,15,Thanks for the review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16595:15,modifiability,exten,extended,15,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:34,safety,test,test,34,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:47,safety,test,test,47,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:147,safety,test,test,147,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:29,testability,unit,unit,29,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:34,testability,test,test,34,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:47,testability,test,test,47,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:142,testability,unit,unit,142,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:147,testability,test,test,147,"I see that you extended your unit test to also test bitset, which is great. Are there other specially handled classes for which there are not unit test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:93,interoperability,specif,specifically,93,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:171,performance,time,time,171,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:19,safety,test,tested,19,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:193,safety,test,tests,193,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:19,testability,test,tested,19,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:188,testability,unit,unit,188,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:193,testability,test,tests,193,"All the fields are tested one way or another, but not all combinations. The problem here was specifically vector of bitset, not bitset alone. But we did discuss that it's time to give the unit tests more structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16596:33,reliability,doe,does,33,"Tests pass on Windows, so the PR does what it should.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:0,safety,Test,Tests,0,"Tests pass on Windows, so the PR does what it should.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:0,testability,Test,Tests,0,"Tests pass on Windows, so the PR does what it should.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/issues/16601:535,availability,error,error,535,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:6,deployability,updat,update,6,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:392,deployability,automat,automatically,392,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:515,deployability,fail,fails,515,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:406,energy efficiency,load,load,406,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:74,integrability,sub,subtly,74,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:406,performance,load,load,406,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:535,performance,error,error,535,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:515,reliability,fail,fails,515,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:6,safety,updat,update,6,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:535,safety,error,error,535,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:6,security,updat,update,6,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:29,testability,context,context,29,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:392,testability,automat,automatically,392,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:322,usability,clear,clear,322,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:535,usability,error,error,535,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python. import ROOT. def main():. ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/pull/16605:121,security,ssl,ssl,121,> Closes https://github.com/root-project/root/pull/16604. What is the correct issue number? This is the number of xrootd/ssl PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:2,usability,Close,Closes,2,> Closes https://github.com/root-project/root/pull/16604. What is the correct issue number? This is the number of xrootd/ssl PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:133,deployability,updat,updated,133,> > Closes #16604. > . > What is the correct issue number? This is the number of xrootd/ssl PR. Thanks for pointing that out! I have updated the issue number in the PR and commit description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:133,safety,updat,updated,133,> > Closes #16604. > . > What is the correct issue number? This is the number of xrootd/ssl PR. Thanks for pointing that out! I have updated the issue number in the PR and commit description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:88,security,ssl,ssl,88,> > Closes #16604. > . > What is the correct issue number? This is the number of xrootd/ssl PR. Thanks for pointing that out! I have updated the issue number in the PR and commit description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:133,security,updat,updated,133,> > Closes #16604. > . > What is the correct issue number? This is the number of xrootd/ssl PR. Thanks for pointing that out! I have updated the issue number in the PR and commit description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:4,usability,Close,Closes,4,> > Closes #16604. > . > What is the correct issue number? This is the number of xrootd/ssl PR. Thanks for pointing that out! I have updated the issue number in the PR and commit description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,deployability,depend,dependency,90,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,integrability,depend,dependency,90,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,modifiability,depend,dependency,90,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,safety,depend,dependency,90,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,testability,depend,dependency,90,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16606:398,deployability,depend,dependency,398,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:398,integrability,depend,dependency,398,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:76,modifiability,concern,concerns,76,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:292,modifiability,inherit,inherit,292,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:398,modifiability,depend,dependency,398,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:130,reliability,doe,doesn,130,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:398,safety,depend,dependency,398,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:425,safety,avoid,avoided,425,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:361,security,auth,author,361,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:76,testability,concern,concerns,76,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:398,testability,depend,dependency,398,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/issues/16612:39,availability,avail,available,39,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:140,deployability,modul,modules,140,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:140,modifiability,modul,modules,140,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:39,reliability,availab,available,39,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:39,safety,avail,available,39,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:140,safety,modul,modules,140,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:39,security,availab,available,39,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:187,availability,avail,available,187,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:52,deployability,depend,dependecy,52,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:112,energy efficiency,core,core,112,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:52,integrability,depend,dependecy,52,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:52,modifiability,depend,dependecy,52,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:187,reliability,availab,available,187,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:52,safety,depend,dependecy,52,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:187,safety,avail,available,187,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:117,security,team,team,117,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:187,security,availab,available,187,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:52,testability,depend,dependecy,52,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:17,deployability,fail,failed,17,cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:17,reliability,fail,failed,17,cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:6,safety,test,tests,6,cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:6,testability,test,tests,6,cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:19,deployability,fail,failed,19,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:19,reliability,fail,failed,19,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:8,safety,test,tests,8,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:142,safety,test,testing,142,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:8,testability,test,tests,8,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:142,testability,test,testing,142,"> cmssw tests also failed due to missing gtest requirement. I guess we can use the builtin gtest? The cmake cited above only gets called with testing=ON, so this is broken even with builtin gtest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:180,deployability,depend,dependency,180,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:262,deployability,build,building,262,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:180,integrability,depend,dependency,180,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:180,modifiability,depend,dependency,180,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:45,safety,test,test,45,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:180,safety,depend,dependency,180,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:223,safety,test,test,223,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:275,safety,test,tests,275,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:287,safety,test,testing,287,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:45,testability,test,test,45,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:180,testability,depend,dependency,180,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:223,testability,test,test,223,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:275,testability,test,tests,275,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:287,testability,test,testing,287,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:50,usability,support,support,50,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:228,usability,support,support,228,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:15,deployability,fail,fail-on-missing,15,as long as `if(fail-on-missing)` is still respected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:15,reliability,fail,fail-on-missing,15,as long as `if(fail-on-missing)` is still respected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:366,availability,down,downstream,366,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:93,deployability,configurat,configuration,93,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:137,deployability,depend,dependency,137,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:163,deployability,fail,fail-on-missing,163,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:268,deployability,configurat,configuration,268,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:312,deployability,build,build,312,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:465,deployability,build,build,465,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:471,deployability,depend,dependency,471,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:503,deployability,fail,fail-on-missin,503,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:535,deployability,fail,fail-on-missing,535,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:93,integrability,configur,configuration,93,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:137,integrability,depend,dependency,137,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:268,integrability,configur,configuration,268,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:471,integrability,depend,dependency,471,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:93,modifiability,configur,configuration,93,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:137,modifiability,depend,dependency,137,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:268,modifiability,configur,configuration,268,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:471,modifiability,depend,dependency,471,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:163,reliability,fail,fail-on-missing,163,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:503,reliability,fail,fail-on-missin,503,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:535,reliability,fail,fail-on-missing,535,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:76,safety,test,testsupport,76,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:137,safety,depend,dependency,137,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:419,safety,test,tests,419,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:471,safety,depend,dependency,471,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:93,security,configur,configuration,93,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:268,security,configur,configuration,268,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:76,testability,test,testsupport,76,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:137,testability,depend,dependency,137,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:282,testability,simpl,simple,282,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:414,testability,unit,unit,414,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:419,testability,test,tests,419,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:471,testability,depend,dependency,471,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:282,usability,simpl,simple,282,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:356,usability,usab,usable,356,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags. 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests. 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`. 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/pull/16616:79,energy efficiency,model,model,79,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:55,integrability,interfac,interface,55,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:55,interoperability,interfac,interface,55,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:55,modifiability,interfac,interface,55,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:0,performance,Lock,Lock,0,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:0,security,Lock,Lock,0,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:79,security,model,model,79,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16621:104,deployability,build,building,104,"Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:42,usability,help,help,42,"Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:106,deployability,build,building,106,"> Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known? For reading that may work. For writing, the problem is that we need to write out the header (including the projected fields) before we know about possible model extensions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:361,energy efficiency,model,model,361,"> Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known? For reading that may work. For writing, the problem is that we need to write out the header (including the projected fields) before we know about possible model extensions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:367,modifiability,extens,extensions,367,"> Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known? For reading that may work. For writing, the problem is that we need to write out the header (including the projected fields) before we know about possible model extensions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:361,security,model,model,361,"> Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known? For reading that may work. For writing, the problem is that we need to write out the header (including the projected fields) before we know about possible model extensions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16621:44,usability,help,help,44,"> Thinking about this again, would it maybe help to keep projected fields and alias columns separate when building the descriptor and only assign the column IDs when once all physical column IDs are known? For reading that may work. For writing, the problem is that we need to write out the header (including the projected fields) before we know about possible model extensions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16623:3,availability,failur,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:3,deployability,fail,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:3,performance,failur,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:3,reliability,fail,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16624:9,availability,failur,failures,9,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16624:9,deployability,fail,failures,9,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16624:9,performance,failur,failures,9,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16624:9,reliability,fail,failures,9,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16624:4,safety,test,test,4,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16624:4,testability,test,test,4,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16624
https://github.com/root-project/root/pull/16628:193,deployability,compos,compose,193,"> LGTM - is this something to put into the spec? Good question. I'm still undecided. We could enforce the current restrictions in the spec. On the other hand, we can also argue that if you can compose a projection from the existing fields and columns, it's fine. If we read projections as native fields, that should not pose a problem. Only if we try to reconstruct the projections as such, we may get a problem. Which could be considered an implementation limitation...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16628
https://github.com/root-project/root/pull/16628:106,energy efficiency,current,current,106,"> LGTM - is this something to put into the spec? Good question. I'm still undecided. We could enforce the current restrictions in the spec. On the other hand, we can also argue that if you can compose a projection from the existing fields and columns, it's fine. If we read projections as native fields, that should not pose a problem. Only if we try to reconstruct the projections as such, we may get a problem. Which could be considered an implementation limitation...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16628
https://github.com/root-project/root/pull/16628:193,modifiability,compos,compose,193,"> LGTM - is this something to put into the spec? Good question. I'm still undecided. We could enforce the current restrictions in the spec. On the other hand, we can also argue that if you can compose a projection from the existing fields and columns, it's fine. If we read projections as native fields, that should not pose a problem. Only if we try to reconstruct the projections as such, we may get a problem. Which could be considered an implementation limitation...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16628
https://github.com/root-project/root/pull/16630:73,deployability,log,log,73,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16630:51,integrability,messag,message,51,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16630:51,interoperability,messag,message,51,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16630:73,safety,log,log,73,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16630:73,security,log,log,73,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16630:73,testability,log,log,73,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16630
https://github.com/root-project/root/pull/16635:0,availability,Failur,Failure,0,Failure has nothing todo with PR - let try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:0,deployability,Fail,Failure,0,Failure has nothing todo with PR - let try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:0,performance,Failur,Failure,0,Failure has nothing todo with PR - let try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:0,reliability,Fail,Failure,0,Failure has nothing todo with PR - let try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/issues/16638:489,deployability,build,build,489,Can you try to add the `/DNOMINMAX ` compilation flag and try again? And check also the output of `root-config --cflags`:. ```. C:\root-dev\rootdev>root-config --cflags. -nologo -Zc:__cplusplus -std:c++17 -GR -FIw32pragma.h -FIsehmap.h -MD -EHsc -wd4141 -wd4291 -wd4244 -wd4049 -wd4146 -wd4250 -wd4624 -wd4267 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -O2 -IC:\root-dev\build\x64\release\include. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:499,deployability,releas,release,499,Can you try to add the `/DNOMINMAX ` compilation flag and try again? And check also the output of `root-config --cflags`:. ```. C:\root-dev\rootdev>root-config --cflags. -nologo -Zc:__cplusplus -std:c++17 -GR -FIw32pragma.h -FIsehmap.h -MD -EHsc -wd4141 -wd4291 -wd4244 -wd4049 -wd4146 -wd4250 -wd4624 -wd4267 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -O2 -IC:\root-dev\build\x64\release\include. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/pull/16640:219,testability,understand,understand,219,"@pcanal, this makes things work for me, albeit I am not sure it's the correct thing to do. I think the real issue is https://github.com/root-project/root/blob/master/tree/tree/src/TBranch.cxx#L1413 but I couldn't quite understand why / how to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:194,integrability,interfac,interface,194,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:325,integrability,interfac,interface,325,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:194,interoperability,interfac,interface,194,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:325,interoperability,interfac,interface,325,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:194,modifiability,interfac,interface,194,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:325,modifiability,interfac,interface,325,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:268,reliability,doe,does,268,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:176,usability,interact,interact,176,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:226,usability,clear,clear,226,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:29,availability,Error,Error,29,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:106,availability,fault,fault,106,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:15,deployability,fail,failing,15,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:70,deployability,Contain,ContainerId,70,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:106,energy efficiency,fault,fault,106,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:59,modifiability,Paramet,Parameter,59,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:29,performance,Error,Error,29,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:106,performance,fault,fault,106,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:15,reliability,fail,failing,15,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:106,reliability,fault,fault,106,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:5,safety,test,tests,5,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:29,safety,Error,Error,29,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:106,safety,fault,fault,106,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:5,testability,test,tests,5,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:29,usability,Error,Error,29,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,deployability,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,integrability,integration test,integration tests,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,interoperability,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,modifiability,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,reliability,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:66,safety,test,tests,66,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,security,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:54,testability,integr,integration,54,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:66,testability,test,tests,66,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:72,interoperability,compatib,compatibility,72,"Nevermind, I forgot to rebuild something and this does indeed break ABI compatibility because of the newly introduced vector..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:50,reliability,doe,does,50,"Nevermind, I forgot to rebuild something and this does indeed break ABI compatibility because of the newly introduced vector..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:76,deployability,API,API,76,@ktf Can you test the additional commit that I pushed here? This is another API breaking change (new function).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:76,integrability,API,API,76,@ktf Can you test the additional commit that I pushed here? This is another API breaking change (new function).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:76,interoperability,API,API,76,@ktf Can you test the additional commit that I pushed here? This is another API breaking change (new function).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:13,safety,test,test,13,@ktf Can you test the additional commit that I pushed here? This is another API breaking change (new function).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:13,testability,test,test,13,@ktf Can you test the additional commit that I pushed here? This is another API breaking change (new function).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:67,usability,user,user-attachments,67,This seems to leak somewhere. I have:. ![image](https://github.com/user-attachments/assets/5ad3a74a-d7cc-4700-995e-fd6ead11a9c0). where it used to be flat.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:22,performance,memor,memory,22,I pushed a fix to the memory leak.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:22,usability,memor,memory,22,I pushed a fix to the memory leak.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:55,performance,memor,memory,55,"On the other hand, it seems to have fixed the leak and memory usage is back to expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:55,usability,memor,memory,55,"On the other hand, it seems to have fixed the leak and memory usage is back to expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:141,deployability,fail,fails,141,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:157,interoperability,platform,platforms,157,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:125,performance,memor,memory,125,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:141,reliability,fail,fails,141,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:58,safety,test,test,58,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:58,testability,test,test,58,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:125,usability,memor,memory,125,"@ktf @dpiparo The only problem left is a problem with the test itself. When prefetching is enabled requires more than 2Gb of memory and thus fails on 32 bit platforms. I.e @ktf you can use the PR as-is if need be, it shall be merge soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:271,availability,cluster,cluster,271,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:306,availability,cluster,cluster,306,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:702,availability,Cluster,ClusterPrefetching,702,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:865,availability,cluster,cluster,865,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:992,availability,Cluster,ClusterPrefetching,992,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:271,deployability,cluster,cluster,271,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:306,deployability,cluster,cluster,306,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:702,deployability,Cluster,ClusterPrefetching,702,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:865,deployability,cluster,cluster,865,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:992,deployability,Cluster,ClusterPrefetching,992,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:244,energy efficiency,load,load,244,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:426,energy efficiency,optim,optimization,426,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:506,energy efficiency,optim,optimization,506,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:1012,energy efficiency,optim,optimization,1012,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:568,integrability,buffer,buffer,568,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:377,modifiability,deco,decompress,377,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:244,performance,load,load,244,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:282,performance,memor,memory,282,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:426,performance,optimiz,optimization,426,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:506,performance,optimiz,optimization,506,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:528,performance,memor,memory,528,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:1012,performance,optimiz,optimization,1012,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:964,reliability,doe,does,964,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:1031,reliability,doe,does,1031,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:519,safety,avoid,avoids,519,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:282,usability,memor,memory,282,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:528,usability,memor,memory,528,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:587,usability,user,user,587,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`? The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:602,deployability,patch,patch,602,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:60,energy efficiency,reduc,reduce,60,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:280,performance,IOP,IOPS,280,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:602,safety,patch,patch,602,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:602,security,patch,patch,602,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:144,testability,simpl,simply,144,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:526,testability,simpl,simply,526,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:558,testability,understand,understand,558,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:144,usability,simpl,simply,144,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:451,usability,Stop,StopCacheLearningPhase,451,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:526,usability,simpl,simply,526,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++. // Was affected by https://github.com/root-project/root/issues/8962. // Re-enabling this seems to cut the number of IOPS in half. tree->SetCacheSize(25000000);. //tree->SetClusterPrefetch(true);. for (auto& reader : mBranchReaders) {. tree->AddBranchToCache(reader->branch());. }. tree->StopCacheLearningPhase();. ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:62,energy efficiency,reduc,reduce,62,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:247,performance,cach,cache,247,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:270,performance,cach,cache,270,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:117,reliability,doe,does,117,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:199,testability,simpl,simply,199,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:199,usability,simpl,simply,199,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:276,usability,learn,learning,276,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:38,performance,cach,cache,38,"> What is the change (increase of the cache size or explicit cache learning or both)? Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:61,performance,cach,cache,61,"> What is the change (increase of the cache size or explicit cache learning or both)? Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:96,performance,cach,caching,96,"> What is the change (increase of the cache size or explicit cache learning or both)? Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:67,usability,learn,learning,67,"> What is the change (increase of the cache size or explicit cache learning or both)? Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:392,availability,cluster,cluster,392,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:772,availability,cluster,cluster,772,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:798,availability,cluster,cluster,798,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:392,deployability,cluster,cluster,392,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:772,deployability,cluster,cluster,772,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:798,deployability,cluster,cluster,798,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:384,energy efficiency,current,current,384,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:562,energy efficiency,load,load,562,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:790,energy efficiency,current,current,790,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:712,integrability,asynchron,asynchronously,712,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:834,integrability,sub,subject,834,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:133,modifiability,exten,extend,133,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:348,modifiability,deco,decompression,348,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:216,performance,disk,disk,216,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:301,performance,disk,disk,301,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:437,performance,memor,memory,437,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:504,performance,perform,performance,504,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:562,performance,load,load,562,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:712,performance,asynch,asynchronously,712,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:267,security,control,control,267,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:267,testability,control,control,267,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:437,usability,memor,memory,437,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:504,usability,perform,performance,504,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk. * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries. * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16640:43,usability,confirm,confirm,43,"Ok, thank you for your explanations. I can confirm that 1 works already for me. I will try 3. 2 I probably do not need, actually.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16642:192,deployability,API,API,192,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:192,integrability,API,API,192,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:97,interoperability,specif,specific,97,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:192,interoperability,API,API,192,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:206,interoperability,specif,specification,206,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:59,performance,time,time,59,"Since we are changing the name of the file, this is a good time to ask whether it should be more specific. For example a variation on `BinaryFormatSpecification.md` to distinguish it from any API/C++ level specification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:69,deployability,API,API,69,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:69,integrability,API,API,69,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:26,interoperability,specif,specification,26,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:69,interoperability,API,API,69,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:76,interoperability,specif,specification,76,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:4,usability,person,personally,4,"I'm personally fine with `specification`, as I wouldn't consider our API a ""specification"" in any sense of the term: just a particular implementation of the binary specs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:66,availability,consist,consistency,66,"Here is a suggestion with `BinaryFormatSpecification.md` and, for consistency, `Architecture.md` (capitalized).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:80,interoperability,Architectur,Architecture,80,"Here is a suggestion with `BinaryFormatSpecification.md` and, for consistency, `Architecture.md` (capitalized).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16642:66,usability,consist,consistency,66,"Here is a suggestion with `BinaryFormatSpecification.md` and, for consistency, `Architecture.md` (capitalized).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16642
https://github.com/root-project/root/pull/16644:64,security,access,accessible,64,"I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16644
https://github.com/root-project/root/pull/16644:59,usability,user,user-accessible,59,"I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16644
https://github.com/root-project/root/pull/16644:230,energy efficiency,current,currently,230,"> I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no? I guess it could be moved to the `Internal` namespace. It is currently used for the `RNTupleCollectionView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16644
https://github.com/root-project/root/pull/16644:66,security,access,accessible,66,"> I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no? I guess it could be moved to the `Internal` namespace. It is currently used for the `RNTupleCollectionView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16644
https://github.com/root-project/root/pull/16644:61,usability,user,user-accessible,61,"> I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no? I guess it could be moved to the `Internal` namespace. It is currently used for the `RNTupleCollectionView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16644
https://github.com/root-project/root/pull/16645:12,interoperability,format,format,12,Note: clang-format is fine with the changes except that it doesn't understand string literals.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:59,reliability,doe,doesn,59,Note: clang-format is fine with the changes except that it doesn't understand string literals.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:44,safety,except,except,44,Note: clang-format is fine with the changes except that it doesn't understand string literals.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:67,testability,understand,understand,67,Note: clang-format is fine with the changes except that it doesn't understand string literals.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/issues/16654:16,deployability,version,version,16,"The builtin tbb version is 2021.9, maybe that's too old for the newest Ubuntu? Can you install tbb on the system and build root with `builtin_tbb=OFF`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:87,deployability,instal,install,87,"The builtin tbb version is 2021.9, maybe that's too old for the newest Ubuntu? Can you install tbb on the system and build root with `builtin_tbb=OFF`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:117,deployability,build,build,117,"The builtin tbb version is 2021.9, maybe that's too old for the newest Ubuntu? Can you install tbb on the system and build root with `builtin_tbb=OFF`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:16,integrability,version,version,16,"The builtin tbb version is 2021.9, maybe that's too old for the newest Ubuntu? Can you install tbb on the system and build root with `builtin_tbb=OFF`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:16,modifiability,version,version,16,"The builtin tbb version is 2021.9, maybe that's too old for the newest Ubuntu? Can you install tbb on the system and build root with `builtin_tbb=OFF`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:13,deployability,updat,updating,13,"Hi,. Indeed, updating to the latest TBB solved that issue, thanks! Just to add, I also had to disable: clad, xrootd and davix to make the code compile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:13,safety,updat,updating,13,"Hi,. Indeed, updating to the latest TBB solved that issue, thanks! Just to add, I also had to disable: clad, xrootd and davix to make the code compile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:13,security,updat,updating,13,"Hi,. Indeed, updating to the latest TBB solved that issue, thanks! Just to add, I also had to disable: clad, xrootd and davix to make the code compile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:48,deployability,updat,updating,48,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:73,deployability,version,version,73,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:73,integrability,version,version,73,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:73,modifiability,version,version,73,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:48,safety,updat,updating,48,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:48,security,updat,updating,48,"Thanks for the report! Maybe we should consider updating the builtin TBB version, so that other people won't run into the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,deployability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,integrability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,interoperability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,modifiability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:113,modifiability,pac,packages,113,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,reliability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:202,safety,test,tests,202,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,security,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:50,testability,integr,integrating,50,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:202,testability,test,tests,202,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:88,usability,confirm,confirm,88,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system. We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/pull/16659:91,usability,behavi,behavior,91,So this affected reading an RNTuple back from a TFile? What would be the visible change in behavior after this fix?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16659
https://github.com/root-project/root/pull/16659:334,availability,cluster,clusters,334,"> So this affected reading an RNTuple back from a TFile? What would be the visible change in behavior after this fix? The effect is that ROOT uses much fewer read requests to get the data. At the moment, every page is a read request. When the fix is merged, I expect more or less $(\text{number of top-level fields} + \text{number of clusters})$. You'll be able to verify this in the metrics output, looking at the `nPageRead` and the `nRead` and `nReadV` counters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16659
https://github.com/root-project/root/pull/16659:334,deployability,cluster,clusters,334,"> So this affected reading an RNTuple back from a TFile? What would be the visible change in behavior after this fix? The effect is that ROOT uses much fewer read requests to get the data. At the moment, every page is a read request. When the fix is merged, I expect more or less $(\text{number of top-level fields} + \text{number of clusters})$. You'll be able to verify this in the metrics output, looking at the `nPageRead` and the `nRead` and `nReadV` counters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16659
https://github.com/root-project/root/pull/16659:365,testability,verif,verify,365,"> So this affected reading an RNTuple back from a TFile? What would be the visible change in behavior after this fix? The effect is that ROOT uses much fewer read requests to get the data. At the moment, every page is a read request. When the fix is merged, I expect more or less $(\text{number of top-level fields} + \text{number of clusters})$. You'll be able to verify this in the metrics output, looking at the `nPageRead` and the `nRead` and `nReadV` counters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16659
https://github.com/root-project/root/pull/16659:93,usability,behavi,behavior,93,"> So this affected reading an RNTuple back from a TFile? What would be the visible change in behavior after this fix? The effect is that ROOT uses much fewer read requests to get the data. At the moment, every page is a read request. When the fix is merged, I expect more or less $(\text{number of top-level fields} + \text{number of clusters})$. You'll be able to verify this in the metrics output, looking at the `nPageRead` and the `nRead` and `nReadV` counters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16659
https://github.com/root-project/root/pull/16665:43,deployability,build,build,43,Let's wait for all platforms to finish the build 😅 . Thanks to @andresailer and team for providing these packages so easily from the stacks web infra!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:133,deployability,stack,stacks,133,Let's wait for all platforms to finish the build 😅 . Thanks to @andresailer and team for providing these packages so easily from the stacks web infra!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:19,interoperability,platform,platforms,19,Let's wait for all platforms to finish the build 😅 . Thanks to @andresailer and team for providing these packages so easily from the stacks web infra!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:105,modifiability,pac,packages,105,Let's wait for all platforms to finish the build 😅 . Thanks to @andresailer and team for providing these packages so easily from the stacks web infra!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:80,security,team,team,80,Let's wait for all platforms to finish the build 😅 . Thanks to @andresailer and team for providing these packages so easily from the stacks web infra!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16667:39,deployability,fail,failues,39,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:71,deployability,instal,install,71,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:282,deployability,configurat,configuration,282,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:282,integrability,configur,configuration,282,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:282,modifiability,configur,configuration,282,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:39,reliability,fail,failues,39,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:258,safety,test,test,258,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:282,security,configur,configuration,282,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:234,testability,coverag,coverage,234,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:258,testability,test,test,258,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:108,usability,progress,progress,108,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/issues/16668:16,deployability,build,build,16,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:157,deployability,build,build,157,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:349,deployability,build,build,349,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:561,deployability,build,build,561,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:123,interoperability,plug,plugins,123,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:315,interoperability,plug,plugins,315,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:527,interoperability,plug,plugins,527,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:117,usability,tool,tools,117,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:309,usability,tool,tools,309,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:521,usability,tool,tools,521,To fix a broken build one has to remove both:. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. ```. and. ```. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:29,deployability,build,build,29,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:297,deployability,upgrad,upgrades,297,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:297,modifiability,upgrad,upgrades,297,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:455,testability,plan,planned,455,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:330,usability,support,supported,330,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:392,usability,clear,clearly,392,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:430,usability,close,close,430,"> (Most likely) To reproduce build with https://github.com/root-project/root/commit/3e03f7891c07828b32cf7efe4382202ecdca1a79 and then rebuild the same directory commit https://github.com/root-project/root/commit/7f006742bb1d1786d2a8c7c06e4e20cf8900e777 (llvm 18). Incremental rebuilds across LLVM upgrades are (intentionally) not supported - too many things move around. This has always been clearly communicated and I propose to close this issue as ""not planned"" (and I misclicked)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/pull/16671:15,testability,context,context,15,"Just for extra context, note that there was a similar (albeit not equal) set of changes which spawned quite some discussion a while back https://github.com/root-project/root/pull/10753. Also, I would try to understand why we need all that extra bookeeping in the tutorials, I don't believe we should introduce those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:207,testability,understand,understand,207,"Just for extra context, note that there was a similar (albeit not equal) set of changes which spawned quite some discussion a while back https://github.com/root-project/root/pull/10753. Also, I would try to understand why we need all that extra bookeeping in the tutorials, I don't believe we should introduce those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:314,interoperability,specif,specifically,314,"You are right, extra boilerplate in the tutorials is not good. But This PR is not meant to me merged as is, I did it to explore why `ClearProxiedObjects()` is needed also for hard shutdown. And the set of code that I needed to add to the tutorials made to reason more or less clear: there is some issue with `TH1` specifically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:133,usability,Clear,ClearProxiedObjects,133,"You are right, extra boilerplate in the tutorials is not good. But This PR is not meant to me merged as is, I did it to explore why `ClearProxiedObjects()` is needed also for hard shutdown. And the set of code that I needed to add to the tutorials made to reason more or less clear: there is some issue with `TH1` specifically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:276,usability,clear,clear,276,"You are right, extra boilerplate in the tutorials is not good. But This PR is not meant to me merged as is, I did it to explore why `ClearProxiedObjects()` is needed also for hard shutdown. And the set of code that I needed to add to the tutorials made to reason more or less clear: there is some issue with `TH1` specifically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/issues/16673:235,security,sign,signal,235,"Hello,. To explain the context, in workspace we usually use RooProdPdf to attach systematics constraint pdf to the S+B RooAddPdf. So the different behaviors between RooAddPdf and RooProdPdf will cause issue when running blind fit with signal region vetoed. It would be good to have RooProdPdf return to 6.26 behavior. Best,. Hongtao",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:23,testability,context,context,23,"Hello,. To explain the context, in workspace we usually use RooProdPdf to attach systematics constraint pdf to the S+B RooAddPdf. So the different behaviors between RooAddPdf and RooProdPdf will cause issue when running blind fit with signal region vetoed. It would be good to have RooProdPdf return to 6.26 behavior. Best,. Hongtao",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:147,usability,behavi,behaviors,147,"Hello,. To explain the context, in workspace we usually use RooProdPdf to attach systematics constraint pdf to the S+B RooAddPdf. So the different behaviors between RooAddPdf and RooProdPdf will cause issue when running blind fit with signal region vetoed. It would be good to have RooProdPdf return to 6.26 behavior. Best,. Hongtao",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:308,usability,behavi,behavior,308,"Hello,. To explain the context, in workspace we usually use RooProdPdf to attach systematics constraint pdf to the S+B RooAddPdf. So the different behaviors between RooAddPdf and RooProdPdf will cause issue when running blind fit with signal region vetoed. It would be good to have RooProdPdf return to 6.26 behavior. Best,. Hongtao",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:47,integrability,topic,topic,47,"Hello! Just to provide more details about this topic. If I change the . `Range(""LEFT,RIGHT"")`. in ""fitTo"" to . `Range(""BLIND"")`. It will give something confusing. <img width=""999"" alt=""image"" src=""https://github.com/user-attachments/assets/14753346-d7ef-4dc6-a43f-9a4869867984"">. And if I add a signal to it . <img width=""636"" alt=""image"" src=""https://github.com/user-attachments/assets/92ed5cf8-c9c8-478a-abaa-2b8d5bafe348"">. Please remind me if I make any mistake. Best regards,. Yanqi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:295,security,sign,signal,295,"Hello! Just to provide more details about this topic. If I change the . `Range(""LEFT,RIGHT"")`. in ""fitTo"" to . `Range(""BLIND"")`. It will give something confusing. <img width=""999"" alt=""image"" src=""https://github.com/user-attachments/assets/14753346-d7ef-4dc6-a43f-9a4869867984"">. And if I add a signal to it . <img width=""636"" alt=""image"" src=""https://github.com/user-attachments/assets/92ed5cf8-c9c8-478a-abaa-2b8d5bafe348"">. Please remind me if I make any mistake. Best regards,. Yanqi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:216,usability,user,user-attachments,216,"Hello! Just to provide more details about this topic. If I change the . `Range(""LEFT,RIGHT"")`. in ""fitTo"" to . `Range(""BLIND"")`. It will give something confusing. <img width=""999"" alt=""image"" src=""https://github.com/user-attachments/assets/14753346-d7ef-4dc6-a43f-9a4869867984"">. And if I add a signal to it . <img width=""636"" alt=""image"" src=""https://github.com/user-attachments/assets/92ed5cf8-c9c8-478a-abaa-2b8d5bafe348"">. Please remind me if I make any mistake. Best regards,. Yanqi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:363,usability,user,user-attachments,363,"Hello! Just to provide more details about this topic. If I change the . `Range(""LEFT,RIGHT"")`. in ""fitTo"" to . `Range(""BLIND"")`. It will give something confusing. <img width=""999"" alt=""image"" src=""https://github.com/user-attachments/assets/14753346-d7ef-4dc6-a43f-9a4869867984"">. And if I add a signal to it . <img width=""636"" alt=""image"" src=""https://github.com/user-attachments/assets/92ed5cf8-c9c8-478a-abaa-2b8d5bafe348"">. Please remind me if I make any mistake. Best regards,. Yanqi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/pull/16675:158,deployability,depend,dependency,158,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:332,deployability,build,build,332,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:237,energy efficiency,sustainab,sustainable,237,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:158,integrability,depend,dependency,158,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:146,interoperability,specif,specify,146,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:176,interoperability,xml,xml,176,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:308,interoperability,specif,specific,308,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:158,modifiability,depend,dependency,158,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:113,safety,test,tests,113,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:158,safety,depend,dependency,158,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:292,safety,test,tests,292,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:113,testability,test,tests,113,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:158,testability,depend,dependency,158,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:292,testability,test,tests,292,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:30,usability,prefer,preference,30,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:525,availability,avail,available,525,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:160,deployability,depend,dependency,160,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:334,deployability,build,build,334,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:382,deployability,depend,dependency,382,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:540,deployability,build,building,540,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:239,energy efficiency,sustainab,sustainable,239,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:160,integrability,depend,dependency,160,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:382,integrability,depend,dependency,382,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:148,interoperability,specif,specify,148,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:178,interoperability,xml,xml,178,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:310,interoperability,specif,specific,310,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:459,interoperability,XML,XML,459,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:560,interoperability,xml,xml,560,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:160,modifiability,depend,dependency,160,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:382,modifiability,depend,dependency,382,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:434,reliability,doe,doesn,434,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:525,reliability,availab,available,525,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:115,safety,test,tests,115,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:160,safety,depend,dependency,160,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:294,safety,test,tests,294,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:382,safety,depend,dependency,382,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:429,safety,test,test,429,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:525,safety,avail,available,525,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:525,security,availab,available,525,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:115,testability,test,tests,115,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:160,testability,depend,dependency,160,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:294,testability,test,tests,294,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:382,testability,depend,dependency,382,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:429,testability,test,test,429,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:32,usability,prefer,preference,32,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:533,availability,avail,available,533,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:162,deployability,depend,dependency,162,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:336,deployability,build,build,336,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:390,deployability,depend,dependency,390,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:548,deployability,build,building,548,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:241,energy efficiency,sustainab,sustainable,241,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:162,integrability,depend,dependency,162,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:390,integrability,depend,dependency,390,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:150,interoperability,specif,specify,150,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:180,interoperability,xml,xml,180,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:312,interoperability,specif,specific,312,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:467,interoperability,XML,XML,467,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:568,interoperability,xml,xml,568,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:162,modifiability,depend,dependency,162,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:390,modifiability,depend,dependency,390,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:442,reliability,doe,doesn,442,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:533,reliability,availab,available,533,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:117,safety,test,tests,117,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:162,safety,depend,dependency,162,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:296,safety,test,tests,296,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:390,safety,depend,dependency,390,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:437,safety,test,test,437,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:533,safety,avail,available,533,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:533,security,availab,available,533,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:117,testability,test,tests,117,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:162,testability,depend,dependency,162,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:296,testability,test,tests,296,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:390,testability,depend,dependency,390,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:437,testability,test,test,437,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16675:34,usability,prefer,preference,34,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. > . > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16684:2,integrability,sub,submit,2,I submit https://github.com/root-project/root/pull/16685 which may improve chrome behavior. If it does not help - we can merge this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:98,reliability,doe,does,98,I submit https://github.com/root-project/root/pull/16685 which may improve chrome behavior. If it does not help - we can merge this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:82,usability,behavi,behavior,82,I submit https://github.com/root-project/root/pull/16685 which may improve chrome behavior. If it does not help - we can merge this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:107,usability,help,help,107,I submit https://github.com/root-project/root/pull/16685 which may improve chrome behavior. If it does not help - we can merge this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:133,interoperability,platform,platforms,133,"@dpiparo, Fedora 39 is end-of-life in less than a month: https://endoflife.date/fedora. Do we really want to disable the test on all platforms just for that? Personally, I would rather remove Fedora 39, and maybe add Fedora 41 in a few weeks when it comes out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:121,safety,test,test,121,"@dpiparo, Fedora 39 is end-of-life in less than a month: https://endoflife.date/fedora. Do we really want to disable the test on all platforms just for that? Personally, I would rather remove Fedora 39, and maybe add Fedora 41 in a few weeks when it comes out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:121,testability,test,test,121,"@dpiparo, Fedora 39 is end-of-life in less than a month: https://endoflife.date/fedora. Do we really want to disable the test on all platforms just for that? Personally, I would rather remove Fedora 39, and maybe add Fedora 41 in a few weeks when it comes out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:158,usability,Person,Personally,158,"@dpiparo, Fedora 39 is end-of-life in less than a month: https://endoflife.date/fedora. Do we really want to disable the test on all platforms just for that? Personally, I would rather remove Fedora 39, and maybe add Fedora 41 in a few weeks when it comes out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:190,deployability,build,builds,190,web-based stressGraphics tests disabled now. With next PR https://github.com/root-project/root/pull/16691 I trying to re-enable them - after adjusting chrome handling. For last several test builds I saw no problem with `stressgraphics-chrome` on Fedora39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:25,safety,test,tests,25,web-based stressGraphics tests disabled now. With next PR https://github.com/root-project/root/pull/16691 I trying to re-enable them - after adjusting chrome handling. For last several test builds I saw no problem with `stressgraphics-chrome` on Fedora39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:185,safety,test,test,185,web-based stressGraphics tests disabled now. With next PR https://github.com/root-project/root/pull/16691 I trying to re-enable them - after adjusting chrome handling. For last several test builds I saw no problem with `stressgraphics-chrome` on Fedora39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:25,testability,test,tests,25,web-based stressGraphics tests disabled now. With next PR https://github.com/root-project/root/pull/16691 I trying to re-enable them - after adjusting chrome handling. For last several test builds I saw no problem with `stressgraphics-chrome` on Fedora39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:185,testability,test,test,185,web-based stressGraphics tests disabled now. With next PR https://github.com/root-project/root/pull/16691 I trying to re-enable them - after adjusting chrome handling. For last several test builds I saw no problem with `stressgraphics-chrome` on Fedora39,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/issues/16687:251,modifiability,paramet,parameter,251,"@guitargeek yes you are right. I see that, now, in `TH1::SavePrimitive` we have:. ```. out << "","" << GetXaxis()->GetXmin(). << "","" << GetXaxis()->GetXmax();. ```. So, the precision is not defined. But, the `setprecision` method requires an int `n` as parameter, defining the precision. What would be the value `n` in the general case ? We can surely make your example work with a proper value of `n` but that does not mean it will work in all cases. In the example on the reference page you pointed Pi is printed with different precision. Up to 19. We can put 19, but that's kind of arbitrary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:409,reliability,doe,does,409,"@guitargeek yes you are right. I see that, now, in `TH1::SavePrimitive` we have:. ```. out << "","" << GetXaxis()->GetXmin(). << "","" << GetXaxis()->GetXmax();. ```. So, the precision is not defined. But, the `setprecision` method requires an int `n` as parameter, defining the precision. What would be the value `n` in the general case ? We can surely make your example work with a proper value of `n` but that does not mean it will work in all cases. In the example on the reference page you pointed Pi is printed with different precision. Up to 19. We can put 19, but that's kind of arbitrary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16689:78,energy efficiency,draw,drawings,78,"Disabling `webgui` means disabling `TWebCanvas`, which is required to produce drawings in jupyter notebook now. One need to disable all graphics-related tests in jupyter after disabling webgui.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:153,safety,test,tests,153,"Disabling `webgui` means disabling `TWebCanvas`, which is required to produce drawings in jupyter notebook now. One need to disable all graphics-related tests in jupyter after disabling webgui.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:153,testability,test,tests,153,"Disabling `webgui` means disabling `TWebCanvas`, which is required to produce drawings in jupyter notebook now. One need to disable all graphics-related tests in jupyter after disabling webgui.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/pull/16693:632,energy efficiency,current,currently,632,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:941,energy efficiency,draw,drawn,941,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:193,integrability,sub,subfield,193,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:466,integrability,sub,subfields,466,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:769,integrability,sub,subfield,769,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:691,modifiability,scal,scalar,691,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:228,safety,reme,remembers,228,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:14,testability,understand,understand,14,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:528,usability,Custom,CustomStruct,528,"> As far as I understand the desired effect, would it be sufficient to have `RNTupleModel::RegisterSubField(std::string_view qualifiedFieldName)` which searches the added fields and places the subfield in the default entry (and remembers it for future entries)? Thanks for this suggestion, that's a way better approach indeed! . I have changed the PR into draft mode because I realize there are a few more things to address, most notably how to deal with collection subfields. If I have a field `structVec` of type `std::vector<CustomStruct>` and I want to register `structVec._0.s` (where `s` is a `std::string` data member), this currently runs without issue, but the strings are added as scalar values to the entry. Some extra machinery is required to register this subfield in the entry as a `std::vector<std::string>`, which would (I believe) be the desired outcome. The RNTuple datasource takes the same approach, so inspration can be drawn from this implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:429,energy efficiency,model,model,429,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:154,integrability,sub,subfield,154,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:451,integrability,sub,subfields,451,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:274,performance,time,times,274,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:283,performance,memor,memory,283,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:402,performance,parallel,parallel,402,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:116,reliability,doe,doesn,116,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:163,security,access,access,163,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:429,security,model,model,429,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:193,usability,intuit,intuitively,193,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:283,usability,memor,memory,283,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:431,energy efficiency,model,model,431,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:635,energy efficiency,model,models,635,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:156,integrability,sub,subfield,156,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:453,integrability,sub,subfields,453,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:658,integrability,sub,subfields,658,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:276,performance,time,times,276,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:285,performance,memor,memory,285,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:404,performance,parallel,parallel,404,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:118,reliability,doe,doesn,118,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:593,safety,compl,completely,593,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:165,security,access,access,165,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:431,security,model,model,431,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:593,security,compl,completely,593,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:635,security,model,models,635,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:195,usability,intuit,intuitively,195,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16693:285,usability,memor,memory,285,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields? This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16694:34,safety,test,tests,34,Do we have a way to run the cling tests in the ci?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:34,testability,test,tests,34,Do we have a way to run the cling tests in the ci?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:36,safety,test,tests,36,> Do we have a way to run the cling tests in the ci? That would be https://github.com/root-project/root/issues/15230,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:36,testability,test,tests,36,> Do we have a way to run the cling tests in the ci? That would be https://github.com/root-project/root/issues/15230,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:169,reliability,Doe,Does,169,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:38,safety,test,tests,38,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:154,safety,test,tests,154,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:211,safety,test,testsuite,211,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:38,testability,test,tests,38,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:154,testability,test,tests,154,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:211,testability,test,testsuite,211,"> > Do we have a way to run the cling tests in the ci? > . > That would be #15230. Ok, so it's not there yet. @ferdymercury, did you try to run the cling tests locally? Does this change still lead to successful testsuite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:68,performance,time,time,68,"No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: https://github.com/root-project/cling/pull/174#issuecomment-313743374",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:81,safety,test,tested,81,"No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: https://github.com/root-project/cling/pull/174#issuecomment-313743374",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:81,testability,test,tested,81,"No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: https://github.com/root-project/cling/pull/174#issuecomment-313743374",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:70,performance,time,time,70,"> No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: [root-project/cling#174 (comment)](https://github.com/root-project/cling/pull/174#issuecomment-313743374). Ok, 7 years ago the tests were fine. Are they now? We should probably implement the feature request you mentioned earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:83,safety,test,tested,83,"> No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: [root-project/cling#174 (comment)](https://github.com/root-project/cling/pull/174#issuecomment-313743374). Ok, 7 years ago the tests were fine. Are they now? We should probably implement the feature request you mentioned earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:252,safety,test,tests,252,"> No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: [root-project/cling#174 (comment)](https://github.com/root-project/cling/pull/174#issuecomment-313743374). Ok, 7 years ago the tests were fine. Are they now? We should probably implement the feature request you mentioned earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:83,testability,test,tested,83,"> No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: [root-project/cling#174 (comment)](https://github.com/root-project/cling/pull/174#issuecomment-313743374). Ok, 7 years ago the tests were fine. Are they now? We should probably implement the feature request you mentioned earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:252,testability,test,tests,252,"> No, I didn't, sorry. I just rebased an existing PR, I think at that time, it was tested with jenkins. See discussion here: [root-project/cling#174 (comment)](https://github.com/root-project/cling/pull/174#issuecomment-313743374). Ok, 7 years ago the tests were fine. Are they now? We should probably implement the feature request you mentioned earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16695:280,deployability,API,API,280,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:273,integrability,pub,public,273,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:280,integrability,API,API,280,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:552,integrability,wrap,wrapping,552,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:280,interoperability,API,API,280,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:70,performance,perform,performance-critical,70,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:330,performance,perform,performance-critical,330,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:605,safety,avoid,avoids,605,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:70,usability,perform,performance-critical,70,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:330,usability,perform,performance-critical,330,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:427,usability,user,user,427,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16703:330,deployability,build,build,330,From my side PR is ok - I did not found any side effects. Also several eve7 tutorials can be compiled properly with ACLiC. But maybe @osschar or @alja see other reasons? Can you check that your code works after these two lines removed `ROOTConfig.cmake` file? One do not need to apply PR - just edit this file by hands and try to build/run your examples. Eventually you need to add into your cmake files . ```. find_package(ROOT REQUIRED ROOTEve). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16703
https://github.com/root-project/root/pull/16703:355,integrability,Event,Eventually,355,From my side PR is ok - I did not found any side effects. Also several eve7 tutorials can be compiled properly with ACLiC. But maybe @osschar or @alja see other reasons? Can you check that your code works after these two lines removed `ROOTConfig.cmake` file? One do not need to apply PR - just edit this file by hands and try to build/run your examples. Eventually you need to add into your cmake files . ```. find_package(ROOT REQUIRED ROOTEve). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16703
https://github.com/root-project/root/pull/16705:4,availability,failur,failures,4,All failures not related to PR changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16705:4,deployability,fail,failures,4,All failures not related to PR changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16705:4,performance,failur,failures,4,All failures not related to PR changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16705:4,reliability,fail,failures,4,All failures not related to PR changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16707:363,availability,slo,slower,363,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:778,availability,error,errors,778,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:464,deployability,version,version,464,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:149,energy efficiency,current,current,149,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:727,energy efficiency,reduc,reduced,727,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:464,integrability,version,version,464,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:464,modifiability,version,version,464,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:238,performance,time,time,238,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:778,performance,error,errors,778,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:363,reliability,slo,slower,363,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:811,reliability,doe,does,811,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:21,safety,review,review,21,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:84,safety,avoid,avoid,84,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:778,safety,error,errors,778,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:915,safety,test,tested,915,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:1060,safety,test,tested,1060,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:668,security,hack,hack,668,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:21,testability,review,review,21,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:915,testability,test,tested,915,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:1060,testability,test,tested,1060,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:157,usability,statu,status,157,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:778,usability,error,errors,778,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:806,usability,user,user,806,"Thanks a lot for the review and the questions! > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes? It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16709:35,deployability,contain,container,35,"Closed and opened to check the new container images, where TF 2.4 is installed, and not 2.5 that does not work on ARM64.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16709:69,deployability,instal,installed,69,"Closed and opened to check the new container images, where TF 2.4 is installed, and not 2.5 that does not work on ARM64.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16709:97,reliability,doe,does,97,"Closed and opened to check the new container images, where TF 2.4 is installed, and not 2.5 that does not work on ARM64.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16709:0,usability,Close,Closed,0,"Closed and opened to check the new container images, where TF 2.4 is installed, and not 2.5 that does not work on ARM64.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16711:4,availability,failur,failure,4,The failure on Arm64 is understdood (see https://github.com/root-project/root/pull/16718). Good to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16711
https://github.com/root-project/root/pull/16711:4,deployability,fail,failure,4,The failure on Arm64 is understdood (see https://github.com/root-project/root/pull/16718). Good to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16711
https://github.com/root-project/root/pull/16711:4,performance,failur,failure,4,The failure on Arm64 is understdood (see https://github.com/root-project/root/pull/16718). Good to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16711
https://github.com/root-project/root/pull/16711:4,reliability,fail,failure,4,The failure on Arm64 is understdood (see https://github.com/root-project/root/pull/16718). Good to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16711
https://github.com/root-project/root/pull/16712:60,deployability,contain,containing,60,I can confirm that when I use 'PrintInfo' on a RNTuple file containing an 'unsplit' sub-field the proper storage type is shown (e.g. `Real64`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16712
https://github.com/root-project/root/pull/16712:84,integrability,sub,sub-field,84,I can confirm that when I use 'PrintInfo' on a RNTuple file containing an 'unsplit' sub-field the proper storage type is shown (e.g. `Real64`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16712
https://github.com/root-project/root/pull/16712:6,usability,confirm,confirm,6,I can confirm that when I use 'PrintInfo' on a RNTuple file containing an 'unsplit' sub-field the proper storage type is shown (e.g. `Real64`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16712
https://github.com/root-project/root/pull/16714:72,safety,test,test,72,"> I think the PR needs to also fixup the new `RNTupleModel, Clone` unit test. Done; I had to add `const` overloads for `RFieldBase::begin()` and `end()` in order to make range-based for loops works, let me know if that's ok or should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16714
https://github.com/root-project/root/pull/16714:67,testability,unit,unit,67,"> I think the PR needs to also fixup the new `RNTupleModel, Clone` unit test. Done; I had to add `const` overloads for `RFieldBase::begin()` and `end()` in order to make range-based for loops works, let me know if that's ok or should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16714
https://github.com/root-project/root/pull/16714:72,testability,test,test,72,"> I think the PR needs to also fixup the new `RNTupleModel, Clone` unit test. Done; I had to add `const` overloads for `RFieldBase::begin()` and `end()` in order to make range-based for loops works, let me know if that's ok or should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16714
https://github.com/root-project/root/issues/16715:18,interoperability,specif,specific,18,Could you be more specific? How does the behaviour show up?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:32,reliability,doe,does,32,Could you be more specific? How does the behaviour show up?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:41,usability,behavi,behaviour,41,Could you be more specific? How does the behaviour show up?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:119,deployability,version,version,119,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:119,integrability,version,version,119,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:20,interoperability,specif,specific,20,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:119,modifiability,version,version,119,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:34,reliability,doe,does,34,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:43,usability,behavi,behaviour,43,"> Could you be more specific? How does the behaviour show up? Now much more details in the description. The very short version is:. Remove either the `tmva-cudnn` or the `cudnn` flag, and let's only use a single one for all of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:49,deployability,build,build,49,"Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:145,deployability,modul,modules,145,"Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:145,modifiability,modul,modules,145,"Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:145,safety,modul,modules,145,"Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:51,deployability,build,build,51,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:147,deployability,modul,modules,147,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:394,deployability,build,build,394,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:445,deployability,log,logical,445,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:521,deployability,log,logical,521,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:708,deployability,fail,fails,708,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:728,deployability,build,build,728,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:838,deployability,build,build,838,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:852,deployability,fail,fail,852,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:472,energy efficiency,cpu,cpu,472,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:482,energy efficiency,gpu,gpu,482,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:683,integrability,configur,configure,683,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:147,modifiability,modul,modules,147,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:311,modifiability,variab,variables,311,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:453,modifiability,extens,extension,453,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:683,modifiability,configur,configure,683,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:472,performance,cpu,cpu,472,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:482,performance,gpu,gpu,482,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:673,reliability,doe,does,673,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:708,reliability,fail,fails,708,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:852,reliability,fail,fail,852,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:147,safety,modul,modules,147,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:445,safety,log,logical,445,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:521,safety,log,logical,521,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:445,security,log,logical,445,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:521,security,log,logical,521,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:683,security,configur,configure,683,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:445,testability,log,logical,445,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:521,testability,log,logical,521,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:876,usability,support,supported,876,"> Wait, actually there is no existing `tmva-cudnn` build option in [RootBuildOptions.cmake](https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake).... So `-Dtmva-cudnn=On ` in your reproducer is ""illegal"" as far as I can tell, hence your issue. Even if it is, why do we have two variables which have to be kept in sync to do one job? And if you look at the ROOT build options, `tmva-cudnn` very much looks like a logical extension of `tmva-cpu, tmva-gpu, tmva-pymva, ...`, so I guess it's logical that I got confused when I looked into CMake how to enable it. It seems that my mistake also tricked you. 🙂 . And even if it was ""illegal"", why does ROOT configure correctly, and fails only when you build? That's why I'm proposing to remove `cudnn`, and only go with `tmva-cudnn`. Let's make this an official build option, fail fast when it's not supported, and keep it off when it's not needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/pull/16717:6,interoperability,conflict,conflicts,6,Fixed conflicts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16717
https://github.com/root-project/root/issues/16719:1146,deployability,fail,fail,1146,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:199,energy efficiency,model,modelClassification,199,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:364,energy efficiency,model,modelMultiClass,364,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:627,energy efficiency,model,modelRegression,627,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1146,reliability,fail,fail,1146,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:105,safety,test,test,105,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:795,safety,test,test,795,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:882,safety,test,test,882,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1121,safety,Test,TestRModelParserPyTorch,1121,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:199,security,model,modelClassification,199,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:364,security,model,modelMultiClass,364,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:627,security,model,modelRegression,627,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:105,testability,test,test,105,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:795,testability,test,test,795,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:882,testability,test,test,882,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1121,testability,Test,TestRModelParserPyTorch,1121,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:6,usability,confirm,confirms,6,It is confirms that one of those files:. ```. -rw-r--r--. 1 pcanal us_cms 8962 Oct 19 17:56 ./tmva/pymva/test/PyTorchModelSequential.pt. -rw-r--r--. 1 pcanal us_cms 11913 Oct 19 17:56 ./runtutorials/modelClassification.pt. -rw-r--r--. 1 pcanal us_cms 10564 Oct 19 17:56 ./runtutorials/PyTorchModel.pt. -rw-r--r--. 1 pcanal us_cms 10941 Oct 19 17:56 ./runtutorials/modelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 11330 Oct 19 17:56 ./runtutorials/trainedModelMultiClass.pt. -rw-r--r--. 1 pcanal us_cms 12110 Oct 19 17:56 ./runtutorials/trainedModelClassification.pt. -rw-r--r--. 1 pcanal us_cms 7853 Oct 19 17:57 ./runtutorials/modelRegression.pt. -rw-r--r--. 1 pcanal us_cms 7972 Oct 19 17:57 ./runtutorials/trainedModelRegression.pt. -rw-r--r--. 1 pcanal us_cms 11044 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelModule.pt. -rw-r--r--. 1 pcanal us_cms 8337 Oct 19 18:02 ./tmva/pymva/test/PyTorchModelConvolution.pt. -rw-r--r--. 1 pcanal us_cms 684930 Oct 19 18:02 ./runtutorials/PyTorchTrainedModelCNN.pt. -rw-r--r--. 1 pcanal us_cms 684658 Oct 19 18:02 ./runtutorials/PyTorchModelCNN.pt. ```. is making `gtest-tmva-pymva-TestRModelParserPyTorch` fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:49,deployability,fail,fails,49,However `gtest-tmva-pymva-TestRModelParserKeras` fails without or without those files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:49,reliability,fail,fails,49,However `gtest-tmva-pymva-TestRModelParserKeras` fails without or without those files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:26,safety,Test,TestRModelParserKeras,26,However `gtest-tmva-pymva-TestRModelParserKeras` fails without or without those files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:26,testability,Test,TestRModelParserKeras,26,However `gtest-tmva-pymva-TestRModelParserKeras` fails without or without those files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:893,availability,Error,Errors,893,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1061,availability,failur,failure,1061,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:214,deployability,build,build,214,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:391,deployability,fail,failed,391,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:579,deployability,build,build,579,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:713,deployability,Fail,Failed,713,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:755,deployability,fail,failed,755,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:827,deployability,FAIL,FAILED,827,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:884,deployability,Fail,Failed,884,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:979,deployability,build,build,979,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1024,deployability,log,log,1024,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1042,deployability,fail,failed,1042,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1061,deployability,fail,failure,1061,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1084,deployability,fail,failed,1084,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:63,performance,time,time,63,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:419,performance,time,time,419,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:783,performance,time,time,783,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:893,performance,Error,Errors,893,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1061,performance,failur,failure,1061,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:391,reliability,fail,failed,391,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:713,reliability,Fail,Failed,713,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:755,reliability,fail,failed,755,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:827,reliability,FAIL,FAILED,827,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:884,reliability,Fail,Failed,884,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1042,reliability,fail,failed,1042,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1061,reliability,fail,failure,1061,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1084,reliability,fail,failed,1084,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:21,safety,test,test,21,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:150,safety,Test,TestRModelParserPyTorch,150,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:175,safety,Test,Test,175,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:261,safety,Test,TestRModelParserPyTorch,261,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:290,safety,Test,Test,290,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:318,safety,Test,TestRModelParserPyTorch,318,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:369,safety,test,tests,369,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:385,safety,test,tests,385,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:414,safety,Test,Test,414,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:515,safety,Test,TestRModelParserPyTorch,515,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:540,safety,Test,Test,540,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:626,safety,Test,TestRModelParserPyTorch,626,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:655,safety,Test,Test,655,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:683,safety,Test,TestRModelParserPyTorch,683,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:733,safety,test,tests,733,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:749,safety,test,tests,749,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:778,safety,Test,Test,778,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:821,safety,test,tests,821,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:859,safety,Test,TestRModelParserPyTorch,859,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:893,safety,Error,Errors,893,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:939,safety,test,tests,939,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:997,safety,Test,Testing,997,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1024,safety,log,log,1024,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1024,security,log,log,1024,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:21,testability,test,test,21,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:150,testability,Test,TestRModelParserPyTorch,150,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:175,testability,Test,Test,175,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:261,testability,Test,TestRModelParserPyTorch,261,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:290,testability,Test,Test,290,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:318,testability,Test,TestRModelParserPyTorch,318,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:369,testability,test,tests,369,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:385,testability,test,tests,385,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:414,testability,Test,Test,414,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:515,testability,Test,TestRModelParserPyTorch,515,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:540,testability,Test,Test,540,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:626,testability,Test,TestRModelParserPyTorch,626,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:655,testability,Test,Test,655,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:683,testability,Test,TestRModelParserPyTorch,683,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:733,testability,test,tests,733,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:749,testability,test,tests,749,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:778,testability,Test,Test,778,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:821,testability,test,tests,821,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:859,testability,Test,TestRModelParserPyTorch,859,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:939,testability,test,tests,939,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:997,testability,Test,Testing,997,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1024,testability,log,log,1024,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:893,usability,Error,Errors,893,"Apparently it is the test itself that is not runnable a second time :(:(. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 15.87 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.13 sec. jupyter-pcanal-rootdevel:quick-devel pcanal$ ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.29 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 9.55 sec. The following tests FAILED:. 349 - gtest-tmva-pymva-TestRModelParserPyTorch (Failed). Errors while running CTest. Output from these tests are in: /home/pcanal/root_working/build/quick-devel/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:73,testability,understand,understanding,73,"@pcanal , could you please re-summarise the status also given the better understanding we have of https://github.com/root-project/root/issues/16720 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:44,usability,statu,status,44,"@pcanal , could you please re-summarise the status also given the better understanding we have of https://github.com/root-project/root/issues/16720 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:869,availability,error,error,869,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:337,deployability,build,build,337,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:514,deployability,fail,failed,514,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:705,deployability,build,build,705,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:839,deployability,Fail,Failed,839,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1018,integrability,interfac,interface,1018,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1018,interoperability,interfac,interface,1018,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1018,modifiability,interfac,interface,1018,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:542,performance,time,time,542,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:869,performance,error,error,869,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:514,reliability,fail,failed,514,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:839,reliability,Fail,Failed,839,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:273,safety,Test,TestRModelParserPyTorch,273,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:298,safety,Test,Test,298,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:384,safety,Test,TestRModelParserPyTorch,384,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:413,safety,Test,Test,413,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:441,safety,Test,TestRModelParserPyTorch,441,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:492,safety,test,tests,492,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:508,safety,test,tests,508,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:537,safety,Test,Test,537,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:641,safety,Test,TestRModelParserPyTorch,641,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:666,safety,Test,Test,666,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:752,safety,Test,TestRModelParserPyTorch,752,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:781,safety,Test,Test,781,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:809,safety,Test,TestRModelParserPyTorch,809,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:869,safety,error,error,869,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1080,safety,test,test,1080,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:15,testability,simpl,simple,15,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:273,testability,Test,TestRModelParserPyTorch,273,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:298,testability,Test,Test,298,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:384,testability,Test,TestRModelParserPyTorch,384,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:413,testability,Test,Test,413,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:441,testability,Test,TestRModelParserPyTorch,441,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:492,testability,test,tests,492,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:508,testability,test,tests,508,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:537,testability,Test,Test,537,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:641,testability,Test,TestRModelParserPyTorch,641,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:666,testability,Test,Test,666,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:752,testability,Test,TestRModelParserPyTorch,752,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:781,testability,Test,Test,781,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:809,testability,Test,TestRModelParserPyTorch,809,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1080,testability,test,test,1080,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:15,usability,simpl,simple,15,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:869,usability,error,error,869,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:1044,usability,indicat,indicates,1044,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec. ```. and if we immediately re-run we get:. ```. ctest -R gtest-tmva-pymva-TestRModelParserPyTorch. Test project /home/pcanal/root_working/build/quick-devel. Start 349: gtest-tmva-pymva-TestRModelParserPyTorch. 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec. ```. and the error is:. ```. [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16720:160,availability,failur,failure,160,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:441,availability,avail,available,441,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:160,deployability,fail,failure,160,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:400,interoperability,platform,platforms,400,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:160,performance,failur,failure,160,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:160,reliability,fail,failure,160,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:441,reliability,availab,available,441,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:105,safety,test,tests,105,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:319,safety,Test,TestRModelParserKeras,319,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:441,safety,avail,available,441,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:441,security,availab,available,441,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:16,testability,understand,understand,16,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:105,testability,test,tests,105,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:319,testability,Test,TestRModelParserKeras,319,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:352,testability,understand,understand,352,"I am not sure I understand the problem. If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for. ```. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 353-gtest-tmva-pymva-TestRModelParserKeras. ```. If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:31,availability,error,error,31,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:165,deployability,contain,container,165,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:277,deployability,contain,container,277,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:362,modifiability,pac,packages,362,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:31,performance,error,error,31,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:31,safety,error,error,31,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:61,safety,test,tests,61,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:61,testability,test,tests,61,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:31,usability,error,error,31,"Apologies, I said something in error. All the aforementioned tests can be found successfully running in the CI. I think we are dealing with a difference between the container setup of the CI and the local setup. @pcanal could you double-check your setup against the one of the container (see [here](https://github.com/root-project/root-ci-images/blob/main/alma9/packages.txt) and the requirements.txt file)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:194,availability,failur,failure,194,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:49,deployability,fail,failing,49,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:87,deployability,instal,installed,87,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:194,deployability,fail,failure,194,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:456,deployability,fail,fail,456,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:295,integrability,interfac,interface,295,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:402,integrability,interfac,interface,402,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:464,integrability,configur,configure,464,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:513,integrability,compon,components,513,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:547,integrability,configur,configuring,547,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:295,interoperability,interfac,interface,295,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:402,interoperability,interfac,interface,402,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:513,interoperability,compon,components,513,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:295,modifiability,interfac,interface,295,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:402,modifiability,interfac,interface,402,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:464,modifiability,configur,configure,464,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:513,modifiability,compon,components,513,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:547,modifiability,configur,configuring,547,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:194,performance,failur,failure,194,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:49,reliability,fail,failing,49,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:194,reliability,fail,failure,194,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:456,reliability,fail,fail,456,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:598,safety,test,test,598,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:797,safety,test,tests,797,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:464,security,configur,configure,464,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:547,security,configur,configuring,547,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:183,testability,understand,understand,183,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:598,testability,test,test,598,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:797,testability,test,tests,797,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:11,usability,clear,clearly,11,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Instead we should either. * fail to configure if BLAS is missing. or . * disable the components that require BLAS when configuring whe BLAS is missing. or. * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/pull/16722:42,safety,test,tests,42,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/pull/16722:92,safety,test,test,92,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/pull/16722:127,safety,Test,TestRModelParserKeras,127,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/pull/16722:42,testability,test,tests,42,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/pull/16722:92,testability,test,test,92,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/pull/16722:127,testability,Test,TestRModelParserKeras,127,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:. ```. 353 - gtest-tmva-pymva-TestRModelParserKeras. ```. as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16722
https://github.com/root-project/root/issues/16725:20,safety,input,input,20,Can you provide the input file that lead to the crash? Alternatively can you rebuild ROOT in debug mode (`-DCMAKE_BUILD_TYPE=Debug`) and run with valgrind (`valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --suppressios=$ROOTSYS/etc/valgrind-root-python.supp python ... `),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:20,usability,input,input,20,Can you provide the input file that lead to the crash? Alternatively can you rebuild ROOT in debug mode (`-DCMAKE_BUILD_TYPE=Debug`) and run with valgrind (`valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --suppressios=$ROOTSYS/etc/valgrind-root-python.supp python ... `),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16730:542,availability,ERROR,ERROR,542,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:593,availability,ERROR,ERROR,593,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:644,availability,ERROR,ERROR,644,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:695,availability,ERROR,ERROR,695,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:746,availability,ERROR,ERROR,746,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:46,deployability,version,version,46,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:46,integrability,version,version,46,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:46,modifiability,version,version,46,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:170,modifiability,variab,variable,170,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:212,modifiability,extens,extension,212,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:233,modifiability,extens,extension,233,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:322,modifiability,variab,variable,322,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:542,performance,ERROR,ERROR,542,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:593,performance,ERROR,ERROR,593,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:644,performance,ERROR,ERROR,644,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:695,performance,ERROR,ERROR,695,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:746,performance,ERROR,ERROR,746,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:542,safety,ERROR,ERROR,542,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:593,safety,ERROR,ERROR,593,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:644,safety,ERROR,ERROR,644,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:695,safety,ERROR,ERROR,695,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:746,safety,ERROR,ERROR,746,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:859,safety,test,tested,859,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:859,testability,test,tested,859,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:542,usability,ERROR,ERROR,542,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:593,usability,ERROR,ERROR,593,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:644,usability,ERROR,ERROR,644,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:695,usability,ERROR,ERROR,695,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:746,usability,ERROR,ERROR,746,"With `Int_t n = kMax;` on Fedora, root master version:. ```. root [0] . Processing scan.C... In file included from input_line_8:1:. /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]. Float_t a[kMax];. ^~~~. /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression. /home/musinsky/scan.C:8:9: note: declared here. Int_t kMax = 10;. ^. root [1] t->Scan(""a[0]""). ************************. * Row * a[0] *. ************************. ERROR leaf:a, len=22 and max=8. * 0 * -0.434764 *. ERROR leaf:a, len=22 and max=8. * 1 * 1.3911939 *. ERROR leaf:a, len=22 and max=8. * 2 * 1.1125664 *. ERROR leaf:a, len=22 and max=8. * 3 * 2.0609021 *. ERROR leaf:a, len=22 and max=8. * 4 * -0.182436 *. ************************. (long long) 5. root [2] . ```. Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:66,deployability,version,version,66,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:1006,deployability,stack,stack,1006,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:138,energy efficiency,Draw,Draw,138,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:253,energy efficiency,Draw,Draw,253,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:456,energy efficiency,Draw,Draw,456,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:571,energy efficiency,Draw,Draw,571,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:614,energy efficiency,Draw,Draw,614,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:657,energy efficiency,Draw,Draw,657,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:916,energy efficiency,Draw,Draw,916,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:66,integrability,version,version,66,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:384,interoperability,share,shared,384,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:830,interoperability,share,shared,830,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:66,modifiability,version,version,66,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:37,performance,memor,memory,37,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:1021,safety,detect,detected,1021,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:1021,security,detect,detected,1021,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:37,usability,memor,memory,37,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:858,usability,user,user,858,"Other problem with Cling and tree in memory:. Fedora, root master version. ```. $ root scan.C. root [0]. Processing scan.C... root [1] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] scan(). root [3] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /home/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [3] scan(). root [4] t->Draw(""a[0]""). root [5] scan(). root [6] t->Draw(""a[0]""). root [7] scan(). root [8] t->Draw(""a[0]""). *** Break *** segmentation violation. ```. lxplus.cern.ch (RHEL 9.4), root v6.32.06. ```. $ root. root [0] .L scan.C++. Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/m/musinsky/./scan_C.so. root [1] scan(). root [2] t->Draw(""a[0]""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. *** stack smashing detected ***: terminated. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:4,deployability,version,version,4,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:687,energy efficiency,Draw,Draw,687,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:763,energy efficiency,Draw,Draw,763,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:870,energy efficiency,Draw,Draw,870,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:905,energy efficiency,Draw,Draw,905,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:4,integrability,version,version,4,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:4,modifiability,version,version,4,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:341,performance,memor,memory,341,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:253,safety,Safe,SafeDelete,253,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:268,safety,Safe,SafeDelete,268,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:598,safety,Safe,SafeDelete,598,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:613,safety,Safe,SafeDelete,613,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:341,usability,memor,memory,341,"The version if the tree is saved to a file works as expected. ```C++. #include ""TTree.h"". #include ""TRandom.h"". TFile *f = nullptr;. TTree *t = nullptr;. void tree(const char *fname = ""file.root""). {. const Int_t kMax = 10;. Int_t n;. Float_t a[kMax];. SafeDelete(t); SafeDelete(f);. if (fname) f = new TFile(fname, ""recreate"");. // else in memory. t = new TTree(""t"", ""tree"");. t->Branch(""n"", &n, ""n/I"");. t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {. n = gRandom->Rndm()*(kMax-1);. for (Int_t j = 0; j < n; j++). a[j] = gRandom->Gaus(0, 1);. t->Fill();. }. if (f) {. t->Write();. SafeDelete(t); SafeDelete(f);. f = new TFile(fname);. t = (TTree*)f->Get(""t"");. }. // t->Draw(""a[0]"");. }. ```. ```. $ root. root [0] .L tree.C. root [1] tree(); t->Draw(""a[0]"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] tree(); t->Draw(""a[0]"");. root [3] tree(); t->Draw(""a[0]"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16733:22,availability,error,error,22,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:66,availability,avail,available,66,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:22,performance,error,error,22,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:66,reliability,availab,available,66,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:22,safety,error,error,22,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:66,safety,avail,available,66,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:66,security,availab,available,66,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:22,usability,error,error,22,FYI there is the same error with `pcre 8.45` (which is the latest available). Investigating...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:228,availability,Error,Error,228,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:12,deployability,depend,depends,12,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:12,integrability,depend,depends,12,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:12,modifiability,depend,depends,12,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:228,performance,Error,Error,228,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:12,safety,depend,depends,12,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:228,safety,Error,Error,228,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:12,testability,depend,depends,12,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:142,usability,Stop,Stop,142,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:228,usability,Error,Error,228,It probably depends on which builtins you enable? I also see this for builtin_XROOTD. ```. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[3]: *** [Makefile:146: all] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:17,deployability,build,build,17,"Oh crap! I can't build XRootD... OK, thanks! I'll do the same with XRootD. Anything else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:58,deployability,build,build,58,Note that would be interesting to see if it's possible to build XRootD in parallel outside ROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:74,performance,parallel,parallel,74,Note that would be interesting to see if it's possible to build XRootD in parallel outside ROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:101,deployability,build,build,101,"I haven't found anything else so far. Do you have a cmake command to enable all builtins? And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:142,deployability,stack,stacks,142,"I haven't found anything else so far. Do you have a cmake command to enable all builtins? And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:195,deployability,build,build,195,"I haven't found anything else so far. Do you have a cmake command to enable all builtins? And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:58,usability,command,command,58,"I haven't found anything else so far. Do you have a cmake command to enable all builtins? And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:123,deployability,build,build,123,"> I haven't found anything else so far. Do you have a cmake command to enable all builtins? I don't think so. > And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well. OK, so I'll have to spend more time on this... Thanks Andre!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:164,deployability,stack,stacks,164,"> I haven't found anything else so far. Do you have a cmake command to enable all builtins? I don't think so. > And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well. OK, so I'll have to spend more time on this... Thanks Andre!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:217,deployability,build,build,217,"> I haven't found anything else so far. Do you have a cmake command to enable all builtins? I don't think so. > And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well. OK, so I'll have to spend more time on this... Thanks Andre!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:301,performance,time,time,301,"> I haven't found anything else so far. Do you have a cmake command to enable all builtins? I don't think so. > And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well. OK, so I'll have to spend more time on this... Thanks Andre!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:60,usability,command,command,60,"> I haven't found anything else so far. Do you have a cmake command to enable all builtins? I don't think so. > And yes we build xrootd outside of ROOT for the LCG stacks with cmake 3.30 without problems. Heck, I can build pcre outside of ROOT without problems as well. OK, so I'll have to spend more time on this... Thanks Andre!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:210,availability,Error,Error,210,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:253,availability,Error,Error,253,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:423,availability,Error,Error,423,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:465,availability,Error,Error,465,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:496,integrability,configur,configure,496,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:496,modifiability,configur,configure,496,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:210,performance,Error,Error,210,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:253,performance,Error,Error,253,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:423,performance,Error,Error,423,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:465,performance,Error,Error,465,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:210,safety,Error,Error,210,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:253,safety,Error,Error,253,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:423,safety,Error,Error,423,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:465,safety,Error,Error,465,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:496,security,configur,configure,496,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:85,usability,Stop,Stop,85,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:210,usability,Error,Error,210,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:253,usability,Error,Error,253,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:329,usability,Stop,Stop,329,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:423,usability,Error,Error,423,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:465,usability,Error,Error,465,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:583,usability,Stop,Stop,583,ccmake to the rescue... TBB. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. FFTW3. ```. make[5]: *** read jobs pipe: Bad file descriptor. Stop. make[5]: *** Waiting for unfinished jobs.... make[4]: *** [Makefile:708: all-recursive] Error 1. make[3]: *** [Makefile:552: all] Error 2. ```. freetype (in the configure step??? :confused: ). ```. make[3]: *** read jobs pipe: Bad file descriptor. Stop. make[3]: *** Waiting for unfinished jobs.... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:185,availability,Error,Error,185,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:239,availability,error,errors,239,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:281,availability,Error,Error,281,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:346,availability,error,errors,346,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:413,availability,error,error,413,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:431,availability,Error,Error,431,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:702,availability,Error,Error,702,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:973,availability,Error,Error,973,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:185,performance,Error,Error,185,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:239,performance,error,errors,239,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:281,performance,Error,Error,281,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:346,performance,error,errors,346,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:413,performance,error,error,413,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:431,performance,Error,Error,431,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:702,performance,Error,Error,702,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:973,performance,Error,Error,973,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:185,safety,Error,Error,185,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:239,safety,error,errors,239,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:281,safety,Error,Error,281,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:346,safety,error,errors,346,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:413,safety,error,error,413,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:431,safety,Error,Error,431,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:702,safety,Error,Error,702,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:973,safety,Error,Error,973,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:65,usability,Stop,Stop,65,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:185,usability,Error,Error,185,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:239,usability,error,errors,239,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:281,usability,Error,Error,281,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:346,usability,error,errors,346,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:413,usability,error,error,413,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:431,usability,Error,Error,431,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:474,usability,Support,Support,474,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:702,usability,Error,Error,702,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:745,usability,Support,Support,745,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:973,usability,Error,Error,973,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:1016,usability,Support,Support,1016,"cfitsio. ```. gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... gmake[4]: *** [CMakeFiles/Makefile2:83: CMakeFiles/cfitsio.dir/all] Error 2. gmake[4]: Target 'all' not remade because of errors. gmake[3]: *** [Makefile:136: all] Error 2. gmake[3]: Target 'default_target' not remade because of errors. ```. I couldn't enable builtin_zlib, gave some other cmake error. ```. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:303 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:306 (get_property):. The LOCATION property may not be read from target ""ZLIB"". Use the target. name directly with add_custom_command, or use the generator expression. $<TARGET_FILE>, as appropriate. CMake Error at interpreter/llvm-project/llvm/lib/Support/CMakeLists.txt:308 (get_library_name):. get_library_name Function invoked with incorrect arguments for function. named: get_library_name. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:219,deployability,fail,fails,219,Looking there: https://www.kitware.com/cmake-3-28-0-rc5-is-ready-for-testing/. It seems adding `BUILD_JOB_SERVER_AWARE true` in `ExternalProject_Add` fixes the issue (at least for PCRE). Trying it right now (but xrootd fails for some reason...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:219,reliability,fail,fails,219,Looking there: https://www.kitware.com/cmake-3-28-0-rc5-is-ready-for-testing/. It seems adding `BUILD_JOB_SERVER_AWARE true` in `ExternalProject_Add` fixes the issue (at least for PCRE). Trying it right now (but xrootd fails for some reason...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:69,safety,test,testing,69,Looking there: https://www.kitware.com/cmake-3-28-0-rc5-is-ready-for-testing/. It seems adding `BUILD_JOB_SERVER_AWARE true` in `ExternalProject_Add` fixes the issue (at least for PCRE). Trying it right now (but xrootd fails for some reason...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:69,testability,test,testing,69,Looking there: https://www.kitware.com/cmake-3-28-0-rc5-is-ready-for-testing/. It seems adding `BUILD_JOB_SERVER_AWARE true` in `ExternalProject_Add` fixes the issue (at least for PCRE). Trying it right now (but xrootd fails for some reason...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:90,deployability,version,version,90,"Adding `BUILD_JOB_SERVER_AWARE 1` partially fixes the issue, but adding it only for CMake version > 3.28 in something like 50 different places would be a pain in the neck... see also https://gitlab.kitware.com/cmake/cmake/-/issues/26398.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:90,integrability,version,version,90,"Adding `BUILD_JOB_SERVER_AWARE 1` partially fixes the issue, but adding it only for CMake version > 3.28 in something like 50 different places would be a pain in the neck... see also https://gitlab.kitware.com/cmake/cmake/-/issues/26398.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:90,modifiability,version,version,90,"Adding `BUILD_JOB_SERVER_AWARE 1` partially fixes the issue, but adding it only for CMake version > 3.28 in something like 50 different places would be a pain in the neck... see also https://gitlab.kitware.com/cmake/cmake/-/issues/26398.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:136,reliability,doe,doesn,136,"For XROOTD I didn't see BUILD_JOB_SERVER_AWARE helping, the doc also says that it only applies to explicit BUILD_COMMANDS, which XROOTD doesn't have, it only has an explicit INSTALL_COMMAND. Without these explicit commands it seems to work better. For FREETYPE I saw no difference until I changed `LOG_CONFIGURE 0` instead of `LOG_CONFIGURE 1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:47,usability,help,helping,47,"For XROOTD I didn't see BUILD_JOB_SERVER_AWARE helping, the doc also says that it only applies to explicit BUILD_COMMANDS, which XROOTD doesn't have, it only has an explicit INSTALL_COMMAND. Without these explicit commands it seems to work better. For FREETYPE I saw no difference until I changed `LOG_CONFIGURE 0` instead of `LOG_CONFIGURE 1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:214,usability,command,commands,214,"For XROOTD I didn't see BUILD_JOB_SERVER_AWARE helping, the doc also says that it only applies to explicit BUILD_COMMANDS, which XROOTD doesn't have, it only has an explicit INSTALL_COMMAND. Without these explicit commands it seems to work better. For FREETYPE I saw no difference until I changed `LOG_CONFIGURE 0` instead of `LOG_CONFIGURE 1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:26,deployability,version,version,26,"Ubuntu24 comes with cmake version 3.28.3. (cf. #16654, #16682).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:26,integrability,version,version,26,"Ubuntu24 comes with cmake version 3.28.3. (cf. #16654, #16682).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:26,modifiability,version,version,26,"Ubuntu24 comes with cmake version 3.28.3. (cf. #16654, #16682).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:227,deployability,log,log,227,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:227,safety,log,log,227,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:227,security,log,log,227,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:7,testability,simpl,simply,7,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:227,testability,log,log,227,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:7,usability,simpl,simply,7,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/pull/16737:78,deployability,version,version,78,@smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:78,integrability,version,version,78,@smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:78,modifiability,version,version,78,@smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:80,deployability,version,version,80,> @smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit. ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:80,integrability,version,version,80,> @smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit. ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:80,modifiability,version,version,80,> @smuzaffar we should probably wait to make the stable CMSSW_14_2_0_pre3 ROOT6 version until after we have aversion of ROOT in our IB with this commit. ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:25,availability,avail,available,25,"@Dr15Jones , this is now available in last night's CMSSW ROOT6 build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:63,deployability,build,build,63,"@Dr15Jones , this is now available in last night's CMSSW ROOT6 build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:25,reliability,availab,available,25,"@Dr15Jones , this is now available in last night's CMSSW ROOT6 build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:25,safety,avail,available,25,"@Dr15Jones , this is now available in last night's CMSSW ROOT6 build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:25,security,availab,available,25,"@Dr15Jones , this is now available in last night's CMSSW ROOT6 build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:69,availability,fault,fault,69,@jblomer thanks for this. Unfortunately I still see the segmentation fault when reading an RNTuple file while the job uses 10 or more threads.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:69,energy efficiency,fault,fault,69,@jblomer thanks for this. Unfortunately I still see the segmentation fault when reading an RNTuple file while the job uses 10 or more threads.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:69,performance,fault,fault,69,@jblomer thanks for this. Unfortunately I still see the segmentation fault when reading an RNTuple file while the job uses 10 or more threads.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:69,reliability,fault,fault,69,@jblomer thanks for this. Unfortunately I still see the segmentation fault when reading an RNTuple file while the job uses 10 or more threads.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:69,safety,fault,fault,69,@jblomer thanks for this. Unfortunately I still see the segmentation fault when reading an RNTuple file while the job uses 10 or more threads.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16744:221,deployability,build,builds,221,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:322,deployability,build,builds,322,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:343,deployability,build,build,343,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:484,deployability,build,build,484,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:153,integrability,sub,subtle,153,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:350,security,modif,modify,350,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:357,security,sign,significantly,357,"This is somewhat dubious. It sounds like it will solve the immediate problem (where we see problem because of spurious rebuild) but could introduce more subtle problems. As long as an invocation of ctest can trigger some builds (eg. dictionary generation :( ), with this flags we could end up (silently) with inconsistent builds (i.e. pattern build, modify significantly a header file, run ctest). But admittedly we are more likely see the spurious rebuild case than the inconsistent build case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:36,availability,down,down,36,"@pcanal Well, the testing time went down to 11 minutes, skipping the spurious rebuild (re-linking), and we keep the `--repeat until-pass` flag anyway, so to me the benefit is greater than the potential inconsistent builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:215,deployability,build,builds,215,"@pcanal Well, the testing time went down to 11 minutes, skipping the spurious rebuild (re-linking), and we keep the `--repeat until-pass` flag anyway, so to me the benefit is greater than the potential inconsistent builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:26,performance,time,time,26,"@pcanal Well, the testing time went down to 11 minutes, skipping the spurious rebuild (re-linking), and we keep the `--repeat until-pass` flag anyway, so to me the benefit is greater than the potential inconsistent builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:18,safety,test,testing,18,"@pcanal Well, the testing time went down to 11 minutes, skipping the spurious rebuild (re-linking), and we keep the `--repeat until-pass` flag anyway, so to me the benefit is greater than the potential inconsistent builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:18,testability,test,testing,18,"@pcanal Well, the testing time went down to 11 minutes, skipping the spurious rebuild (re-linking), and we keep the `--repeat until-pass` flag anyway, so to me the benefit is greater than the potential inconsistent builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16745:25,deployability,updat,update,25,@Moelf Please rebase and update according to the comments. We'll take care of backporting to the 6.34 branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16745:25,safety,updat,update,25,@Moelf Please rebase and update according to the comments. We'll take care of backporting to the 6.34 branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16745:25,security,updat,update,25,@Moelf Please rebase and update according to the comments. We'll take care of backporting to the 6.34 branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16745:53,safety,review,review,53,sorry for messing up the `rebase` and triggered mass review... it's done correctly now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16745:53,testability,review,review,53,sorry for messing up the `rebase` and triggered mass review... it's done correctly now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16747:18,safety,test,test,18,"Is there a way to test this improvement, e.g. verifying no warning is printed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16747:18,testability,test,test,18,"Is there a way to test this improvement, e.g. verifying no warning is printed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16747:46,testability,verif,verifying,46,"Is there a way to test this improvement, e.g. verifying no warning is printed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16748:52,availability,failur,failures,52,"This is not looking good, I can reproduce all these failures also on Arch Linux with Python 3.13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:52,deployability,fail,failures,52,"This is not looking good, I can reproduce all these failures also on Arch Linux with Python 3.13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:52,performance,failur,failures,52,"This is not looking good, I can reproduce all these failures also on Arch Linux with Python 3.13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:52,reliability,fail,failures,52,"This is not looking good, I can reproduce all these failures also on Arch Linux with Python 3.13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:63,availability,error,errors,63,"@wlav, do you maybe have already experience will these kind of errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:63,performance,error,errors,63,"@wlav, do you maybe have already experience will these kind of errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:63,safety,error,errors,63,"@wlav, do you maybe have already experience will these kind of errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:33,usability,experien,experience,33,"@wlav, do you maybe have already experience will these kind of errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:63,usability,error,errors,63,"@wlav, do you maybe have already experience will these kind of errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:21,availability,error,errors,21,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:64,availability,error,error,64,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:98,availability,operat,operation,98,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:173,availability,operat,operation,173,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:206,availability,error,error,206,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:414,availability,down,down,414,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:183,deployability,fail,fails,183,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:21,performance,error,errors,21,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:64,performance,error,error,64,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:206,performance,error,error,206,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:183,reliability,fail,fails,183,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:21,safety,error,errors,21,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:64,safety,error,error,64,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:206,safety,error,error,206,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:250,safety,Except,Exception,250,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:21,usability,error,errors,21,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:64,usability,error,error,64,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:116,usability,clear,cleared,116,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:206,usability,error,error,206,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:399,usability,help,help,399,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:. ```. +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():. ```. and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:31,availability,failur,failures,31,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:31,deployability,fail,failures,31,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:31,performance,failur,failures,31,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:31,reliability,fail,failures,31,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:67,usability,statu,status,67,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:133,usability,stop,stop,133,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:57,availability,failur,failures,57,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:17,deployability,updat,updates,17,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:57,deployability,fail,failures,57,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:57,performance,failur,failures,57,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:57,reliability,fail,failures,57,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:17,safety,updat,updates,17,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:52,safety,test,test,52,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:87,safety,test,test-stressgraphics-chrome,87,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:17,security,updat,updates,17,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:52,testability,test,test,52,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:87,testability,test,test-stressgraphics-chrome,87,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16748:325,testability,regress,regression-regression,325,"After the recent updates to ROOT master, only these test failures remain:. ```txt. 384:test-stressgraphics-chrome. 1403:tutorial-roofit-rf617_simulation_based_inference_multidimensional-py. 1404:tutorial-roofit-rf618_mixture_models-py. 1634:roottest-python-cling-class. 1726:roottest-python-numba-numba. 1731:roottest-python-regression-regression. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16748
https://github.com/root-project/root/pull/16749:14,interoperability,platform,platforms,14,Do we have CI platforms with openssl 1? Can it be problem there?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:156,modifiability,pac,package,156,"No, the problem happens with OpenSSL 3 from Fedora 41: https://github.com/root-project/root/pull/16748. It seems they have removed the engine part from the package.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:86,safety,test,test,86,That I mean - that happens if user tries to compile with older OPENSSL 1.x? I need to test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:86,testability,test,test,86,That I mean - that happens if user tries to compile with older OPENSSL 1.x? I need to test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:30,usability,user,user,30,That I mean - that happens if user tries to compile with older OPENSSL 1.x? I need to test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16750:45,safety,test,test,45,"Good idea. I have beefed up an existing unit test to cover the functionality, and added a commit for it. Another commit fixes a possible out-of-bounds access that I noticed on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:151,security,access,access,151,"Good idea. I have beefed up an existing unit test to cover the functionality, and added a commit for it. Another commit fixes a possible out-of-bounds access that I noticed on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:40,testability,unit,unit,40,"Good idea. I have beefed up an existing unit test to cover the functionality, and added a commit for it. Another commit fixes a possible out-of-bounds access that I noticed on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:45,testability,test,test,45,"Good idea. I have beefed up an existing unit test to cover the functionality, and added a commit for it. Another commit fixes a possible out-of-bounds access that I noticed on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:31,safety,test,test,31,Great! Perhaps we can use this test in the benchmarks to check if we don't introduce some regression in future...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:31,testability,test,test,31,Great! Perhaps we can use this test in the benchmarks to check if we don't introduce some regression in future...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:90,testability,regress,regression,90,Great! Perhaps we can use this test in the benchmarks to check if we don't introduce some regression in future...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:41,modifiability,reu,reuse,41,"That's true, we need to think how we can reuse the benchmarks from `rootbench` as tests without causing too much duplication",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:82,safety,test,tests,82,"That's true, we need to think how we can reuse the benchmarks from `rootbench` as tests without causing too much duplication",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:82,testability,test,tests,82,"That's true, we need to think how we can reuse the benchmarks from `rootbench` as tests without causing too much duplication",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:50,modifiability,refact,refactoring,50,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:172,modifiability,paramet,parameters,172,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:50,performance,refactor,refactoring,50,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:14,testability,Understand,Understandable,14,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:95,usability,behavi,behavior,95,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:129,usability,support,support,129,"Thanks a lot! Understandable, this is quite a big refactoring, even if it shouldn't change any behavior other than adding better support for flipping constant and floating parameters in codegen. But I'm pretty confident that it goes in the right direction, also because the quality of the previous code was not very high. Many incorrect edge cases etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/issues/16754:267,deployability,log,logic,267,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:51,energy efficiency,alloc,allocator,51,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:104,interoperability,prox,proxy,104,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:181,interoperability,prox,proxies,181,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:267,safety,log,logic,267,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:267,security,log,logic,267,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:267,testability,log,logic,267,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:110,usability,support,support,110,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:153,usability,support,support,153,"As discussed, for `std::vector` with a non-default allocator we should likely go through the collection proxy support. For maps and sets, we may already support (via the collection proxies) and it's just a matter of relaxing the partial specializations and maybe the logic in `RFieldBase::Create`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:72,energy efficiency,alloc,allocators,72,Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:133,energy efficiency,alloc,allocator,133,Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:12,performance,disk,disk,12,Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:593,availability,state,state,593,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:320,deployability,contain,containers,320,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:522,deployability,contain,container,522,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:74,energy efficiency,alloc,allocators,74,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:135,energy efficiency,alloc,allocator,135,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:468,energy efficiency,model,model,468,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:585,energy efficiency,current,current,585,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:593,integrability,state,state,593,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:450,interoperability,specif,specified,450,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:565,interoperability,compatib,compatible,565,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:606,interoperability,specif,specification,606,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:257,modifiability,paramet,parameters,257,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:405,modifiability,paramet,parameters,405,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:14,performance,disk,disk,14,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:293,performance,disk,disk,293,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:430,performance,time,time,430,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:468,security,model,model,468,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:496,usability,user,user,496,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? Very relevant questions; IMHO additional template parameters should not change the on-disk representation of STL containers, and it should be possible to transparently read them back with different parameters than at write time. If nothing is specified and the model is reconstructed, the user gets the default STL container as before. I think this would be compatible with the current state of the specification, otherwise we may need to think this through before declaring 1.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:93,deployability,depend,depend,93,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:107,energy efficiency,alloc,allocator,107,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:93,integrability,depend,depend,93,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:93,modifiability,depend,depend,93,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:62,performance,disk,disk,62,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:93,safety,depend,depend,93,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:93,testability,depend,depend,93,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:74,energy efficiency,alloc,allocators,74,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? For reference, this is already the case (for both questions, the answer is yes) for `TTree` (and thus must be the case for `RNTuple`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:135,energy efficiency,alloc,allocator,135,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? For reference, this is already the case (for both questions, the answer is yes) for `TTree` (and thus must be the case for `RNTuple`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16754:14,performance,disk,disk,14,"> Will the on-disk representation of vectors be the same for all possible allocators? Will it be possible to read back vectors with an allocator which was different than the one used when they were written? For reference, this is already the case (for both questions, the answer is yes) for `TTree` (and thus must be the case for `RNTuple`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16754
https://github.com/root-project/root/issues/16757:126,energy efficiency,alloc,allocate,126,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16757
https://github.com/root-project/root/issues/16757:148,performance,memor,memory,148,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16757
https://github.com/root-project/root/issues/16757:225,testability,simpl,simplify,225,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16757
https://github.com/root-project/root/issues/16757:148,usability,memor,memory,148,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16757
https://github.com/root-project/root/issues/16757:225,usability,simpl,simplify,225,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16757
https://github.com/root-project/root/pull/16759:10,availability,failur,failure,10,The cuDNN failure is unrelated to this PR; it's happening since two nights in the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16759
https://github.com/root-project/root/pull/16759:10,deployability,fail,failure,10,The cuDNN failure is unrelated to this PR; it's happening since two nights in the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16759
https://github.com/root-project/root/pull/16759:10,performance,failur,failure,10,The cuDNN failure is unrelated to this PR; it's happening since two nights in the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16759
https://github.com/root-project/root/pull/16759:10,reliability,fail,failure,10,The cuDNN failure is unrelated to this PR; it's happening since two nights in the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16759
https://github.com/root-project/root/pull/16763:54,safety,test,tests,54,I hope we'll see the same behaviour as in our private tests 🤞 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:54,testability,test,tests,54,I hope we'll see the same behaviour as in our private tests 🤞 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:26,usability,behavi,behaviour,26,I hope we'll see the same behaviour as in our private tests 🤞 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:97,deployability,build,build,97,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:107,deployability,releas,release,107,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:124,deployability,Releas,Release,124,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:180,deployability,build,build,180,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:190,deployability,releas,release,190,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:394,deployability,fail,failed,394,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:220,interoperability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,220,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:296,interoperability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,296,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:220,modifiability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,220,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:296,modifiability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,296,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:422,performance,time,time,422,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:394,reliability,fail,failed,394,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:56,safety,test,tests,56,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:155,safety,Test,Test,155,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:275,safety,Test,Test,275,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:372,safety,test,tests,372,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:388,safety,test,tests,388,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:417,safety,Test,Test,417,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:56,testability,test,tests,56,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:155,testability,Test,Test,155,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:275,testability,Test,Test,275,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:372,testability,test,tests,372,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:388,testability,test,tests,388,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:417,testability,Test,Test,417,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:28,usability,behavi,behaviour,28,"> I hope we'll see the same behaviour as in our private tests 🤞. Like this? 😉 . ```. C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. Test project C:/root-dev/build/x64/release. Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.91 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:112,deployability,build,build,112,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:122,deployability,releas,release,122,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:139,deployability,Releas,Release,139,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:197,deployability,build,build,197,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:207,deployability,releas,release,207,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:421,deployability,fail,failed,421,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:239,interoperability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,239,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:317,interoperability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,317,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:239,modifiability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,239,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:317,modifiability,bind,bindings-pyroot-pythonizations-pyroot-pyz-stl-set,317,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:455,performance,time,time,455,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:421,reliability,fail,failed,421,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:58,safety,test,tests,58,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:172,safety,Test,Test,172,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:296,safety,Test,Test,296,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:399,safety,test,tests,399,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:415,safety,test,tests,415,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:450,safety,Test,Test,450,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:58,testability,test,tests,58,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:172,testability,Test,Test,172,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:296,testability,Test,Test,296,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:399,testability,test,tests,399,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:415,testability,test,tests,415,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:450,testability,Test,Test,450,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16763:30,usability,behavi,behaviour,30,"> > I hope we'll see the same behaviour as in our private tests 🤞. > . > Like this? 😉. > . > ```. > C:\root-dev\build\x64\release>ctest -C Release -R pyroot-pyz-stl-set. > Test project C:/root-dev/build/x64/release. > Start 7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set. > 1/1 Test #7: pyunittests-bindings-pyroot-pythonizations-pyroot-pyz-stl-set ... Passed 1.44 sec. > . > 100% tests passed, 0 tests failed out of 1. > . > Total Test time (real) = 1.91 sec. > ```. Yes, but on both flavours ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16763
https://github.com/root-project/root/pull/16769:57,deployability,releas,release,57,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:72,deployability,version,version,72,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:72,integrability,version,version,72,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:65,interoperability,format,format,65,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:72,modifiability,version,version,72,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:88,reliability,diagno,diagnostics,88,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:26,safety,test,tests,26,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:26,testability,test,tests,26,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:88,testability,diagno,diagnostics,88,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:15,safety,review,review,15,@pcanal please review the first 10-ish commits in https://github.com/root-project/root/pull/16645!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:15,testability,review,review,15,@pcanal please review the first 10-ish commits in https://github.com/root-project/root/pull/16645!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:9,safety,review,review,9,> please review the first 10-ish commits in https://github.com/root-project/root/pull/16645! Fair enough. However the comment https://github.com/root-project/root/pull/16769#discussion_r1819513728 is actually debating the split between this [PR](#16769) and #16645.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:9,testability,review,review,9,> please review the first 10-ish commits in https://github.com/root-project/root/pull/16645! Fair enough. However the comment https://github.com/root-project/root/pull/16769#discussion_r1819513728 is actually debating the split between this [PR](#16769) and #16645.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:365,availability,state,states,365,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:383,deployability,version,version,383,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:365,integrability,state,states,365,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:383,integrability,version,version,383,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:383,modifiability,version,version,383,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:11,safety,review,review,11,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:333,safety,safe,safely,333,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:340,safety,detect,detect,340,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:340,security,detect,detect,340,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:11,testability,review,review,11,"> > please review the first 10-ish commits in #16645! > . > Fair enough. However the comment [#16769 (comment)](https://github.com/root-project/root/pull/16769#discussion_r1819513728) is actually debating the split between this [PR](#16769) and #16645. I don't see enough reason to reshuffle the commits or PRs at this point. We can safely detect files from all PR states (RC2, RC3, version 1.0).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:64,safety,test,tests,64,"As discussed, this should be merged only after a final round of tests with RC3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:64,testability,test,tests,64,"As discussed, this should be merged only after a final round of tests with RC3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:74,integrability,sub,subject,74,"The tutorials also mention that the data format is still experimental and subject to change. This can be addressed in a separate PR, but it's something we shouldn't forget about.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16769:41,interoperability,format,format,41,"The tutorials also mention that the data format is still experimental and subject to change. This can be addressed in a separate PR, but it's something we shouldn't forget about.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16769
https://github.com/root-project/root/pull/16773:7,availability,failur,failure,7,Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:7,deployability,fail,failure,7,Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:7,performance,failur,failure,7,Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:7,reliability,fail,failure,7,Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:9,availability,failur,failure,9,> Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood? Is it related to https://github.com/root-project/root/pull/15915 ? pinging @couet and @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:210,availability,ping,pinging,210,> Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood? Is it related to https://github.com/root-project/root/pull/15915 ? pinging @couet and @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:9,deployability,fail,failure,9,> Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood? Is it related to https://github.com/root-project/root/pull/15915 ? pinging @couet and @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:9,performance,failur,failure,9,> Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood? Is it related to https://github.com/root-project/root/pull/15915 ? pinging @couet and @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:9,reliability,fail,failure,9,> Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood? Is it related to https://github.com/root-project/root/pull/15915 ? pinging @couet and @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:116,availability,failur,failure,116,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:116,deployability,fail,failure,116,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:131,energy efficiency,GPU,GPU,131,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:135,interoperability,platform,platform,135,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:116,performance,failur,failure,116,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:131,performance,GPU,GPU,131,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:116,reliability,fail,failure,116,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:100,safety,test,tests,100,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:100,testability,test,tests,100,"@ferdymercury à propos `roottest-root-hist-h2root`: I think this was clarified by the last round of tests. We see a failure on the GPU platform, which is known and unrelated to your changes. If you agree, I would proceed with the merge of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:99,deployability,version,versions,99,"Hi @ferdymercury, thank you for the swift fixes! Would it be possible to backport these changes to versions 6.30 and 6.32?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:99,integrability,version,versions,99,"Hi @ferdymercury, thank you for the swift fixes! Would it be possible to backport these changes to versions 6.30 and 6.32?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:99,modifiability,version,versions,99,"Hi @ferdymercury, thank you for the swift fixes! Would it be possible to backport these changes to versions 6.30 and 6.32?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:44,deployability,patch,patch,44,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:50,deployability,releas,release,50,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:145,deployability,patch,patch,145,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:151,deployability,releas,release,151,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:298,deployability,build,build,298,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:392,deployability,patch,patch,392,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:398,deployability,releas,release,398,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:44,safety,patch,patch,44,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:145,safety,patch,patch,145,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:392,safety,patch,patch,392,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:44,security,patch,patch,44,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:145,security,patch,patch,145,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:392,security,patch,patch,392,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:279,usability,help,help,279,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:339,usability,tip,tip,339,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:119,deployability,version,version,119,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:228,deployability,updat,update,228,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:269,deployability,depend,depends,269,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:119,integrability,version,version,119,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:269,integrability,depend,depends,269,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:119,modifiability,version,version,119,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:269,modifiability,depend,depends,269,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:228,safety,updat,update,228,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:243,safety,risk,risk-free,243,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:269,safety,depend,depends,269,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:228,security,updat,update,228,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:243,security,risk,risk-free,243,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:269,testability,depend,depends,269,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:106,deployability,releas,release,106,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:123,deployability,continu,continue,123,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:146,safety,test,test,146,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:141,testability,unit,unit,141,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:146,testability,test,test,146,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/pull/16773:321,usability,confirm,confirming,321,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16773
https://github.com/root-project/root/issues/16774:76,deployability,releas,released,76,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:92,deployability,version,versions,92,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:136,deployability,releas,release,136,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:208,deployability,releas,release,208,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:92,integrability,version,versions,92,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:92,modifiability,version,versions,92,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:246,performance,time,timeline,246,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:192,testability,plan,planning,192,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:58,deployability,releas,release,58,"Thanks a lot! From my side, there is no urgency to have a release for Ubuntu 22 and 24: for our tests we switched to a RHEL9 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:96,safety,test,tests,96,"Thanks a lot! From my side, there is no urgency to have a release for Ubuntu 22 and 24: for our tests we switched to a RHEL9 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:96,testability,test,tests,96,"Thanks a lot! From my side, there is no urgency to have a release for Ubuntu 22 and 24: for our tests we switched to a RHEL9 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/issues/16774:26,usability,feedback,feedback,26,@GiacomoXT thanks for the feedback. Let us know how that goes!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16774
https://github.com/root-project/root/pull/16776:230,safety,avoid,avoid,230,"We didn't want to go for `StreamedField` because it may sound to close to streaming in the sense of XRootD streaming. I think once we are deep in the serialization context, ""streamed"" has not that ambiguity anymore. If we want to avoid ""streamed"", we have to go for a longer name, e.g. `rntplStreamerMode(true)` as a dictionary option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16776
https://github.com/root-project/root/pull/16776:164,testability,context,context,164,"We didn't want to go for `StreamedField` because it may sound to close to streaming in the sense of XRootD streaming. I think once we are deep in the serialization context, ""streamed"" has not that ambiguity anymore. If we want to avoid ""streamed"", we have to go for a longer name, e.g. `rntplStreamerMode(true)` as a dictionary option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16776
https://github.com/root-project/root/pull/16776:65,usability,close,close,65,"We didn't want to go for `StreamedField` because it may sound to close to streaming in the sense of XRootD streaming. I think once we are deep in the serialization context, ""streamed"" has not that ambiguity anymore. If we want to avoid ""streamed"", we have to go for a longer name, e.g. `rntplStreamerMode(true)` as a dictionary option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16776
https://github.com/root-project/root/pull/16778:50,availability,cluster,cluster,50,> 100 MB and also double the maximum uncompressed cluster size to 1 GiB. Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:50,deployability,cluster,cluster,50,> 100 MB and also double the maximum uncompressed cluster size to 1 GiB. Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:52,availability,cluster,cluster,52,"> > 100 MB and also double the maximum uncompressed cluster size to 1 GiB. > . > Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB? They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:52,deployability,cluster,cluster,52,"> > 100 MB and also double the maximum uncompressed cluster size to 1 GiB. > . > Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB? They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:231,performance,disk,disk,231,"> > 100 MB and also double the maximum uncompressed cluster size to 1 GiB. > . > Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB? They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:285,performance,memor,memory,285,"> > 100 MB and also double the maximum uncompressed cluster size to 1 GiB. > . > Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB? They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:285,usability,memor,memory,285,"> > 100 MB and also double the maximum uncompressed cluster size to 1 GiB. > . > Are the 2 numbers meant to be both in MiB/GiB or both in MB/GB? They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:88,performance,disk,disk,88,"> They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects. Why are we using 2 different units?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:142,performance,memor,memory,142,"> They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects. Why are we using 2 different units?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:187,testability,unit,units,187,"> They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects. Why are we using 2 different units?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16778:142,usability,memor,memory,142,"> They are meant to be MB and GiB, since the first number refers to compressed bytes on disk, the second number is the sum of uncompressed in-memory objects. Why are we using 2 different units?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16778
https://github.com/root-project/root/pull/16781:76,availability,cluster,cluster,76,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:76,deployability,cluster,cluster,76,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:47,energy efficiency,reduc,reduced,47,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:109,integrability,buffer,buffer,109,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:28,performance,memor,memory,28,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:35,performance,overhead,overhead,35,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:28,usability,memor,memory,28,"> For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. . Is it because we buffer the compressed page before writing them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:78,availability,cluster,cluster,78,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:78,deployability,cluster,cluster,78,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:49,energy efficiency,reduc,reduced,49,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:115,integrability,buffer,buffer,115,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:30,performance,memor,memory,30,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:37,performance,overhead,overhead,37,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:189,performance,memor,memory,189,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:196,performance,overhead,overhead,196,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:30,usability,memor,memory,30,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/pull/16781:189,usability,memor,memory,189,"> > For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. > . > Is it because we buffer the compressed page before writing them? Yes obviously, that's the memory overhead by design and we cannot go lower than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16781
https://github.com/root-project/root/issues/16784:105,interoperability,compatib,compatibility,105,"Maybe someone is using this second variant (p=null) for something, so changing this would break backward compatibility. What is exactly your use case / what you want to achieve? If what you want is to have a new method to get F(x), then that method already exists, it is TH1::GetCumulative, so not sure if it's useful to add a new function name for this. Or what bothers you is that it is a default argument?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:544,deployability,releas,release,544,"Oh. Missed GetCumulative. The thing that probably bothers me is the description of GetQuantiles or rather what is the use case of GetQuantiles with p==nullptr. When you say ""If p is null, it calculates F-1(F(bin_edges)) = bin_edges"", the bin_edges are already known (if it really calculates them inside, that is quite surprising). The really new thing (although maybe not a product, but side-effect) is the p. I understand that removing the default would break backward compatibility, so I am not advocating just removing the thing in the next release. It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:470,interoperability,compatib,compatibility,470,"Oh. Missed GetCumulative. The thing that probably bothers me is the description of GetQuantiles or rather what is the use case of GetQuantiles with p==nullptr. When you say ""If p is null, it calculates F-1(F(bin_edges)) = bin_edges"", the bin_edges are already known (if it really calculates them inside, that is quite surprising). The really new thing (although maybe not a product, but side-effect) is the p. I understand that removing the default would break backward compatibility, so I am not advocating just removing the thing in the next release. It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:412,testability,understand,understand,412,"Oh. Missed GetCumulative. The thing that probably bothers me is the description of GetQuantiles or rather what is the use case of GetQuantiles with p==nullptr. When you say ""If p is null, it calculates F-1(F(bin_edges)) = bin_edges"", the bin_edges are already known (if it really calculates them inside, that is quite surprising). The really new thing (although maybe not a product, but side-effect) is the p. I understand that removing the default would break backward compatibility, so I am not advocating just removing the thing in the next release. It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:673,usability,learn,learning,673,"Oh. Missed GetCumulative. The thing that probably bothers me is the description of GetQuantiles or rather what is the use case of GetQuantiles with p==nullptr. When you say ""If p is null, it calculates F-1(F(bin_edges)) = bin_edges"", the bin_edges are already known (if it really calculates them inside, that is quite surprising). The really new thing (although maybe not a product, but side-effect) is the p. I understand that removing the default would break backward compatibility, so I am not advocating just removing the thing in the next release. It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:128,modifiability,variab,variable,128,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"". Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:230,reliability,doe,does,230,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"". Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:430,usability,learn,learning,430,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"". Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:708,usability,behavi,behavior,708,"> he really new thing (although maybe not a product, but side-effect) is the p. But p stays null. F(x) is stored to a temporary variable, p is not set to F(x). > (if it really calculates them inside, that is quite surprising). It does. It's a technical workaround to have both paths to follow the same code. > It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least). I agree with you. So I would suggest to remove from your title ""add new method to handle this case"". Making it non-default would force everyone to pass an argument. If one wants the old behavior, it will pass nullptr and get the bin edges as before, so no new extra method is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:191,energy efficiency,current,current,191,I missed that p stays null. You showed it in the comment to the other MR... In this case I don't understand what was the idea 23 years ago. I can't imagine the use case for this. I think the current title for the issue is good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/issues/16784:97,testability,understand,understand,97,I missed that p stays null. You showed it in the comment to the other MR... In this case I don't understand what was the idea 23 years ago. I can't imagine the use case for this. I think the current title for the issue is good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16784
https://github.com/root-project/root/pull/16785:151,modifiability,evolv,evolve,151,"> @dpiparo, since you wrote this code last year: #13532. > . > You have any idea why `Py_GetProgramName` was necessary? I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16785
https://github.com/root-project/root/pull/16785:201,performance,time,time,201,"> @dpiparo, since you wrote this code last year: #13532. > . > You have any idea why `Py_GetProgramName` was necessary? I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16785
https://github.com/root-project/root/pull/16785:297,safety,avoid,avoided,297,"> @dpiparo, since you wrote this code last year: #13532. > . > You have any idea why `Py_GetProgramName` was necessary? I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16785
https://github.com/root-project/root/pull/16785:134,testability,simpl,simply,134,"> @dpiparo, since you wrote this code last year: #13532. > . > You have any idea why `Py_GetProgramName` was necessary? I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16785
https://github.com/root-project/root/pull/16785:134,usability,simpl,simply,134,"> @dpiparo, since you wrote this code last year: #13532. > . > You have any idea why `Py_GetProgramName` was necessary? I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16785
https://github.com/root-project/root/pull/16786:253,integrability,pub,public,253,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:260,integrability,interfac,interface,260,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:260,interoperability,interfac,interface,260,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:260,modifiability,interfac,interface,260,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:136,usability,support,support,136,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:80,deployability,API,API,80,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:281,deployability,API,API,281,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:90,energy efficiency,power,power,90,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:376,energy efficiency,power,power,376,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:80,integrability,API,API,80,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:274,integrability,pub,public,274,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:281,integrability,API,API,281,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:80,interoperability,API,API,80,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:281,interoperability,API,API,281,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:457,interoperability,specif,specific,457,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:51,usability,user,users,51,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:97,usability,user,users,97,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:179,usability,clear,clear,179,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:288,usability,guid,guide,288,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:306,usability,user,user,306,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:383,usability,user,users,383,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:403,usability,navigat,navigating,403,"@vepadulano the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users that want to reimplement parts thereof. I'm admittedly not sure if that's a clear enough distinction to warrant the use of the `Internal` namespace; we certainly want the public API to guide the regular user as much as possible to the correct usage of RNTuple and I think ""power"" users are fine with navigating the internals if they need to solve a very specific problem. . I don't know if @jblomer has more to say about this, but I don't have a strong opinion either way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:177,energy efficiency,current,currently,177,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:85,integrability,pub,public,85,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,integrability,interfac,interface,230,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,interoperability,interfac,interface,230,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,modifiability,interfac,interface,230,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:46,performance,time,time,46,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:4,usability,prefer,prefer,4,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:170,usability,user,users,170,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,availability,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:70,deployability,API,API,70,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,deployability,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:80,energy efficiency,power,power,80,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,energy efficiency,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:70,integrability,API,API,70,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:223,integrability,pub,public,223,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,integrability,interfac,interface,230,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:273,integrability,interfac,interface,273,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:525,integrability,interfac,interface,525,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:70,interoperability,API,API,70,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:190,interoperability,compatib,compatibility,190,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,interoperability,interfac,interface,230,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:273,interoperability,interfac,interface,273,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:449,interoperability,semant,semantic,449,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:525,interoperability,interfac,interface,525,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:230,modifiability,interfac,interface,230,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:273,modifiability,interfac,interface,273,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:525,modifiability,interfac,interface,525,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:476,performance,time,time,476,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,reliability,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,safety,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:427,security,sign,signature,427,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:582,testability,monitor,monitoring,582,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:41,usability,user,users,41,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:87,usability,user,users,87,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16786:362,usability,document,documented,362,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16786
https://github.com/root-project/root/pull/16788:60,energy efficiency,core,core,60,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:15,safety,review,review,15,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:251,safety,permiss,permissions,251,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:72,security,team,team,72,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:142,security,team,team,142,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:246,security,team,team,246,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16788:15,testability,review,review,15,"Thanks for the review! I was recently removed from the ROOT core GitHub team, so cannot merge anymore. ~Perhaps a RooFit or ROOT::Math GitHub team makes sense for future commits like this? 🙂~ (never mind, that's not a thing, I had codeowners and team permissions confused ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16788
https://github.com/root-project/root/pull/16791:15,energy efficiency,gpu,gpu,15,relaunched the gpu workflow which was stuck due to a glitch in the clone,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:15,performance,gpu,gpu,15,relaunched the gpu workflow which was stuck due to a glitch in the clone,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:19,usability,workflow,workflow,19,relaunched the gpu workflow which was stuck due to a glitch in the clone,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:646,availability,failur,failure,646,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:76,deployability,fail,failed,76,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:646,deployability,fail,failure,646,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:33,energy efficiency,GPU,GPU,33,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:33,performance,GPU,GPU,33,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:104,performance,Time,Time,104,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:460,performance,time,time,460,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:590,performance,time,time,590,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:646,performance,failur,failure,646,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:76,reliability,fail,failed,76,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:646,reliability,fail,failure,646,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:54,safety,test,tests,54,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:70,safety,test,tests,70,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:148,safety,test,tests,148,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:188,safety,test,tests,188,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:222,safety,test,test,222,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:266,safety,test,tests,266,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:316,safety,test,tests,316,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:358,safety,test,tests,358,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:398,safety,test,tests,398,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:439,safety,test,tests,439,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:455,safety,Test,Test,455,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:503,safety,test,tests,503,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:610,safety,test,tests,610,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:54,testability,test,tests,54,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:70,testability,test,tests,70,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:148,testability,test,tests,148,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:188,testability,test,tests,188,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:222,testability,test,test,222,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:266,testability,test,tests,266,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:316,testability,test,tests,316,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:324,testability,regress,regression,324,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:358,testability,test,tests,358,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:398,testability,test,tests,398,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:439,testability,test,tests,439,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:455,testability,Test,Test,455,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:503,testability,test,tests,503,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16791:610,testability,test,tests,610,"It's doing what it should on the GPU node:. ```. 100% tests passed, 0 tests failed out of 2553. . Label Time Summary:. cling = 150.99 sec*proc (104 tests). longtest = 5430.11 sec*proc (60 tests). matrix = 0.37 sec*proc (1 test). multithreaded = 1747.97 sec*proc (19 tests). python_runtime_deps = 410.85 sec*proc (26 tests). regression = 150.00 sec*proc (103 tests). roottest = 151.36 sec*proc (105 tests). tutorial = 4504.12 sec*proc (825 tests). . Total Test time (real) = 1637.58 sec. . The following tests did not run:. 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled). . ** Elapsed time for group ""Run tests"" 0:27:17.7. ```. The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16791
https://github.com/root-project/root/pull/16795:9,deployability,contain,container,9,"Reverted container backend to (still supported) cni, so hopefully no config changes necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16795
https://github.com/root-project/root/pull/16795:37,usability,support,supported,37,"Reverted container backend to (still supported) cni, so hopefully no config changes necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16795
https://github.com/root-project/root/pull/16810:99,energy efficiency,optim,optimization,99,@jblomer thanks for this. In your comment. > The page pool will require more work. Is that just an optimization or will it be needed to read back the values properly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16810:99,performance,optimiz,optimization,99,@jblomer thanks for this. In your comment. > The page pool will require more work. Is that just an optimization or will it be needed to read back the values properly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16810:113,energy efficiency,optim,optimization,113,"> @jblomer thanks for this. In your comment. > . > > The page pool will require more work. > . > Is that just an optimization or will it be needed to read back the values properly? The ""more work"" is only on optimization, not on correctness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16810:208,energy efficiency,optim,optimization,208,"> @jblomer thanks for this. In your comment. > . > > The page pool will require more work. > . > Is that just an optimization or will it be needed to read back the values properly? The ""more work"" is only on optimization, not on correctness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16810:113,performance,optimiz,optimization,113,"> @jblomer thanks for this. In your comment. > . > > The page pool will require more work. > . > Is that just an optimization or will it be needed to read back the values properly? The ""more work"" is only on optimization, not on correctness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16810:208,performance,optimiz,optimization,208,"> @jblomer thanks for this. In your comment. > . > > The page pool will require more work. > . > Is that just an optimization or will it be needed to read back the values properly? The ""more work"" is only on optimization, not on correctness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16810
https://github.com/root-project/root/pull/16821:62,availability,error,errors,62,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1301,availability,error,error,1301,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1346,availability,error,error,1346,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:42,deployability,build,build,42,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:56,deployability,build,build,56,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:462,deployability,BUILD,BUILD,462,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:534,deployability,build,build,534,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:654,deployability,BUILD,BUILD,654,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:726,deployability,build,build,726,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:839,deployability,BUILD,BUILD,839,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:911,deployability,build,build,911,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1025,deployability,BUILD,BUILD,1025,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1097,deployability,build,build,1097,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1189,deployability,BUILD,BUILD,1189,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1261,deployability,build,build,1261,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:62,performance,error,errors,62,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1301,performance,error,error,1301,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1346,performance,error,error,1346,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:33,reliability,doe,does,33,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:62,safety,error,errors,62,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:443,safety,test,tests,443,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:449,safety,test,testBuildDir,449,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:635,safety,test,tests,635,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:641,safety,test,testBuildDir,641,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:820,safety,test,tests,820,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:826,safety,test,testBuildDir,826,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1006,safety,test,tests,1006,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1012,safety,test,testBuildDir,1012,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1170,safety,test,tests,1170,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1176,safety,test,testBuildDir,1176,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1301,safety,error,error,1301,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1346,safety,error,error,1346,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:443,testability,test,tests,443,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:449,testability,test,testBuildDir,449,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:635,testability,test,tests,635,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:641,testability,test,testBuildDir,641,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:820,testability,test,tests,820,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:826,testability,test,testBuildDir,826,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1006,testability,test,tests,1006,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1012,testability,test,testBuildDir,1012,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1170,testability,test,tests,1170,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1176,testability,test,testBuildDir,1176,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:62,usability,error,errors,62,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1301,usability,error,error,1301,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16821:1346,usability,error,error,1346,"@guitargeek , latest root master does not build. We get build errors like [a]. Looks like https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L411-L418 also need cleanup ( note that note master is [6.35](https://github.com/root-project/root/commit/f1edc0f1b26a9ef675c035ba9160a17be2ad69dc) now). ```. In file included from input_line_10:17:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsAnaConvPdf.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsPdf.h:19:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsReal.h:20:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooArgList.h:19:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-18142fcd273e00e213ed1bd6cacf55cc/build/include/RooAbsCollection.h:417:2: error: ""Please remove this unneeded code."". #error ""Please remove this unneeded code."". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16821
https://github.com/root-project/root/pull/16822:57,availability,state,state,57,"Resolved a conflict in the RN. I might not have used the state of the art GH procedure, apologies for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16822
https://github.com/root-project/root/pull/16822:57,integrability,state,state,57,"Resolved a conflict in the RN. I might not have used the state of the art GH procedure, apologies for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16822
https://github.com/root-project/root/pull/16822:11,interoperability,conflict,conflict,11,"Resolved a conflict in the RN. I might not have used the state of the art GH procedure, apologies for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16822
https://github.com/root-project/root/issues/16826:868,availability,Error,Error,868,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:536,deployability,build,build,536,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:581,deployability,build,build,581,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:752,deployability,releas,release,752,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:767,deployability,version,version,767,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:1173,deployability,build,build,1173,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:1218,deployability,build,build,1218,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:714,energy efficiency,Load,LoadStructureImpl,714,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:432,integrability,Event,EventData,432,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:471,integrability,pub,public,471,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:767,integrability,version,version,767,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:760,interoperability,format,format,760,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:767,modifiability,version,version,767,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:714,performance,Load,LoadStructureImpl,714,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:868,performance,Error,Error,868,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:868,safety,Error,Error,868,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:283,usability,user,user,283,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:458,usability,user,user,458,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16826:868,usability,Error,Error,868,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```. $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;. $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;. $ lsetup ""asetup Athena,main--dev3LCG,latest"";. $ root -l. root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");. Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2. root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo. At:. ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16826
https://github.com/root-project/root/issues/16834:48,energy efficiency,current,currently,48,"Actually, `RFieldBase::Create` and friends also currently don't check for field name validity, this only happens in `RNTupleModel::(Add|Make)Field...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16834
https://github.com/root-project/root/issues/16834:85,safety,valid,validity,85,"Actually, `RFieldBase::Create` and friends also currently don't check for field name validity, this only happens in `RNTupleModel::(Add|Make)Field...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16834
https://github.com/root-project/root/pull/16835:20,deployability,build,build,20,(I cancelled the PR build; sorry I forgot to add `[skip-ci]` to the PR title...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16835
https://github.com/root-project/root/pull/16835:3,usability,cancel,cancelled,3,(I cancelled the PR build; sorry I forgot to add `[skip-ci]` to the PR title...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16835
https://github.com/root-project/root/pull/16836:36,deployability,patch,patch,36,I think we should also backport the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16836
https://github.com/root-project/root/pull/16836:36,safety,patch,patch,36,I think we should also backport the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16836
https://github.com/root-project/root/pull/16836:36,security,patch,patch,36,I think we should also backport the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16836
